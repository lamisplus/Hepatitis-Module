{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/PatientVaccinatedLIst.js","main/webapp/jsx/formSchemas/form1ValidationSchema.js","main/webapp/jsx/helpers/cookieStoragehelpers.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form1.js","main/webapp/jsx/components/Patient/SummaryTypeSelect/SummaryTypeSelect.js","main/webapp/jsx/formSchemas/summaryFormsValidationSchema.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Reactive.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/NonReactive.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Fibrosis.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Cirrhosis.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HepatocellularCarcinoma.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType1.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType2.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType3.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType4.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryFormContainer.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","main/webapp/jsx/components/Patient/Stepper/Stepper.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form2.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form3.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form4.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/PatientCardFollowUp.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/FollowUp.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/LaboratoryRegister.js","main/webapp/jsx/components/Patient/ViralHepatitisFormsContainer.js","main/webapp/jsx/hooks/useLocalStorageState.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","calculate_age","dob","today","Date","birthDate","split","age_now","getFullYear","m","getMonth","getDate","_useState","useState","_useState2","_slicedToArray","loading","_useState3","_useState4","enablePPI","tableRef","useRef","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","PPISelect","children","MaterialTable","icons","title","columns","field","filtering","hidden","isLoading","data","query","Promise","resolve","reject","axios","concat","baseUrl","pageSize","page","headers","Authorization","then","response","result","totalCount","records","map","row","name","firstName","otherName","surname","filter","Boolean","join","id","sex","toLowerCase","charAt","toUpperCase","slice","dateOfBirth","age","undefined","actions","totalRecords","options","headerStyle","backgroundColor","padding","fontWeight","searchFieldStyle","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","sorting","onChangePage","setCurrentPage","useValidateForm2ValuesHook","onSubmit","Form2ValidationSchema","yup","afp","albumin","alt","altValue","antiHDV","apriScore","ascites","ast","astValue","childPughScore","liverBiopsyStage","comment","commobidities","creatinine","ctScan","dateHbvDnaResultReported","dateHbvSampleCollected","dateHbvSampleRequested","dateHbvTestRequested","dateHbvDnaTestRequested","diagnosis_result","fib4","fibroscan","gradeOfEncephalopathy","hbeAg","hbsAgQuantification","hbvDna","hvbDnaValue","hcvRNA","hcRnaValue","hepatitisCoinfection","stagingDateOfLiverBiopsy","pst","pstValue","pmtctEligible","prothrombinTimeNR","severityOfAscites","multipleInfection","stagingDateForLiverBiopsy","totalBiliRubin","directBiliribin","treatmentEligible","ultrasoundScan","urea","formik","useFormik","initialValues","validationSchema","setCookie","daysToExpire","expirationDate","setDate","cookieValue","encodeURIComponent","JSON","stringify","toUTCString","document","cookie","getCookie","cookieArray","decodeURIComponent","i","length","substring","indexOf","parse","library","add","faCheckSquare","faCoffee","faEdit","faTrash","useStyles","borderRadius","demo","palette","background","default","inline","ViralHepatitisForm1","_ref","setStep","countryId","stateId","educationId","employmentStatusId","district","info","setInfo","bmi","hepatitisB","streetAddress","address","careEntryPoint","genderId","phoneNumber","altPhonenumber","pregnancy","breastfeeding","historyOfUsingAbusedSubstance","screening","dateOfFirstHepatitisBPositiveScreening","hepatitisC","personDto","active","dateOfRegistration","assignerId","isDateOfBirthEstimated","maritalStatusId","ninNumber","organizationId","sexId","weight","basicInfo","setBasicInfo","_useState5","_useState6","genders","setGenders","_useState7","_useState8","maritalStatusOptions","setMaritalStatusOptions","_useState9","_useState10","educationOptions","setEducationOptions","_useState11","_useState12","occupationOptions","setOccupationOptions","_useState13","_useState14","relationshipOptions","setRelationshipOptions","_useState15","_useState16","countries","setCountries","_useState17","_useState18","states","setStates","_useState19","_useState20","hepatitisStatus","_useState21","_useState22","provinces","setProvinces","_useState23","_useState24","errors","setErrors","_useState25","_useState26","settopLevelUnitCountryOptions","_useState27","_useState28","ageDisabled","setAgeDisabled","_useState29","_useState30","carePoints","setCarePoints","_useState31","_useState32","setSourceReferral","_useState33","_useState34","setPregnancyStatus","_useState35","_useState36","setDisabledAgeBaseOnAge","_React$useState","React","_React$useState2","open","setOpen","sexCodeset","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","apiUrl","sent","sort","stop","apply","arguments","loadMaritalStatus","useCallback","_callee2","_context2","t0","loadEducation","_callee3","_context3","loadOccupation","_callee4","_context4","loadRelationships","_callee5","_context5","loadTopLevelCountry","_callee6","_context6","loadOrganisationUnitsByParentId","_ref8","_callee7","parentId","_context7","abrupt","_x","setStateByCountryId","console","log","catch","getProvinces","e","_e$target","target","postDataWithToken","_ref9","_callee8","key","_response$data","_response$data2","_context8","post","toast","enrollmentId","enrollmentUuid","message","_x2","_x3","classes","Form1ValidationSchema","coreEntryPoint","phone","useValidateForm1ValuesHook","values","scrollTo","restructuredEnrolmentPayload","alphabetOnly","replace","handleDateOfBirthChange","temp","handleInputChangeBasic","_defineProperty","handleInputChangesForInfo","handleSubmit","_ref10","_callee9","_context9","preventDefault","relationship","Object","every","x","_x4","useEffect","setValues","castCookieValueToForm","setEnrollSetting","getCountryId","getStates","mass","heightSquare","calculateBMI","_Fragment","Card","className","CardContent","_jsxs","style","FormGroup","Label","for","onChange","max","moment","format","border","PhoneInput","containerStyle","inputStyle","country","placeholder","maxLength","masks","ng","at","inputName","checkPhoneNumberBasic","disabled","item","index","Number","landmark","defaultChecked","min","currentDate","setMonth","dobNew","toISOString","Math","abs","onBlur","handleBlur","MatButton","variant","onClick","endIcon","ArrowForward","textTransform","SummaryTypeSelect","setFormValues","_ref$formValues","formValues","select1Value","select2Value","select3Value","maxWidth","Row","Col","Input","event","prevState","useValidateSummaryValuesHook","ReactiveFormSchema","Reactive","hepatitisBDropdown","hepatitisCDropdown","coInfectionDropdown","isDropdownsOpen","setIsDropdownsOpen","Form","justifyContent","marginLeft","IconButton","ExpandMoreIcon","Collapse","in","handleChange","maleNineAndUnder","maleTen2Fourteen","maleFifteenAndAbove","maleTotal","femaleNineAndUnder","femaleTen2Fourteen","femaleFifteenAndAbove","femaleTotal","specialPopulationPWID","specialPopulationPW","NonReactive","Fibrosis","Cirrhosis","HepatocellularCarcinoma","HbvType1","HbvType2","HbvType3","HbvType4","ViralHepatitisSummaryFormContainer","_formMap","formMap","divStyle","Home","setKey","Fragment","Link","to","Button","startIcon","FaUserPlus","size","xl","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","heading","typography","pxToRem","secondaryHeading","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","patientObj","ExpansionPanel","ExpansionPanelSummary","md","root2","lastName","ButtonMui","TiArrowBack","participantId","dateParts","dateObject","gender","Divider","navItemText","SubMenu","patientObjs","Observation","observation","Menu","inverted","Item","setActiveContent","activeContent","route","getAge","Vaccination","vaccine","setVaccine","adverseEffect","batchNumber","doseNumber","patientId","vaccinationFacility","vaccineDate","objValues","setObjValues","saving","setSaving","VACCINE","handleInputChange","Modal","isOpen","showModal","toggle","ModalHeader","ModalBody","CardBody","InputGroup","SaveIcon","loadPatients","CancelIcon","PatientVaccinationHistory","vacinationList","setVaccinationtList","modal","setModal","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","setRecord","patients","_patients","vaccineName","position","Dropdown","LoadEditModal","IconMenu","LoadDeleteModal","margingLeft","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","RecentHistory","VaccinationHistory","PatientnHistory","recentActivities","setRecentActivities","setLoading","useHistory","PatientHistory","personId","activities","LoadViewPage","action","path","actionType","date","viewable","Icon","LoadDeletePage","fontFamily","lineHeight","checkUrl","Biometrics","history","state","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","setDevices","pageLoading","setPageLoading","_React$useState3","_React$useState4","showCapture","setshowCapture","_React$useState5","_React$useState6","setTryAgain","_React$useState7","_React$useState8","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","biometricItems","_biometricItems","_","uniq","extend","captured","includes","_ref3","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","finger","_toConsumableArray","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","src","fingerprintimage","Badge","iso","Alert","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","required","_ref4","validate","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","category","patient_id","questionAnswers","visit_date","datatype","responses","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","chronicMedicationModal","setChronicMedicationModal","supportiveCareModal","setSupportiveCareModal","vaccinationHistory","setVaccinationHistory","inclusionHistory","setInclusionHistory","demograhicHistory","setDemographicHistory","vitalHistory","setVitalHistory","comobitieHistory","setComobitieHistory","reinfectionHistory","setReinfectionHistory","signsSymptomsHistory","setSignsSymptomsHistory","_useState37","_useState38","chronicMedicationHistory","setChronicMedicationHistory","_useState39","_useState40","medicationHistory","setMedicationHistory","_useState41","_useState42","supportiveCarenHistory","setSupportiveCareHistory","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","Demographic","VitalSign","Comorbitie","SignsSymptoms","art","setArt","activeTab","prepId","PatientCardDetail","AddmissionHome","flexGrow","UserRegistration","contact","contactPoint","deceased","deceasedDateTime","email","relationshipId","middleName","relatives","setRelatives","substr","contacts","setContacts","disabledAgeBaseOnAge","showRelative","setShowRelative","userDetail","user","useLocation","setfemaleStatus","_useState43","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","prepSupporter","uniqueClientId","ancUnique","_useState44","_useState45","_useState46","_useState47","_useState48","_useState49","_useState50","hivStatus","setHivStatus","_useState51","_useState52","_useState53","_useState54","setTbStatus","_useState55","_useState56","setKP","_useState57","_useState58","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","setOvcEnrolled","_useState65","_useState66","locationState","loadGenders","getSex","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","newConatctsInfo","contactInfo","line","push","identifiers","altphone","uniqueId","maritalStatus","employmentStatus","education","city","getStateId","patientAge","alert","getSexId","dateOfRegistration1","ninNumberValue","checkNINLimit","getRelationship","handleInputChangeRelatives","patientForm","fullName","POSITION","TOP_RIGHT","autoClose","hideProgressBar","pathname","maritalStatusOption","occupationOption","educationOption","relative","splice","handleEditRelative","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","AddIcon","code","Spinner","patientDTO","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","enrollment","getCharacters","hosiptalNumber","person","hivEnrollment","put","handleCheckBox","checked","floor","random","htmlFor","backButton","instructions","Steppers","activeStep","steps","Stepper","alternativeLabel","label","Step","StepLabel","ViralHepatitisForm2","userId","clinicalParameters","hepatitisBTest","hbeAG","hepatitisCTest","handleInputChangeBasicForHC","handleInputChangeBasicForClinic","enrollmentIds","restructuredDiagnosisPayload","plt","cols","rows","ArrowBackIcon","deleteCookie","formatDate","inputDate","dateArray","year","month","ViralHepatitisForm3","hepatitisBTreatment","dateStarted","dateStopped","hbvPastTreatmentRegimen","hepatitisBRegimenSwitch","adverseEffectReported","newRegime","reasonForSwitch","historyOfAdverseEffect","newRegimen","reasonForHepatitisBTreatment","reasonsForTreatment","treatmentExperience","hepatitisCTreatment","dateCompleted","hcvRetreatment","history_of_AdverseEffect","prescribedDuration","retreatmentAdverseEffect","hepatitisSvr12Testing","dateTested","hcvRNAValue","retreatmentDateTested","retreatmentHcvRNA","retreatmentHcvRNAValue","pastTreatmentExperience","handleInputChangeBasicHB","handleInputChangeBasicHBReason","handleInputChangeBasicHBRegSwitch","handleInputChangeBasicHC","handleInputChangeBasicHCSVR","handleInputChangeBasicHHCV","hbvRegimeSwitchNewRegimen","hbvRegimeSwitchDateStarted","hbvRegimeSwitchDateStopped","hbvRegimeSwitchReason","hcvTreatmentExperience","_form3InitialValues","_yup$object","form3InitialValues","hbvDateStarted","hbvDateStopped","hbvHistoryOfAdverseEffect","hbvNewRegimen","hbvReasonForTreatmentEligibility","hbvReasonsForTreatmentComment","hbvRegimeSwitchHistoryOfAdverseEffect","hbvTreatmentExperience","hcvAdverseEventReported","hcvDateCompleted","hcvDateStopped","hcvDateStarted","hcvHistoryOfAdverseEffect","Form3ValidationSchema","useValidateForm3ValuesHook","restructuredTreatmentPayload","hbvAdverseEffectReported","hbvPastTreatmentRegimenForHcv","hcvRetreatmentDateStarted","hcvRetreatmentDateStopped","hcvRetreatmentHistoryOfAdverseEffect","hcvRetreatmentNewRegimen","hcvRetreatmentPrescribedDuration","hcvRetreatmentAdverseEffect","svr12TestingDateStarted","svr12TestingHcvRna","svr12TestingHcvRnaValue","svr12RetreatmentDateTested","hbvTreatmentRegimenSwitch","hbvTreatmentReasonforTreatment","hcvTreatmentRegimenSwitch","hcvTreatmentRegimenHcvRetreatment","hcvTreatmentSvr12Testing","treatmentExperienceB","svr12RetreatmentHcvRnaValue","FollowupForm","FollowupFormValidationSchema","dateOfVisit","bloodPressure","directBilirubin","treatmentRegimen","nextAppointment","remark","useValidateFollowupFormValuesHook","PatientCardFollowUp","totalBilirubin","prothrombinTime","acites","diagnosis","dateOfHepatitisBPositiveScreening","clinicalName","ViralHepatitisFormsContainer","_useLocalStorageState","defaultValue","_ref$serialize","serialize","_ref$deserialize","deserialize","valueInLocalStorage","localStorage","getItem","removeItem","setState","prevKeyRef","prevKey","current","setItem","useLocalStorageState","_useLocalStorageState2","step","margingRight","App","Router","Switch","Route","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.490be6c1.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url = \"http://localhost:8383/api/v1/\";\r\n// export const token =\r\n//   \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzAwNjk5OTc4fQ.lpa674E5gfxiS8h60CH8hde4sffh-uFkg5IXAHP1FzVE26BI73xLT1UzSIdLFvncOgtDuJVJ3RXJUBRtB9OKoQ\";\r\n\r\n//\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { TiArrowForward } from \"react-icons/ti\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Patients = (props) => {\r\n  //   const [permissions, setPermissions] = useState(props.permissions);\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [enablePPI, setEnablePPI] = useState(true);\r\n  const tableRef = useRef(null);\r\n\r\n  const getHospitalNumber = (identifier) => {\r\n    const hospitalNumber = identifier.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n  const handleRemoteData = (query) =>\r\n    new Promise((resolve, reject) => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}patient?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => response)\r\n        .then((result) => {\r\n          if (result.data === \"\") {\r\n            resolve({\r\n              data: [],\r\n              page: 0,\r\n              totalCount: 0,\r\n            });\r\n          } else {\r\n            resolve({\r\n              data: result.data.records.map((row) => ({\r\n                name: [row.firstName, row.otherName, row.surname]\r\n                  .filter(Boolean)\r\n                  .join(\", \"),\r\n                id: getHospitalNumber(row.identifier),\r\n                sex:\r\n                  row.sex.toLowerCase().charAt(0).toUpperCase() +\r\n                  row.sex.slice(1).toLowerCase(),\r\n                dateOfBirth: row.dateOfBirth,\r\n                age:\r\n                  row.dateOfBirth === 0 ||\r\n                  row.dateOfBirth === undefined ||\r\n                  row.dateOfBirth === null ||\r\n                  row.dateOfBirth === \"\"\r\n                    ? 0\r\n                    : calculate_age(row.dateOfBirth),\r\n                actions: (\r\n                  <div>\r\n                    {/* {permissions.includes(\"view_patient\") ||\r\n                    permissions.includes(\"all_permission\") ? (\r\n                      <SplitActionButton actions={actionItems(row)} />\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                  </div>\r\n                ),\r\n              })),\r\n              page: query.page,\r\n              totalCount: result.data.totalRecords,\r\n            });\r\n          }\r\n        });\r\n    });\r\n  const enablePPIColumns = () => {\r\n    setEnablePPI(!enablePPI);\r\n  };\r\n\r\n  const PPISelect = () => (\r\n    <div>\r\n      {/* {permissions.includes(\"view_patient\") ||\r\n        permissions.includes(\"all_permission\") ? (\r\n          <FormGroup className=\" float-right mr-1\">\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  onChange={enablePPIColumns}\r\n                  checked={!enablePPI}\r\n                  style={{ color: \"#014d88\", fontWeight: \"bold\" }}\r\n                />\r\n              }\r\n              label=\"Show PII\"\r\n              style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n            />\r\n          </FormGroup>\r\n        ) : (\r\n          <h5 style={{ color: \"#3d4465\", fontWeight: \"bold\" }}>Patients</h5>\r\n        )} */}\r\n    </div>\r\n  );\r\n\r\n  const handleChangePage = (page) => {\r\n    setCurrentPage(page + 1);\r\n  };\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        tableRef={tableRef}\r\n        /*onSearchChange={(e) => {\r\n                    handleSearchChange(e);\r\n                }}*/\r\n        icons={tableIcons}\r\n        title={<PPISelect />}\r\n        columns={[\r\n          {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            filtering: false,\r\n            hidden: enablePPI,\r\n          },\r\n          { title: \"Hosp. Number\", field: \"id\", filtering: false },\r\n          { title: \"Sex\", field: \"sex\", filtering: false },\r\n          { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n          /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n          /*{ title: \"Status\", field: \"status\", filtering: false },*/\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={loading}\r\n        data={handleRemoteData}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n            fontSize: \"16px\",\r\n            padding: \"10px\",\r\n            fontWeight: \"bolder\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"50%\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n          sorting: true,\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        //localization={localization}\r\n      />\r\n      {/* <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n          },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          { title: \"Actions\", field: \"actions\", filtering: true },\r\n        ]}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data: result?.data?.records?.map?.((row) => ({\r\n                    name: row.firstName + \" \" + row.lastName,\r\n                    hospital_number: row.participantId,\r\n                    gender: row.gender !== null ? row.gender.display : \"\",\r\n                    age: calculate_age(row.dob),\r\n\r\n                    count: (\r\n                      <Label color=\"blue\" size=\"mini\">\r\n                        {row.vaccinationStatus}\r\n                      </Label>\r\n                    ),\r\n\r\n                    actions: (\r\n                      <div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/patient-history\",\r\n                            state: { patientObj: row },\r\n                          }}\r\n                        >\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            aria-label=\"split button\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(153, 46, 98)\",\r\n                              height: \"30px\",\r\n                              width: \"215px\",\r\n                            }}\r\n                            size=\"large\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <MdDashboard />\r\n                            </Button>\r\n                            <Button\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontSize: \"12px\",\r\n                                  color: \"#fff\",\r\n                                  fontWeight: \"bolder\",\r\n                                }}\r\n                              >\r\n                                Patient Dashboard\r\n                              </span>\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </Link>\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst invalidTextPrompt = \"Invalid input type\";\r\nconst requiredTextPrompt = \"field is required\";\r\n\r\nexport const useValidateForm1ValuesHook = (onSubmit) => {\r\n  const form1InitialValues = {\r\n    stateId: \"\",\r\n    otherName: \"\",\r\n    countryId: \"\",\r\n    coreEntryPoint: \"\",\r\n    pregnancy: \"\",\r\n    weight: \"\",\r\n    height: \"\",\r\n    hepatitisB: \"\",\r\n    breastfeeding: \"\",\r\n    historyOfUsingAbusedSubstance: \"\",\r\n    dateOfFirstHepatitisBPositiveScreening: \"\",\r\n    hepatitisC: \"\",\r\n    surname: \"\",\r\n    firstName: \"\",\r\n    dateOfBirth: \"\",\r\n    maritalStatusId: \"\",\r\n    phone: \"\",\r\n    ninNumber: \"\",\r\n    isDateOfBirthEstimated: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    dateOfRegistration: \"\",\r\n  };\r\n\r\n  const Form1ValidationSchema = yup.object({\r\n    stateId: yup.number(),\r\n    countryId: yup.number(),\r\n    educationId: yup.number(),\r\n    employmentStatusId: yup.number(),\r\n    coreEntryPoint: yup.string(),\r\n    pregnancy: yup.string(),\r\n    weight: yup.number(),\r\n    height: yup.number(),\r\n    hepatitisB: yup.string(),\r\n    breastfeeding: yup.string(),\r\n    historyOfUsingAbusedSubstance: yup.string(),\r\n    dateOfFirstHepatitisBPositiveScreening: yup.date(),\r\n    hepatitisC: yup.string(),\r\n    surname: yup.string(),\r\n    firstName: yup.string(),\r\n    otherName: yup.string(),\r\n    dateOfBirth: yup.date(),\r\n    dateOfRegistration: yup.date(),\r\n    maritalStatusId: yup.number(),\r\n    sexId: yup.number(),\r\n    phone: yup.string(),\r\n    ninNumber: yup.string(),\r\n    isDateOfBirthEstimated: yup.boolean(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form1InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form1ValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n\r\nexport const useValidateForm2ValuesHook = (onSubmit) => {\r\n  const form2InitialValues = {\r\n    afp: \"\",\r\n    albumin: \"\",\r\n    alt: \"\",\r\n    altValue: \"\",\r\n    antiHDV: \"\",\r\n    apriScore: \"\",\r\n    ascites: \"\",\r\n    ast: \"\",\r\n    astValue: \"\",\r\n    childPughScore: \"\",\r\n    liverBiopsyStage: \"\",\r\n    comment: \"\",\r\n    commobidities: \"\",\r\n    creatinine: \"\",\r\n    ctScan: \"\",\r\n    dateHbvDnaResultReported: \"\",\r\n    dateHbvSampleCollected: \"\",\r\n    dateHbvSampleRequested: \"\",\r\n    dateHbvTestRequested: \"\",\r\n    dateHbvDnaTestRequested: \"\",\r\n    diagnosis_result: \"\",\r\n    fib4: \"\",\r\n    fibroscan: \"\",\r\n    gradeOfEncephalopathy: \"\",\r\n    hbeAg: \"\",\r\n    hbsAgQuantification: \"\",\r\n    hbvDna: \"\",\r\n    hvbDnaValue: \"\",\r\n    hcvRNA: \"\",\r\n    hcRnaValue: \"\",\r\n    hepatitisCoinfection: \"\",\r\n    stagingDateOfLiverBiopsy: \"\",\r\n    pst: \"\",\r\n    pstValue: \"\",\r\n    pmtctEligible: \"\",\r\n    prothrombinTimeNR: \"\",\r\n    severityOfAscites: \"\",\r\n    multipleInfection: \"\",\r\n    stagingDateForLiverBiopsy: \"\",\r\n    totalBiliRubin: \"\",\r\n    directBiliribin: \"\",\r\n    treatmentEligible: \"\",\r\n    ultrasoundScan: \"\",\r\n    urea: \"\",\r\n  };\r\n\r\n  const Form2ValidationSchema = yup.object({\r\n    afp: yup.string(),\r\n    albumin: yup.string(),\r\n    alt: yup.string(),\r\n    altValue: yup.string(),\r\n    antiHDV: yup.string(),\r\n    apriScore: yup.string(),\r\n    ascites: yup.string(),\r\n    ast: yup.string(),\r\n    astValue: yup.string(),\r\n    childPughScore: yup.string(),\r\n    liverBiopsyStage: yup.string(),\r\n    comment: yup.string(),\r\n    commobidities: yup.string(),\r\n    creatinine: yup.string(),\r\n    ctScan: yup.string(),\r\n    dateHbvDnaResultReported: yup.date(),\r\n    dateHbvSampleCollected: yup.date(),\r\n    dateHbvSampleRequested: yup.date(),\r\n    dateHbvTestRequested: yup.date(),\r\n    dateHbvDnaTestRequested: yup.date(),\r\n    diagnosis_result: yup.string(),\r\n    fib4: yup.string(),\r\n    fibroscan: yup.string(),\r\n    gradeOfEncephalopathy: yup.number(),\r\n    hbeAg: yup.string(),\r\n    hbsAgQuantification: yup.string(),\r\n    hbvDna: yup.string(),\r\n    hvbDnaValue: yup.string(),\r\n    hcvRNA: yup.string(),\r\n    hcRnaValue: yup.string(),\r\n    hepatitisCoinfection: yup.string(),\r\n    stagingDateOfLiverBiopsy: yup.string(),\r\n    pst: yup.string(),\r\n    pstValue: yup.string(),\r\n    pmtctEligible: yup.string(),\r\n    prothrombinTimeNR: yup.string(),\r\n    severityOfAscites: yup.string(),\r\n    multipleInfection: yup.string(),\r\n    stagingDateForLiverBiopsy: yup.date(),\r\n    totalBiliRubin: yup.string(),\r\n    directBiliribin: yup.string(),\r\n    treatmentEligible: yup.string(),\r\n    ultrasoundScan: yup.string(),\r\n    urea: yup.string(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form2InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form2ValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n\r\nexport const useValidateForm3ValuesHook = (onSubmit) => {\r\n  const form3InitialValues = {\r\n    hbvDateStarted: \"\",\r\n    hbvDateStopped: \"\",\r\n    hbvHistoryOfAdverseEffect: \"\",\r\n    hbvNewRegimen: \"\",\r\n    hbvPastTreatmentRegimen: \"\",\r\n    hbvReasonForTreatmentEligibility: \"\",\r\n    hbvReasonsForTreatmentComment: \"\",\r\n    hbvRegimeSwitchDateStarted: \"\",\r\n    hbvRegimeSwitchDateStopped: \"\",\r\n    hbvRegimeSwitchHistoryOfAdverseEffect: \"\",\r\n    hbvRegimeSwitchNewRegimen: \"\",\r\n    hbvRegimeSwitchReason: \"\",\r\n    hbvTreatmentExperience: \"\",\r\n    hcvAdverseEventReported: \"\",\r\n    hcvDateCompleted: \"\",\r\n    hcvDateStopped: \"\",\r\n    hcvDateStarted: \"\",\r\n    hcvHistoryOfAdverseEffect: \"\",\r\n    pastTreatmentExperience: \"\",\r\n    hbvPastTreatmentRegimen: \"\",\r\n    hcvPrescribedDuration: \"\",\r\n    hcvRegimeSwitchDateStarted: \"\",\r\n    hcvRegimeSwitchDateStopped: \"\",\r\n    hcvRegimeSwitchHistoryOfAdverseEffect: \"\",\r\n    hcvRetreatmentAdverseEffect: \"\",\r\n    hcvRetreatmentDateStarted: \"\",\r\n    hcvRetreatmentDateStopped: \"\",\r\n    hcvRetreatmentNewRegimen: \"\",\r\n    hcvRetreatmentNewRegime: \"\",\r\n    hcvRetreatmentPrescribedDuration: \"\",\r\n    hcvTreatmentExperience: \"\",\r\n    svr12RetreatmentDateTested: \"\",\r\n    svr12RetreatmentHcvRna: \"\",\r\n    svr12RetreatmentHcvRnaValue: \"\",\r\n    svr12TestingDateStarted: \"\",\r\n    svr12TestingHcvRna: \"\",\r\n    svr12TestingHcvRnaValue: \"\",\r\n  };\r\n\r\n  const Form3ValidationSchema = yup.object({\r\n    hbvDateStarted: yup.date(),\r\n    hbvDateStopped: yup.date(),\r\n    hbvHistoryOfAdverseEffect: yup.string(),\r\n    hbvNewRegimen: yup.string(),\r\n    hbvPastTreatmentRegimen: yup.string(),\r\n    hbvReasonForTreatmentEligibility: yup.string(),\r\n    hbvReasonsForTreatmentComment: yup.string(),\r\n    hbvRegimeSwitchDateStarted: yup.date(),\r\n    hbvRegimeSwitchDateStopped: yup.date(),\r\n    hbvRegimeSwitchHistoryOfAdverseEffect: yup.string(),\r\n    hbvRegimeSwitchNewRegimen: yup.string(),\r\n    hbvRegimeSwitchReason: yup.string(),\r\n    hbvTreatmentExperience: yup.string(),\r\n    hcvAdverseEventReported: yup.string(),\r\n    hcvDateCompleted: yup.date(),\r\n    hcvDateStopped: yup.date(),\r\n    hcvDateStarted: yup.date(),\r\n    hcvHistoryOfAdverseEffect: yup.string(),\r\n    pastTreatmentExperience: yup.string(),\r\n    hbvPastTreatmentRegimen: yup.string(),\r\n    hcvPrescribedDuration: yup.number(),\r\n    hcvRegimeSwitchDateStarted: yup.date(),\r\n    hcvRegimeSwitchDateStopped: yup.date(),\r\n    hcvRegimeSwitchHistoryOfAdverseEffect: yup.string(),\r\n    hcvRetreatmentAdverseEffect: yup.string(),\r\n    hcvRetreatmentDateStarted: yup.date(),\r\n    hcvRetreatmentDateStopped: yup.date(),\r\n    hcvRetreatmentNewRegimen: yup.string(),\r\n    hcvRetreatmentNewRegime: yup.string(),\r\n    hcvRetreatmentPrescribedDuration: yup.string(),\r\n    hcvTreatmentExperience: yup.string(),\r\n    svr12RetreatmentDateTested: yup.date(),\r\n    svr12RetreatmentHcvRna: yup.string(),\r\n    svr12RetreatmentHcvRnaValue: yup.string(),\r\n    svr12TestingDateStarted: yup.date(),\r\n    svr12TestingHcvRna: yup.string(),\r\n    svr12TestingHcvRnaValue: yup.string(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form3InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form3ValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n\r\nexport const useValidateFollowupFormValuesHook = (onSubmit) => {\r\n  const followupFormIntialValue = {\r\n    dateOfVisit: \"\",\r\n    weight: \"\",\r\n    height: \"\",\r\n    bmi: \"\",\r\n    bloodPressure: \"\",\r\n    hbsAgQuantification: \"\",\r\n    hbeAg: \"\",\r\n    hbvDna: \"\",\r\n\r\n    alt: \"\",\r\n    ast: \"\",\r\n    pst: \"\",\r\n    totalBiliRubin: \"\",\r\n    directBilirubin: \"\",\r\n    albumin: \"\",\r\n    apriScore: \"\",\r\n    fib4: \"\",\r\n    prothrombinTimeNR: \"\",\r\n    urea: \"\",\r\n    creatinine: \"\",\r\n    ultrasoundScan: \"\",\r\n    afp: \"\",\r\n    fibroscan: \"\",\r\n    ctScan: \"\",\r\n    ascites: \"\",\r\n    severityOfAscites: \"\",\r\n    gradeOfEncephalopathy: \"\",\r\n    childPughScore: \"\",\r\n    stagingDateOfLiverBiopsy: \"\",\r\n    stagingDateForLiverBiopsy: \"\",\r\n    diagnosis_result: \"\",\r\n    treatmentRegimen: \"\",\r\n    nextAppointment: \"\",\r\n    remark: \"\",\r\n  };\r\n\r\n  const FollowupFormValidationSchema = yup.object({\r\n    dateOfVisit: yup.string(),\r\n    weight: yup.string(),\r\n    height: yup.string(),\r\n    bmi: yup.string(),\r\n    bloodPressure: yup.string(),\r\n    hbsAgQuantification: yup.string(),\r\n    hbeAg: yup.string(),\r\n    hbvDna: yup.string(),\r\n\r\n    alt: yup.string(),\r\n    ast: yup.string(),\r\n    pst: yup.string(),\r\n    totalBiliRubin: yup.string(),\r\n    directBilirubin: yup.string(),\r\n    albumin: yup.string(),\r\n    apriScore: yup.string(),\r\n    fib4: yup.string(),\r\n    prothrombinTimeNR: yup.string(),\r\n    urea: yup.string(),\r\n    creatinine: yup.string(),\r\n    ultrasoundScan: yup.string(),\r\n    afp: yup.string(),\r\n    fibroscan: yup.string(),\r\n    ctScan: yup.string(),\r\n    ascites: yup.string(),\r\n    severityOfAscites: yup.string(),\r\n    gradeOfEncephalopathy: yup.string(),\r\n    childPughScore: yup.string(),\r\n    stagingDateOfLiverBiopsy: yup.string(),\r\n    stagingDateForLiverBiopsy: yup.string(),\r\n    diagnosis_result: yup.string(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: followupFormIntialValue,\r\n    onSubmit,\r\n    validationSchema: FollowupFormValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n","export function setCookie(name, value, daysToExpire) {\r\n    const expirationDate = new Date();\r\n    expirationDate.setDate(expirationDate.getDate() + daysToExpire);\r\n  \r\n    let cookieValue = encodeURIComponent(name) + \"=\";\r\n  \r\n    // If the value is not a string, stringify it as JSON\r\n    if (typeof value !== 'string') {\r\n      cookieValue += encodeURIComponent(JSON.stringify(value));\r\n    } else {\r\n      cookieValue += encodeURIComponent(value);\r\n    }\r\n  \r\n    cookieValue += \";expires=\" + expirationDate.toUTCString() + \";path=/\";\r\n  \r\n    document.cookie = cookieValue;\r\n}\r\n  \r\n  export function getCookie(name) {\r\n    const decodedCookie = decodeURIComponent(document.cookie);\r\n    const cookieArray = decodedCookie.split(';');\r\n  \r\n    for (let i = 0; i < cookieArray.length; i++) {\r\n      let cookie = cookieArray[i];\r\n      while (cookie.charAt(0) === ' ') {\r\n        cookie = cookie.substring(1);\r\n      }\r\n  \r\n      if (cookie.indexOf(name + \"=\") === 0) {\r\n        const cookieValue = cookie.substring(name.length + 1, cookie.length);\r\n        \r\n        // Check if the value is JSON and parse it if necessary\r\n        try {\r\n          return JSON.parse(decodeURIComponent(cookieValue));\r\n        } catch (error) {\r\n          // If it's not valid JSON, return the raw value\r\n          return decodeURIComponent(cookieValue);\r\n        }\r\n      }\r\n    }\r\n  \r\n    return null;\r\n}\r\n  \r\n","import React, { useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Form } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm1ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { ArrowForward } from \"@material-ui/icons\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { useCallback } from \"react\";\r\nimport { useState } from \"react\";\r\n// import { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm1 = ({ setStep }) => {\r\n  const [info, setInfo] = useState({\r\n    countryId: 1,\r\n    stateId: \"\",\r\n    dateOfBirth: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    district: \"\",\r\n  });\r\n\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    bmi: \"\",\r\n    hepatitisB: \"\",\r\n    height: \"\",\r\n    streetAddress: \"\",\r\n    address: [],\r\n    // contact: [],\r\n    careEntryPoint: \"\",\r\n    // contactPoint: [],\r\n    // deceased: false,\r\n    // deceasedDateTime: null,\r\n    genderId: \"\",\r\n    // identifier: \"\",\r\n    age: \"\",\r\n    phoneNumber: \"\",\r\n    altPhonenumber: \"\",\r\n    // dob: \"\",\r\n    // district: \"\",\r\n    pregnancy: \"\",\r\n    breastfeeding: \"\",\r\n    historyOfUsingAbusedSubstance: \"\",\r\n    screening: {\r\n      dateOfFirstHepatitisBPositiveScreening: \"\",\r\n      hepatitisC: \"\",\r\n    },\r\n    personDto: {\r\n      active: true,\r\n      address: [\r\n        {\r\n          countryId: info.countryId,\r\n          stateId: info.stateId,\r\n          district: \"\",\r\n        },\r\n      ],\r\n      dateOfBirth: \"\",\r\n      dateOfRegistration: \"\",\r\n      educationId: \"\",\r\n      employmentStatusId: \"\",\r\n      firstName: \"\",\r\n      genderId: \"\",\r\n      identifier: [\r\n        {\r\n          assignerId: 0,\r\n          type: \"\",\r\n          value: \"\",\r\n        },\r\n      ],\r\n      isDateOfBirthEstimated: true,\r\n      maritalStatusId: \"9\",\r\n      ninNumber: \"\",\r\n      organizationId: 1928,\r\n      otherName: \"\",\r\n      sexId: \"376\",\r\n      surname: \"\",\r\n      weight: \"\",\r\n    },\r\n  });\r\n\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [hepatitisStatus, setHepatitisStatus] = useState([\r\n    { id: \"Reactive\", display: \" Reactive\" },\r\n    { id: \"Non-reactive\", display: \" Non-Reactive\" },\r\n  ]);\r\n  const [provinces, setProvinces] = useState([]);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const toggle = () => setOpen(!open);\r\n\r\n  const sexCodeset = async () => {\r\n    const response = await axios.get(`${apiUrl}application-codesets/v2/SEX`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    setGenders(response.data.sort());\r\n  };\r\n\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const CareEntryPoint = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/POINT_ENTRY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setCarePoints(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getHepatitisPoint = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setHepatitisStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/ENROLLMENT_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${apiUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data.sort());\r\n  }, []);\r\n\r\n  const loadOrganisationUnitsByParentId = async (parentId) => {\r\n    const response = await axios.get(\r\n      `${apiUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n\r\n    return age_now;\r\n  };\r\n  const phoneNumberFormatCheck = (phone) => {\r\n    //console.log(\"err\", phone);\r\n    if (\r\n      phone != undefined &&\r\n      typeof phone?.value !== null &&\r\n      typeof phone?.value !== \"undefined\" &&\r\n      phone?.value?.charAt(0) === \"0\"\r\n    ) {\r\n      phone.value = phone.value.replace(\"0\", \"234\");\r\n    }\r\n    return phone;\r\n  };\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${apiUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      if (e.target.value !== \"\" && e.target.value >= 60) {\r\n        toggle();\r\n      }\r\n      if (e.target.value <= 1) {\r\n        setDisabledAgeBaseOnAge(true);\r\n      } else {\r\n        setDisabledAgeBaseOnAge(false);\r\n      }\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: Math.abs(e.target.value) });\r\n  };\r\n\r\n  //Get States from selected country\r\n  const getStates = () => {\r\n    const getCountryId = basicInfo.countryId;\r\n    setStateByCountryId(1);\r\n    setInfo({ ...info, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId(id) {\r\n    axios\r\n      .get(`${apiUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setStates(response.data.sort());\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e?.target?.value;\r\n    // setBasicInfo({ ...basicInfo, stateId: e?.target?.value });\r\n    axios\r\n      .get(`${apiUrl}organisation-units/parent-organisation-units/${stateId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setProvinces(response.data.sort());\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const postDataWithToken = async (data, key) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}${key}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      // Handle the response if needed\r\n      console.log(\"Post successful:\", response.data);\r\n      toast.success(\"Enrolment submitted successfully\");\r\n\r\n      setCookie(\r\n        \"enrollmentIds\",\r\n        {\r\n          enrollmentId: response.data?.enrollmentId,\r\n          enrollmentUuid: response.data?.enrollmentUuid,\r\n        },\r\n        1\r\n      );\r\n      setStep(1);\r\n      return response.data;\r\n    } catch (error) {\r\n      // Handle any errors that occurred during the request\r\n      toast.error(\"Enrolment failed\");\r\n      console.error(\"Error posting data:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    const restructuredEnrolmentPayload = {\r\n      bmi: values.weight / values.height,\r\n      breastfeeding: values.breastfeeding,\r\n      coreEntryPoint: values.coreEntryPoint,\r\n      height: values.height,\r\n      hepatitisB: values.hepatitisB,\r\n      historyOfUsingAbusedSubstance: values.historyOfUsingAbusedSubstance,\r\n\r\n      personDto: {\r\n        active: true,\r\n        address: [\r\n          {\r\n            countryId: values.countryId,\r\n            stateId: values.stateId,\r\n          },\r\n        ],\r\n        dateOfBirth: values.dateOfBirth,\r\n        dateOfRegistration: values.dateOfRegistration,\r\n        educationId: values.educationId,\r\n        employmentStatusId: values.employmentStatusId,\r\n        firstName: values.firstName,\r\n        genderId: values.sexId,\r\n        identifier: [\r\n          {\r\n            assignerId: 0,\r\n            type: \"string\",\r\n            value: \"string\",\r\n          },\r\n        ],\r\n        isDateOfBirthEstimated:\r\n          values.isDateOfBirthEstimated === \"true\" ? true : false,\r\n        maritalStatusId: values.maritalStatusId,\r\n        ninNumber: values.ninNumber,\r\n        organizationId: 0,\r\n        otherName: values.otherName,\r\n        sexId: values.sexId,\r\n        surname: values.surname,\r\n      },\r\n      pregnancy: values.pregnancy,\r\n      screening: {\r\n        dateOfFirstHepatitisBPositiveScreening:\r\n          values.dateOfFirstHepatitisBPositiveScreening,\r\n        hepatitisC: values.hepatitisC,\r\n      },\r\n      weight: values.weight,\r\n    };\r\n\r\n    setCookie(\"hepatitis1\", values, 1);\r\n    setCookie(\"heaptitis1PayloadValue\", restructuredEnrolmentPayload, 1);\r\n    postDataWithToken(restructuredEnrolmentPayload, \"hepatitis/enrollment\");\r\n    // setStep(1);\r\n  };\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm1ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis1\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const calculateBMI = () => {\r\n    let mass = basicInfo.weight;\r\n    let heightSquare = basicInfo.height * basicInfo.height;\r\n\r\n    setBasicInfo({ ...basicInfo, bmi: mass / heightSquare });\r\n\r\n    console.log(mass / heightSquare);\r\n\r\n    return mass / heightSquare;\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n\r\n  // to capture the error\r\n  let temp = { ...errors };\r\n  const validate = () => {\r\n    temp.surname = basicInfo.personDto.surname ? \"\" : \"Surname is required\";\r\n    temp.firstName = basicInfo.personDto.firstName\r\n      ? \"\"\r\n      : \"First name is required\";\r\n    temp.phone = basicInfo.phone ? \"\" : \"Phone Number  is required.\";\r\n    temp.district = info.district ? \"\" : \"Province/LGA is required.\";\r\n    temp.stateId = info.stateId ? \"\" : \"State is required.\";\r\n    temp.dateOfBirth = info.dateOfBirth ? \"\" : \"Date of Birth is required.\";\r\n    temp.dateOfRegistration = info.dateOfRegistration\r\n      ? \"\"\r\n      : \"Date of Registration is required.\";\r\n    temp.maritalStatusId = basicInfo.maritalStatusId\r\n      ? \"\"\r\n      : \"Marital Status is required\";\r\n    temp.educationId = info.educationId ? \"\" : \"Education is required\";\r\n    temp.relationship = basicInfo.relationship\r\n      ? \"\"\r\n      : \"Relationship is required\";\r\n    temp.genderId = basicInfo.personDto.genderId ? \"\" : \"sex is required\";\r\n    temp.careEntryPoint = basicInfo.careEntryPoint\r\n      ? \"\"\r\n      : \"careEntryPoint is required\";\r\n    temp.pregnancy = basicInfo.pregnancy ? \"\" : \"pregnancy status is required\";\r\n    temp.weight = basicInfo.weight ? \"\" : \"Weight is required\";\r\n    temp.height = basicInfo.height ? \"\" : \"Height is required\";\r\n    temp.hepatitisB = basicInfo.hepatitisB ? \"\" : \"HepatitisB is required\";\r\n    temp.breastfeeding = basicInfo.breastfeeding\r\n      ? \"\"\r\n      : \"Breastfeeding status is required\";\r\n    temp.dateOfFirstHepatitisBPositiveScreening = basicInfo.screening\r\n      .dateOfFirstHepatitisBPositiveScreening\r\n      ? \"\"\r\n      : \"Date of first HepatitisB positive screening is required\";\r\n\r\n    //\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setBasicInfo({ ...basicInfo, [inputName]: e });\r\n  };\r\n\r\n  // handle input changes\r\n  const handleInputChangeBasic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    //manupulate inpute fields base on gender/sex\r\n    // if (e.target.name === \"sexId\" && e.target.value === \"377\") {\r\n    //   setfemaleStatus(true);\r\n    // }\r\n    if (e.target.name === \"firstName\") {\r\n      // const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"genderId\" && e.target.value !== \"\") {\r\n      console.log(e.target.name);\r\n\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"surname\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      });\r\n    } else if (\r\n      e.target.name === \"dateOfFirstHepatitisBPositiveScreening\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        screening: {\r\n          ...basicInfo.screening,\r\n          dateOfFirstHepatitisBPositiveScreening: e.target.value,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"otherName\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: name,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"stateId\" && e.target.value !== \"\") {\r\n      getProvinces(e);\r\n    } else if (e.target.name === \"hepatitisC\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        screening: {\r\n          ...basicInfo.screening,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      });\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleInputChangesForInfo = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setInfo({ ...info, [e.target.name]: e.target.value });\r\n    //manupulate inpute fields base on gender/sex\r\n    if (e.target.name === \"stateId\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          address: [\r\n            {\r\n              countryId: info.countryId,\r\n              stateId: e.target.value,\r\n              district: info.district,\r\n            },\r\n          ],\r\n        },\r\n      });\r\n\r\n      getProvinces(e);\r\n    }\r\n\r\n    if (e.target.name === \"dateOfBirth\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          dateOfBirth: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"dateOfRegistration\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          dateOfRegistration: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"educationId\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          educationId: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"employmentStatusId\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          employmentStatusId: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (\r\n      e.target.name === \"dateOfRdistrictegistration\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          address: [\r\n            {\r\n              countryId: info.countryId,\r\n              stateId: info.stateId,\r\n              district: e.target.value,\r\n            },\r\n          ],\r\n        },\r\n      });\r\n    }\r\n\r\n    // }\r\n    // if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n    //   const name = alphabetOnly(e.target.value);\r\n    //   setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    // }\r\n    // if (e.target.name === \"surname\" && e.target.value !== \"\") {\r\n    //   const name = alphabetOnly(e.target.value);\r\n    //   setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    // }\r\n    // if (e.target.name === \"otherName\" && e.target.value !== \"\") {\r\n    //   const name = alphabetOnly(e.target.value);\r\n    //   setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    // }\r\n\r\n    // if (e.target.name === \"stateId\" && e.target.value !== \"\") {\r\n    //   getProvinces(e);\r\n    // }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validating the input\r\n    window.scrollTo(0, 0);\r\n\r\n    console.log(basicInfo);\r\n    console.log(info);\r\n\r\n    if (validate()) {\r\n      console.log(\"good to go\", basicInfo);\r\n      postDataWithToken(basicInfo, \"hepatitis/enrollment\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n    sexCodeset();\r\n    PregnancyStatus();\r\n    CareEntryPoint();\r\n    SourceReferral();\r\n    loadMaritalStatus();\r\n    loadTopLevelCountry();\r\n    loadRelationships();\r\n    loadOrganisationUnitsByParentId();\r\n    EnrollmentSetting();\r\n    loadEducation();\r\n    getProvinces();\r\n    setStateByCountryId();\r\n    loadOccupation();\r\n    getStates();\r\n    GetCountry();\r\n    // getHepatitisPoint();\r\n  }, []);\r\n\r\n  // calculate bmi when weight and height changes\r\n  useEffect(() => {\r\n    if (basicInfo.weight && basicInfo.height) {\r\n      calculateBMI();\r\n    }\r\n  }, [basicInfo.weight, basicInfo.height, info.stateId]); // Runs whenever 'data' changes\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Demography\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <div className=\"row\">\r\n                    {/* <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"facilityId\">\r\n                            Facility Id <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"facilityId\"\r\n                            id=\"facilityId\"\r\n                            value={basicInfo.facilityId}\r\n                            onChange={handleInputChangeBasic}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.facilityId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.facilityId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div> */}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfRegistration\">\r\n                          Date of registration\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dateOfRegistration\"\r\n                          id=\"dateOfRegistration\"\r\n                          value={info.dateOfRegistration}\r\n                          onChange={handleInputChangesForInfo}\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.dateOfRegistration !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateOfRegistration}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"surname\">\r\n                          Surname <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"surname\"\r\n                          id=\"surname\"\r\n                          value={basicInfo.personDto.surname}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.surname !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.surname}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"firstName\">\r\n                          Firstname <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          id=\"firstName\"\r\n                          value={basicInfo.personDto.firstName}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.firstName !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.firstName}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"otherName\">Other name </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"otherName\"\r\n                          id=\"otherName\"\r\n                          value={basicInfo.personDto.otherName}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.otherName !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.otherName}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Phone Number <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: \"100%\",\r\n                            border: \"1px solid #014D88\",\r\n                          }}\r\n                          inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                          country={\"ng\"}\r\n                          placeholder=\"(234)7099999999\"\r\n                          maxLength={5}\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                          value={basicInfo.phoneNumber}\r\n                          onChange={(e) => {\r\n                            setErrors({ ...errors, phone: \"\" });\r\n                            checkPhoneNumberBasic(e, \"phone\");\r\n                          }}\r\n                          //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                        />\r\n                        {errors.phone !== \"\" ? (\r\n                          <span className={classes.error}>{errors.phone}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                        {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {/* <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"residentialAddress\">\r\n                            Residential Address{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"residentialAddress\"\r\n                            id=\"residentialAddress\"\r\n                            value={basicInfo.residentialAddress}\r\n                            onChange={handleInputChangeBasic}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.residentialAddress !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.residentialAddress}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div> */}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"countryId\">\r\n                          Country <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          // type=\"text\"\r\n                          name=\"countryId\"\r\n                          id=\"countryId\"\r\n                          value={info.countryId}\r\n                          onChange={handleInputChangesForInfo}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        >\r\n                          {countries.map((item, index) => (\r\n                            <option value={Number(item.id)} key={index}>\r\n                              {item.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.countryId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.countryId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"stateId\">\r\n                          State <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          value={info.stateId}\r\n                          onChange={handleInputChangesForInfo}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {states.map((item, index) => (\r\n                            <option value={Number(item.id)} key={index}>\r\n                              {item.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Province/District/LGA{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          value={info.district}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          onChange={handleInputChangesForInfo}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.district !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"landmark\">Landmark </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          id=\"landmark\"\r\n                          value={basicInfo.landmark}\r\n                          onChange={handleInputChangeBasic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.landmark !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.landmark}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {/* new date of registration with actual/estimated date  */}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Date Of Birth</Label>\r\n                        <div className=\"radio\">\r\n                          <label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              value=\"Actual\"\r\n                              name=\"dateOfBirth\"\r\n                              defaultChecked\r\n                              onChange={(e) => handleDateOfBirthChange(e)}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />{\" \"}\r\n                            Actual\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                          <label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              value=\"Estimated\"\r\n                              name=\"dateOfBirth\"\r\n                              onChange={(e) => handleDateOfBirthChange(e)}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />{\" \"}\r\n                            Estimated\r\n                          </label>\r\n                        </div>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {/* end of new date of reg with actual/estimated  date */}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfBirth\">\r\n                          Date of birth\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dateOfBirth\"\r\n                          id=\"dateOfBirth\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          value={info.dateOfBirth}\r\n                          onChange={handleInputChangesForInfo}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.dateOfBirth !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateOfBirth}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Age</Label>\r\n                        <input\r\n                          type=\"number\"\r\n                          name=\"age\"\r\n                          className=\"form-control\"\r\n                          id=\"age\"\r\n                          min=\"10\"\r\n                          value={basicInfo.age}\r\n                          disabled={ageDisabled}\r\n                          onChange={handleAgeChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <p>\r\n                        <b style={{ color: \"red\" }}>\r\n                          {basicInfo.age !== \"\" && basicInfo.age < 10\r\n                            ? \"The minimum age is 10\"\r\n                            : \" \"}{\" \"}\r\n                        </b>\r\n                      </p>\r\n                    </div>\r\n\r\n                    {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"isDateOfBirthEstimated\">\r\n                          Is date Of estimated\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          // type=\"date\"\r\n                          name=\"isDateOfBirthEstimated\"\r\n                          id=\"isDateOfBirthEstimated\"\r\n                          value={basicInfo.isDateOfBirthEstimated}\r\n                          onChange={handleInputChangeBasic}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value={true}>Yes</option>\r\n                          <option value={false}>No</option>\r\n                        </select>\r\n                        {formik.errors.isDateOfBirthEstimated !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.isDateOfBirthEstimated}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div> */}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"employmentStatusId\">Occupation</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"employmentStatusId\"\r\n                          id=\"employmentStatusId\"\r\n                          value={info.employmentStatusId}\r\n                          onChange={handleInputChangesForInfo}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {occupationOptions.map((item, index) => (\r\n                            <option\r\n                              value={Number(item.id)}\r\n                              key={Number(item.id)}\r\n                            >\r\n                              {item.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {/* {errors.district !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"maritalStatusId\">\r\n                          Marital status\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"maritalStatusId\"\r\n                          id=\"maritalStatusId\"\r\n                          value={basicInfo.maritalStatusId}\r\n                          onChange={handleInputChangeBasic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {maritalStatusOptions.map((item, index) => (\r\n                            <option value={Number(item.id)}>\r\n                              {item.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.maritalStatusId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.maritalStatusId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"educationId\">\r\n                          Education <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          // type=\"text\"\r\n                          name=\"educationId\"\r\n                          id=\"educationId\"\r\n                          value={info.educationId}\r\n                          onChange={handleInputChangesForInfo}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option>Select</option>\r\n                          {educationOptions.map((item, index) => (\r\n                            <option value={Number(item.id)}>\r\n                              {item.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.educationId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.educationId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"relationship\">\r\n                          Relationship <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"relationship\"\r\n                          id=\"relationship\"\r\n                          value={basicInfo.relationship}\r\n                          onChange={handleInputChangeBasic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option>Select</option>\r\n                          {relationshipOptions.map((item, index) => (\r\n                            <option value={Number(item.id)}>\r\n                              {item.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.relationship !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.relationship}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"sexId\">\r\n                          Sex <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"genderId\"\r\n                          id=\"genderId\"\r\n                          value={basicInfo.personDto.genderId}\r\n                          onChange={handleInputChangeBasic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option>Select</option>\r\n                          {genders.map((item, index) => (\r\n                            <option value={Number(item.id)}>\r\n                              {item.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.genderId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.genderId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ninNumber\">NIN number </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ninNumber\"\r\n                          id=\"ninNumber\"\r\n                          value={basicInfo.ninNumber}\r\n                          onChange={handleInputChangeBasic}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.ninNumber !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ninNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Enrolment\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"coreEntryPoint\">\r\n                        Care entry point\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"careEntryPoint\"\r\n                        id=\"careEntryPoint\"\r\n                        value={basicInfo.careEntryPoint}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        {carePoints.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.careEntryPoint !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.careEntryPoint}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"sex\">\r\n                          Sex <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"sex\"\r\n                          id=\"sex\"\r\n                          value={basicInfo.sex}\r\n                          onChange={handleInputChangeBasic}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"male\">Male</option>\r\n                          <option value=\"female\">Female</option>\r\n                        </select>\r\n                        {formik.errors.sex !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.sex}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div> */}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"pregnancy\">\r\n                        Pregnancy <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"pregnancy\"\r\n                        id=\"pregnancy\"\r\n                        value={basicInfo.pregnancy}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        <option value=\"NO\">No </option>\r\n                        <option value=\"YES\">Yes </option>\r\n                        {/* {pregnancyStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))} */}\r\n                      </select>\r\n                      {errors.pregnancy !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.pregnancy}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"weight\">\r\n                        Weight (in KG) <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        id=\"weight\"\r\n                        value={basicInfo.weight}\r\n                        onChange={handleInputChangeBasic}\r\n                        onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {errors.weight !== \"\" ? (\r\n                        <span className={classes.error}>{errors.weight}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"height\">\r\n                        Height (In M) <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        name=\"height\"\r\n                        id=\"height\"\r\n                        value={basicInfo.height}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {errors.height !== \"\" ? (\r\n                        <span className={classes.error}>{errors.height}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"bmi\">BMI </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"bmi\"\r\n                          id=\"bmi\"\r\n                          value={basicInfo.bmi}\r\n                          onChange={handleInputChangeBasic}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.bmi !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.bmi}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div> */}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"hepatitisB\">\r\n                        Hepatitis B (HBsAg){\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"hepatitisB\"\r\n                        id=\"hepatitisB\"\r\n                        value={basicInfo.hepatitisB}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        {hepatitisStatus.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {/* <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"hepatitisB\"\r\n                        id=\"hepatitisB\"\r\n                        onChange={handleInputChangeBasic}\r\n                        onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      /> */}\r\n                      {errors.hepatitisB !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.hepatitisB}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"breastfeeding\">\r\n                        Breastfeeding <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"breastfeeding\"\r\n                        id=\"breastfeeding\"\r\n                        value={basicInfo.breastfeeding}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {errors.breastfeeding !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.breastfeeding}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"historyOfUsingAbusedSubstance\">\r\n                        History of using abused substance{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"historyOfUsingAbusedSubstance\"\r\n                        id=\"historyOfUsingAbusedSubstance\"\r\n                        value={basicInfo.historyOfUsingAbusedSubstance}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.historyOfUsingAbusedSubstance !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.historyOfUsingAbusedSubstance}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Screening\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"dateOfFirstHepatitisBPositiveScreening\">\r\n                        Date of first Hep. B positive screening{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        name=\"dateOfFirstHepatitisBPositiveScreening\"\r\n                        id=\"dateOfFirstHepatitisBPositiveScreening\"\r\n                        value={\r\n                          basicInfo.screening\r\n                            .dateOfFirstHepatitisBPositiveScreening\r\n                        }\r\n                        onChange={handleInputChangeBasic}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {errors.dateOfFirstHepatitisBPositiveScreening !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateOfFirstHepatitisBPositiveScreening}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"hepatitisC\">Hepatitis C (HCVAb) </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"hepatitisC\"\r\n                        id=\"hepatitisC\"\r\n                        value={basicInfo.screening.hepatitisC}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        {hepatitisStatus.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n\r\n                      {/* <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"hepatitisC\"\r\n                        id=\"hepatitisC\"\r\n                        value={basicInfo.hepatitisC}\r\n                        onChange={handleInputChangeBasic}\r\n                        onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      /> */}\r\n                      {/* {errors.pregnancy !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.pregnancy}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {false ? <Spinner /> : \"\"}\r\n\r\n            <br />\r\n            <div className=\"d-flex justify-content-end\">\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSubmit}\r\n                className={classes.button}\r\n                endIcon={<ArrowForward />}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n              </MatButton>\r\n            </div>\r\n            {/* </Form> */}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm1;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, FormGroup, Input } from \"reactstrap\";\r\n\r\nconst SummaryTypeSelect = ({\r\n  setFormValues,\r\n  formValues: { select1Value, select2Value, select3Value },\r\n}) => {\r\n  return (\r\n    <div style={{ maxWidth: \"400px\" }}>\r\n      <Row className=\"d-flex justify-content-between\">\r\n        <Col>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"summary-type\"\r\n              id=\"summary-type\"\r\n              value={select1Value}\r\n              onChange={(event) => setFormValues(prevState => {\r\n                return { ...prevState, select1Value: event.target.value, select2Value: \"\" }\r\n              })}\r\n            >\r\n              <option value=\"\">Summary type</option>\r\n              <option value=\"Hepatitis B\">Hepatitis B</option>\r\n              <option value=\"Hepatitis C\">Hepatitis C</option>\r\n              <option value=\"CoInfection\">CoInfection</option>\r\n            </Input>\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        {select1Value !== \"\" && (\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select2\"\r\n                id=\"select2\"\r\n                value={select2Value}\r\n                onChange={(event) => setFormValues(prevState => {\r\n                  return { ...prevState, select2Value: event.target.value, select3Value: \"\" }\r\n                })}\r\n                disabled={select1Value === \"\"}\r\n              >\r\n                <option value=\"\">select type for {select1Value}</option>\r\n\r\n                {select1Value === \"Hepatitis B\" && (\r\n                  <>\r\n                    <option value=\"Diagnosis\">Diagnosis</option>\r\n                    <option value=\"Complications\">Complications</option>\r\n                    <option value=\"Treatment\">Treatment</option>\r\n                    <option value=\"Monitoring\">Monitoring</option>\r\n                    <option value=\"Mortality\">Mortality</option>\r\n                  </>\r\n                )}\r\n                {select1Value === \"Hepatitis C\" && (\r\n                  <>\r\n                    <option value=\"Screening/Diagnosis\">\r\n                      Screening/Diagnosis\r\n                    </option>\r\n                    <option value=\"HCV Complications\">HCV Complications</option>\r\n                    <option value=\"HCV Treatment\">HCV Treatment</option>\r\n                    <option value=\"HCV Treatment Effectiveness\">\r\n                      HCV Treatment Effectiveness\r\n                    </option>\r\n                    <option value=\"HCV Re-treatment\">HCV Re-treatment</option>\r\n                    <option value=\"HCV Related Mortality\">\r\n                      HCV Related Mortality\r\n                    </option>\r\n                  </>\r\n                )}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        )}\r\n\r\n\r\n        {select2Value !== \"\" && select1Value !== \"\" && (\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select3\"\r\n                id=\"select3\"\r\n                value={select3Value}\r\n                onChange={(event) => setFormValues(prevState => {\r\n                  return { ...prevState, select3Value: event.target.value }\r\n                })}\r\n                disabled={select2Value === \"\"}\r\n              >\r\n                <option value=\"\">\r\n                  Select type for {select1Value} {select2Value}\r\n                </option>\r\n                {select2Value === \"Diagnosis\" && (\r\n                  <>\r\n                    <option value=\"Reactive\">Reactive</option>\r\n                    <option value=\"Non Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Complications\" && (\r\n                  <>\r\n                    <option value=\"Fibrosis\">Fibrosis</option>\r\n                    <option value=\"Cirrhosis\">Cirrhosis</option>\r\n                    <option value=\"Hepatocellular Carcinoma\">\r\n                      Hepatocellular Carcinoma\r\n                    </option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Monitoring\" && (\r\n                  <>\r\n                    <option value=\"Monitoring Reactive\">Reactive</option>\r\n                    <option value=\"Monitoring Non Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Mortality\" && (\r\n                  <>\r\n                    <option value=\"Mortality Reactive\">Reactive</option>\r\n                    <option value=\"Mortality Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Treatment\" && (\r\n                  <>\r\n                    <option value=\"HBV DNA <2000 IU/ml\">\r\n                      HBV DNA {\"<\"}2000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBV DNA >=2000 IU/ml\">\r\n                      HBV DNA {\">=\"}2000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBV DNA >=200000 IU/ml\">\r\n                      HBV DNA {\">=\"}200,000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBegAg +ve\">HBegAg +ve</option>\r\n                  </>\r\n                )}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SummaryTypeSelect\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useValidateSummaryValuesHook = (onSubmit) => {\r\n  const reactiveFormInitialValues = {\r\n   \"maleNineAndUnder\": \"\",\r\n   \"maleTen2Fourteen\": \"\",\r\n   \"maleFifteenAndAbove\": \"\",\r\n   \"maleTotal\" : \"\",\r\n   \"femaleNineAndUnder\": \"\",\r\n   \"femaleTen2Fourteen\": \"\",\r\n   \"femaleFifteenAndAbove\": \"\",\r\n   \"femaleTotal\" : \"\",\r\n   \"specialPopulationPWID\" : \"\",\r\n   \"specialPopulationPW\" : \"\",\r\n  };\r\n\r\n  const ReactiveFormSchema = yup.object({\r\n    \"maleNineAndUnder\": yup.string(),\r\n    \"maleTen2Fourteen\": yup.string(),\r\n    \"maleFifteenAndAbove\": yup.string(),\r\n    \"maleTotal\" : yup.string(),\r\n    \"femaleNineAndUnder\": yup.string(),\r\n    \"femaleTen2Fourteen\": yup.string(),\r\n    \"femaleFifteenAndAbove\": yup.string(),\r\n    \"femaleTotal\" : yup.string(),\r\n    \"specialPopulationPWID\" : yup.string(),\r\n    \"specialPopulationPW\" : yup.string(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: reactiveFormInitialValues,\r\n    onSubmit,\r\n    validationSchema: ReactiveFormSchema,\r\n  });\r\n   return { formik };;\r\n};","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Reactive = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Reactive\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reactive;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst NonReactive = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Non-Reactive\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NonReactive;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Fibrosis = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Fibrosis\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Fibrosis;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Cirrhosis = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Cirrhosis\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cirrhosis;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HepatocellularCarcinoma = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Hepatocellular Carcinoma\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HepatocellularCarcinoma;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType1 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\"<\"} 2000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType1;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType2 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\">=\"}2000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType2;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType3 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\">=\"}200000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType3;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType4 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBegAg +ve\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType4;\r\n","import React, { useState } from \"react\";\r\nimport SummaryTypeSelect from \"./SummaryTypeSelect/SummaryTypeSelect\";\r\nimport Reactive  from \"../Patient/ViralHepatitisSummaryForms/Reactive\";\r\nimport NonReactive from \"./ViralHepatitisSummaryForms/NonReactive\";\r\nimport Fibrosis from \"./ViralHepatitisSummaryForms/Fibrosis\";\r\nimport Cirrhosis from \"./ViralHepatitisSummaryForms/Cirrhosis\";\r\nimport HepatocellularCarcinoma from \"./ViralHepatitisSummaryForms/HepatocellularCarcinoma\";\r\nimport HbvType1 from \"./ViralHepatitisSummaryForms/HbvType1\";\r\nimport HbvType2 from \"./ViralHepatitisSummaryForms/HbvType2\";\r\nimport HbvType3 from \"./ViralHepatitisSummaryForms/HbvType3\";\r\nimport HbvType4 from \"./ViralHepatitisSummaryForms/HbvType4\";\r\n\r\nconst ViralHepatitisSummaryFormContainer = () => {\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    select1Value: \"\",\r\n    select2Value: \"\",\r\n    select3Value: \"\",\r\n});\r\n\r\nconst formMap = {\r\n    \"Reactive\" : <Reactive/>,\r\n    \"Non Reactive\" : <NonReactive/>,\r\n    \"Fibrosis\" : <Fibrosis/>,\r\n    \"Cirrhosis\" : <Cirrhosis/>,\r\n    \"Hepatocellular Carcinoma\" : <HepatocellularCarcinoma/>,\r\n    \"HBV DNA <2000 IU/ml\" : <HbvType1/>,\r\n    \"HBV DNA >=2000 IU/ml\" : <HbvType2/>,\r\n    \"HBV DNA >=200000 IU/ml\" : <HbvType3/>,\r\n    \"HBegAg +ve\" : <HbvType4/>,\r\n    \"Mortality Reactive\" : <div> Mortality Reactive</div>,\r\n    \"Mortality Reactive\" : <div> Mortality Reactive</div>,\r\n    \"Monitoring Reactive\" : <div>Monitoring Reactive</div>,\r\n    \"Monitoring Non Reactive\" : <div>Monitoring Non Reactive</div>,\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <SummaryTypeSelect formValues={formValues} setFormValues={setFormValues}/>\r\n      </div>\r\n\r\n      <div className=\"my-2\" style={{fontWeight: \"600\"}}>\r\n        <span>{formValues.select1Value && ` ${formValues.select1Value} `}</span>\r\n        <span>{formValues.select2Value && ` | ${formValues.select2Value } `}</span>\r\n        <span style={{color: \"#014d88\"}}>{formValues.select3Value && `| ${formValues.select3Value} `}</span>\r\n      </div>\r\n\r\n      <div>\r\n       {formMap[formValues.select3Value]}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisSummaryFormContainer;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport PatientList from \"./Patient/PatientList\";\r\nimport PatientVaccinatedLIst from \"./Patient/PatientVaccinatedLIst\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nimport ViralHepatitis from \"./Patient/ViralHepatitisForms/Form1\";\r\nimport ViralHepatitisSummaryFormContainer from \"./Patient/ViralHepatitisSummaryFormContainer\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState(\"home\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>Viral Hepatitis</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link to={\"register-patient\"}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mb-10\"\r\n          startIcon={<FaUserPlus size=\"10\" />}\r\n          style={{ backgroundColor: \"#014d88\" }}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n\r\n                  <Tab eventKey=\"visualization\" title=\"Hepatitis Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n\r\n                  <Tab eventKey=\"vaccinated\" title=\"Summary\">\r\n                    {/* <PatientVaccinatedLIst /> */}\r\n                    <ViralHepatitisSummaryFormContainer />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.phone!==null ? patientObj.phone :\"\"}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{patientObj.address!==null ? patientObj.address : \"\"} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    const loadVaccination = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    }\r\n    const loadIcu = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'icu'})\r\n    }\r\n    const loadAddmission = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    }\r\n    const onClickDischarge = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        //setActiveItem('history')\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>                  \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    console.log(props.records)\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Dosage Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n    console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>       \r\n            <br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Vaccination History \"\r\n              columns={[\r\n                { title: \"Vaccine\", field: \"vaccine\", filtering: false },\r\n                {\r\n                  title: \"Vaccine Date\",\r\n                  field: \"vaccineDate\",\r\n                },\r\n                \r\n                { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                { title: \"Location\", field: \"location\", filtering: false },      \r\n                { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ vacinationList.map((row) => ({\r\n                    vaccine: row.vaccineName,\r\n                    vaccineDate: row.vaccineDate,\r\n                    batchNumber: row.batchNumber,\r\n                    doseNumber: row.doseNumber,\r\n                    location: row.location,\r\n                    vaccinationFacility: row.vaccinationFacility,\r\n                    adverseEffect: row.adverseEffect,\r\n                    actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>\r\n                  \r\n                  }))}\r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { Fragment} from \"react\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n  \r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >HEPATITIS /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"Enrolment\", \"Diagnosis\", \"Treatment\"];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return \"Enrolment\";\r\n    case 1:\r\n      return \"Diagnosis\";\r\n    case 2:\r\n      return \"Treatment\";\r\n    default:\r\n      return \"Unknown stepIndex\";\r\n  }\r\n}\r\n\r\nexport default function Steppers({ activeStep }) {\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    <Stepper activeStep={activeStep} alternativeLabel>\r\n      {steps.map((label) => (\r\n        <Step key={label}>\r\n          <StepLabel>{label}</StepLabel>\r\n        </Step>\r\n      ))}\r\n    </Stepper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm2ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\n// hcRnaValue\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm2 = ({ setStep }) => {\r\n  const [userId, setUserId] = useState(getCookie(\"enrollmentIds\"));\r\n  console.log(getCookie(\"enrollmentIds\"));\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    clinicalParameters: {\r\n      afp: \"\",\r\n      alt: \"\",\r\n      apriScore: \"\",\r\n      ascites: \"\",\r\n      ast: \"\",\r\n      astValue: \"\",\r\n      childPughScore: \"\",\r\n      creatinine: \"\",\r\n      diagnosis_result: \"\",\r\n      directBiliribin: \"\",\r\n      fib4: \"\",\r\n      fibroscan: \"\",\r\n      gradeOfEncephalopathy: \"\",\r\n      liverBiopsyStage: \"\",\r\n      prothrombinTimeNR: \"\",\r\n      pst: \"\",\r\n      severityOfAscites: \"MILD\",\r\n      totalBiliRubin: \"\",\r\n      ultrasoundScan: \"\",\r\n      urea: \"\",\r\n    },\r\n    enrollmentUuid: userId.enrollmentUuid,\r\n    hepatitisBTest: {\r\n      albumin: \"\",\r\n      antiHDV: \"\",\r\n      comment: \"\",\r\n      ctScan: \"\",\r\n      dateHbvDnaTestRequested: \"\",\r\n      dateHbvSampleRequested: \"\",\r\n      dateHbvTestRequested: \"\",\r\n      hbeAG: \"\",\r\n      // attaching missing props\r\n      dateHbvDnaResultReported: \"\",\r\n      hbsAgQuantification: \"\",\r\n      hbvDna: \"DETECTED\",\r\n      hvbDnaValue: \"\",\r\n      pmtctEligible: \"\",\r\n      stagingDateOfLiverBiopsy: \"\",\r\n      treatmentEligible: \"\",\r\n    },\r\n    hepatitisCTest: {\r\n      commobidities: \"\",\r\n      hcRnaValue: \"\",\r\n      hcvRNA: \"\",\r\n      hepatitisCoinfection: \"\",\r\n      multipleInfection: \"\",\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // handle input changes\r\n  const handleInputChangeBasic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisBTest: {\r\n        ...basicInfo.hepatitisBTest,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n    //   if (e.target.name === \"dateHbvTestRequested\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n    //   if (e.target.name === \"dateHbvDnaResultReported\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n    //   if (e.target.name === \"stagingDateOfLiverBiopsy\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n    //   if (e.target.name === \"hbvDna\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n    //   if (e.target.name === \"hvbDnaValue\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n\r\n    //   if (e.target.name === \"hbsAgQuantification\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n\r\n    //   if (e.target.name === \"hbsAgQuantification\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n  };\r\n\r\n  const handleInputChangeBasicForHC = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisCTest: {\r\n        ...basicInfo.hepatitisCTest,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n  const handleInputChangeBasicForClinic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      clinicalParameters: {\r\n        ...basicInfo.clinicalParameters,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  // to capture the error\r\n  let temp = { ...errors };\r\n  const validate = () => {\r\n    temp.dateHbvDnaTestRequested = basicInfo.hepatitisBTest\r\n      .dateHbvDnaTestRequested\r\n      ? \"\"\r\n      : \"Date HBV DNA test requested is required \";\r\n    temp.dateHbvTestRequested = basicInfo.hepatitisBTest.dateHbvTestRequested\r\n      ? \"\"\r\n      : \"Date HBV test requested is required\";\r\n\r\n    temp.dateHbvSampleRequested = basicInfo.hepatitisBTest\r\n      .dateHbvSampleRequested\r\n      ? \"\"\r\n      : \"Date HBV Sample requested is required\";\r\n\r\n    // temp.dateHbvDnaResultReported = basicInfo.hepatitisBTest\r\n    //   .dateHbvDnaResultReported\r\n    //   ? \"\"\r\n    //   : \"Date HBV DNA result requested is required\";\r\n\r\n    // temp.stagingDateOfLiverBiopsy = basicInfo.hepatitisBTest\r\n    //   .stagingDateOfLiverBiopsy\r\n    //   ? \"\"\r\n    //   : \"Staging date of liver biopsy is required\";\r\n\r\n    temp.hvbDnaValue =\r\n      basicInfo.hepatitisBTest.hvbDnaValue &&\r\n      basicInfo.hepatitisBTest.hbvDna === \"DETECTED\"\r\n        ? \"\"\r\n        : \" Input HBV DNA value is required\";\r\n\r\n    // temp.hcRnaValue =\r\n    //   basicInfo.hepatitisCTest.hcRnaValue &&\r\n    //   basicInfo.hepatitisCTest.hcvRNA === \"DETECTED\"\r\n    //     ? \"\"\r\n    //     : \" Input HCV RNA Value is required\";\r\n\r\n    temp.commobidities = basicInfo.hepatitisCTest.commobidities\r\n      ? \"\"\r\n      : \"Commobiditiesis required\";\r\n    temp.multipleInfection = basicInfo.hepatitisCTest.multipleInfection\r\n      ? \"\"\r\n      : \"Multiple Infection required\";\r\n\r\n    // temp.district = info.district ? \"\" : \"Province/LGA is required.\";\r\n    // temp.stateId = info.stateId ? \"\" : \"State is required.\";\r\n    // temp.dateOfBirth = info.dateOfBirth ? \"\" : \"Date of Birth is required.\";\r\n    // temp.dateOfRegistration = info.dateOfRegistration\r\n    //   ? \"\"\r\n    //   : \"Date of Registration is required.\";\r\n    // temp.maritalStatusId = basicInfo.maritalStatusId\r\n    //   ? \"\"\r\n    //   : \"Marital Status is required\";\r\n    // temp.educationId = info.educationId ? \"\" : \"Education is required\";\r\n    // temp.relationship = basicInfo.relationship\r\n    //   ? \"\"\r\n    //   : \"Relationship is required\";\r\n    // temp.genderId = basicInfo.personDto.genderId ? \"\" : \"sex is required\";\r\n    // temp.careEntryPoint = basicInfo.careEntryPoint\r\n    //   ? \"\"\r\n    //   : \"careEntryPoint is required\";\r\n    // temp.pregnancy = basicInfo.pregnancy ? \"\" : \"pregnancy status is required\";\r\n    // temp.weight = basicInfo.weight ? \"\" : \"Weight is required\";\r\n    // temp.height = basicInfo.height ? \"\" : \"Height is required\";\r\n    // temp.hepatitisB = basicInfo.hepatitisB ? \"\" : \"HepatitisB is required\";\r\n    // temp.breastfeeding = basicInfo.breastfeeding\r\n    //   ? \"\"\r\n    //   : \"Breastfeeding status is required\";\r\n    // temp.dateOfFirstHepatitisBPositiveScreening = basicInfo.screening\r\n    //   .dateOfFirstHepatitisBPositiveScreening\r\n    //   ? \"\"\r\n    //   : \"Date of first HepatitisB positive screening is required\";\r\n\r\n    //\r\n    console.log(temp);\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const postDataWithToken = async (data, key) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}${key}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      console.log(\"Post successful:\", response.data);\r\n      toast.success(\"Diagnosis submitted successfully\");\r\n      setStep(2);\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(\"Diagnosis failed\");\r\n      console.error(\"Error posting data:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validating the input\r\n    // window.scrollTo(0, 0);\r\n\r\n    console.log(basicInfo);\r\n    // console.log(errors);\r\n\r\n    if (validate()) {\r\n      console.log(\"good to go\", basicInfo);\r\n      postDataWithToken(basicInfo, \"hepatitis/diagnosis\");\r\n    }\r\n  };\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    const enrollmentIds = getCookie(\"enrollmentIds\");\r\n    const restructuredDiagnosisPayload = {\r\n      enrollmentUuid: enrollmentIds?.enrollmentUuid,\r\n      hepatitisBTest: {\r\n        dateHbvTestRequested: values.dateHbvTestRequested,\r\n        dateHbvSampleRequested: values.dateHbvSampleRequested,\r\n        dateHbvDnaTestRequested: values.dateHbvDnaTestRequested,\r\n        stagingDateOfLiverBiopsy: values.stagingDateOfLiverBiopsy,\r\n        hbvDna: values.hbvDna,\r\n        hvbDnaValue: values.hvbDnaValue,\r\n        hbsAgQuantification: values.hbsAgQuantification,\r\n        ctScan: values.ctScan,\r\n        albumin: values.albumin,\r\n        hbeAG: values.hbeAG,\r\n        antiHDV: values.antiHDV,\r\n        treatmentEligible: values.treatmentEligible,\r\n        pmtctEligible: values.pmtctEligible,\r\n        comment: values.comment,\r\n      },\r\n      hepatitisCTest: {\r\n        hcvRNA: values.hcvRNA,\r\n        hcRnaValue: values.hcRnaValue,\r\n        hepatitisCoinfection: values.hepatitisCoinfection,\r\n        commobidities: values.commobidities,\r\n        multipleInfection: values.multipleInfection,\r\n      },\r\n      clinicalParameters: {\r\n        ast: values.ast,\r\n        alt: values.alt,\r\n        pst: values.plt,\r\n        astValue: values.astValue,\r\n        totalBiliRubin: values.totalBiliRubin,\r\n        directBiliribin: values.directBiliribin,\r\n        apriScore: values.apriScore,\r\n        fib4: values.fib4,\r\n        prothrombinTimeNR: values.prothrombinTimeNR,\r\n        urea: values.urea,\r\n        creatinine: values.creatinine,\r\n        afp: values.afp,\r\n        fibroscan: values.fibroscan,\r\n        ultrasoundScan: values.ultrasoundScan,\r\n        ascites: values.ascites,\r\n        severityOfAscites: values.severityOfAscites,\r\n        gradeOfEncephalopathy: values.gradeOfEncephalopathy,\r\n        childPughScore: values.childPughScore,\r\n        liverBiopsyStage: values.liverBiopsyStage,\r\n        diagnosis_result: values.diagnosis_result,\r\n      },\r\n    };\r\n    setCookie(\"hepatitis2\", values, 1);\r\n    setCookie(\"heaptitis2PayloadValue\", restructuredDiagnosisPayload, 1);\r\n    postDataWithToken(restructuredDiagnosisPayload, \"hepatitis/diagnosis\");\r\n  };\r\n\r\n  const moveBack = () => {\r\n    window.scrollTo(0, 0);\r\n    setStep(0);\r\n  };\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm2ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis2\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n  }, []);\r\n\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Diagnosis\r\n                </h5>\r\n              </div>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Hepatitis B\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvDnaTestRequested\">\r\n                              Date HBV DNA test requested{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvDnaTestRequested\"\r\n                              id=\"dateHbvDnaTestRequested\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.dateHbvDnaTestRequested\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.dateHbvDnaTestRequested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvDnaTestRequested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvTestRequested\">\r\n                              Date HBV test requested{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvTestRequested\"\r\n                              id=\"dateHbvTestRequested\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.dateHbvTestRequested\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.dateHbvTestRequested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvTestRequested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvSampleRequested\">\r\n                              Date HBV sample Requested{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvSampleRequested\"\r\n                              id=\"dateHbvSampleRequested\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.dateHbvSampleRequested\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.dateHbvSampleRequested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvSampleRequested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvDnaResultReported\">\r\n                              Date of HBV DNA result reported{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvDnaResultReported\"\r\n                              id=\"dateHbvDnaResultReported\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest\r\n                                  .dateHbvDnaResultReported\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* {errors.dateHbvDnaResultReported !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvDnaResultReported}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"stagingDateOfLiverBiopsy\">\r\n                              Staging date of liver biopsy{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"stagingDateOfLiverBiopsy\"\r\n                              id=\"stagingDateOfLiverBiopsy\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest\r\n                                  .stagingDateOfLiverBiopsy\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* {errors.stagingDateOfLiverBiopsy !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.stagingDateOfLiverBiopsy}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-2 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              HBV DNA(UI/ml){\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <div className=\"radio\">\r\n                              <label>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  value=\"DETECTED\"\r\n                                  name=\"hbvDna\"\r\n                                  checked={\r\n                                    basicInfo.hepatitisBTest.hbvDna ===\r\n                                    \"DETECTED\"\r\n                                  }\r\n                                  // onBlur={formik.handleBlur}\r\n                                  onChange={handleInputChangeBasic}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />{\" \"}\r\n                                Detected\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"radio\">\r\n                              <label>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  value=\"UNDETECTED\"\r\n                                  name=\"hbvDna\"\r\n                                  checked={\r\n                                    basicInfo.hepatitisBTest.hbvDna ===\r\n                                    \"UNDETECTED\"\r\n                                  }\r\n                                  // onBlur={formik.handleBlur}\r\n                                  onChange={handleInputChangeBasic}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />{\" \"}\r\n                                Undetected\r\n                              </label>\r\n                              {/* \r\n                              {errors.stagingDateOfLiverBiopsy !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.stagingDateOfLiverBiopsy}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </div>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {basicInfo.hepatitisBTest.hbvDna === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hvbDnaValue\">\r\n                                Input HBV DNA value{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hvbDnaValue\"\r\n                                id=\"hvbDnaValue\"\r\n                                value={basicInfo.hepatitisBTest.hvbDnaValue}\r\n                                onChange={handleInputChangeBasic}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {errors.hvbDnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.hvbDnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbsAgQuantification\">\r\n                              HBsAG Quantification\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbsAgQuantification\"\r\n                              id=\"hbsAgQuantification\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.hbsAgQuantification\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* {errors.hbsAgQuantification !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbsAgQuantification}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"ctScan\">CT scan</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"ctScan\"\r\n                              id=\"ctScan\"\r\n                              value={basicInfo.hepatitisBTest.ctScan}\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* {formik.errors.ctScan ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.ctScan}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"albumin\">Albumin</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"albumin\"\r\n                              id=\"albumin\"\r\n                              value={basicInfo.hepatitisBTest.albumin}\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* {formik.errors.albumin ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.albumin}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbeAG\">HbeAG</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbeAG\"\r\n                              id=\"hbeAG\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.hbeAG}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"REACTIVE\"}>Reactive</option>\r\n                              <option value={\"NON_REACTIVE\"}>\r\n                                Non Reactive\r\n                              </option>\r\n                            </select>\r\n                            {/* {formik.errors.hbeAG !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbeAG}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"antiHDV\">Anti-HDV</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"antiHDV\"\r\n                              id=\"antiHDV\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.antiHDV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"REACTIVE\"}>Reactive</option>\r\n                              <option value={\"NON_REACTIVE\"}>\r\n                                Non Reactive\r\n                              </option>\r\n                              <option value={\"NOT_DONE\"}>Not Done</option>\r\n                            </select>\r\n                            {/* {formik.errors.antiHDV !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.antiHDV}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"treatmentEligible\">\r\n                              Treatment Eligible\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"treatmentEligible\"\r\n                              id=\"treatmentEligible\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.treatmentEligible}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {/* {formik.errors.treatmentEligible !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.treatmentEligible}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"pmtctEligible\">PMTCT Eligible</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"pmtctEligible\"\r\n                              id=\"pmtctEligible\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.pmtctEligible}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {/* {formik.errors.pmtctEligible !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.pmtctEligible}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4-12\">\r\n                          <FormGroup>\r\n                            <Label for=\"comment\">Comment</Label>\r\n                            <textarea\r\n                              className=\"form-control\"\r\n                              name=\"comment\"\r\n                              id=\"comment\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.comment}\r\n                              cols=\"50\"\r\n                              rows=\"30\"\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                                height: \"120px\",\r\n                              }}\r\n                            />\r\n                            {/* {formik.errors.comment !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.comment}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Hepatitis C\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRNA\">HCV RNA (IU/ml)</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRNA\"\r\n                              id=\"hcvRNA\"\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              // onBlur={formik.handleBlur}\r\n                              value={basicInfo.hepatitisCTest.hcvRNA}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>select</option>\r\n                              <option value={\"DETECTED\"}>Detected</option>\r\n                              <option value={\"UNDETECTED\"}>Undetected</option>\r\n                            </select>\r\n                            {/* {formik.errors.hcvRNA !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvRNA}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                        {basicInfo.hepatitisCTest.hcvRNA === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcRnaValue\">\r\n                                Input HCV RNA Value{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hcRnaValue\"\r\n                                id=\"hcRnaValue\"\r\n                                value={basicInfo.hepatitisCTest.hcRnaValue}\r\n                                onChange={handleInputChangeBasicForHC}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {/* {errors.hcRnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.hcRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hepatitisCoinfection\">\r\n                              Hepatitis Coinfection\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hepatitisCoinfection\"\r\n                              id=\"hepatitisCoinfection\"\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              value={\r\n                                basicInfo.hepatitisCTest.hepatitisCoinfection\r\n                              }\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"HBV_HCV\"}>HBV/HCV</option>\r\n                              <option value={\"HCV_HIV\"}>HCV/HIV</option>\r\n                              <option value={\"HBV_HDV\"}>HBV/HDV</option>\r\n                              <option value={\"HBV_HCD_HIV\"}>HBV/HCD/HIV</option>\r\n                            </select>\r\n                            {/* {formik.errors.hepatitisCoinfection !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hepatitisCoinfection}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"commobidities\">\r\n                              Commobidities{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"commobidities\"\r\n                              id=\"commobidities\"\r\n                              value={basicInfo.hepatitisCTest.commobidities}\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.commobidities !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.commobidities}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"multipleInfection\">\r\n                              Specify multiple infection{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"multipleInfection\"\r\n                              id=\"multipleInfection\"\r\n                              value={basicInfo.hepatitisCTest.multipleInfection}\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.multipleInfection !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.multipleInfection}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Clinical Parameters\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ast\">AST</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"ast\"\r\n                        id=\"ast\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.ast}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.ast !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.ast}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"alt\">ALT</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"alt\"\r\n                        id=\"alt\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.alt}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.alt !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.alt}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"pst\">PST</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"pst\"\r\n                        id=\"pst\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.pst}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.pst !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.pst}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  {basicInfo.ast === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"astValue\">\r\n                          Input AST value{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"astValue\"\r\n                          id=\"astValue\"\r\n                          value={basicInfo.clinicalParameters.astValue}\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.astValue !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.astValue}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {basicInfo.alt === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"altValue\">\r\n                          Input ALT value{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"altValue\"\r\n                          id=\"altValue\"\r\n                          value={basicInfo.clinicalParameters.altValue}\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.altValue !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.altValue}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {basicInfo.plt === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pstValue\">\r\n                          Input PST value{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"pstValue\"\r\n                          id=\"pstValue\"\r\n                          value={basicInfo.clinicalParameters.pstValue}\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.pstValue !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pstValue}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"totalBiliRubin\">\r\n                        Total Bilirubin <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"totalBiliRubin\"\r\n                        id=\"totalBiliRubin\"\r\n                        value={basicInfo.clinicalParameters.totalBiliRubin}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.totalBiliRubin !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.totalBiliRubin}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"directBiliribin\">Direct Bilirubin </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"directBiliribin\"\r\n                        id=\"directBiliribin\"\r\n                        value={basicInfo.clinicalParameters.directBiliribin}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.directBiliribin !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.directBiliribin}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"apriScore\">APRI score </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"apriScore\"\r\n                        id=\"apriScore\"\r\n                        value={basicInfo.clinicalParameters.apriScore}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.apriScore !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.apriScore}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"fib4\">FIB-4</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"fib4\"\r\n                        id=\"fib4\"\r\n                        value={basicInfo.clinicalParameters.fib4}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.fib4 !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.fib4}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"prothrombinTimeNR\">\r\n                        Prothrombin time/INR\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"prothrombinTimeNR\"\r\n                        id=\"prothrombinTimeNR\"\r\n                        value={basicInfo.clinicalParameters.prothrombinTimeNR}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.prothrombinTimeNR !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.prothrombinTimeNR}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"urea\"\r\n                        id=\"urea\"\r\n                        value={basicInfo.clinicalParameters.urea}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.urea !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.urea}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"creatinine\"\r\n                        id=\"creatinine\"\r\n                        value={basicInfo.clinicalParameters.creatinine}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.creatinine !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.creatinine}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"afp\"\r\n                        id=\"afp\"\r\n                        value={basicInfo.clinicalParameters.afp}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.afp !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.afp}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"fibroscan\"\r\n                        id=\"fibroscan\"\r\n                        value={basicInfo.clinicalParameters.fibroscan}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.fibroscan !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.fibroscan}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ultrasoundScan\">\r\n                        Ultrasound scan (μmol/L)\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"ultrasoundScan\"\r\n                        id=\"ultrasoundScan\"\r\n                        value={basicInfo.clinicalParameters.ultrasoundScan}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.ultrasoundScan !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.ultrasoundScan}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ascites\">Ascites</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"ascites\"\r\n                        id=\"ascites\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.ascites}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.ascites !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.ascites}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  {basicInfo.clinicalParameters.ascites === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"severityOfAscites\">\r\n                          Severity of ascites\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"severityOfAscites\"\r\n                          id=\"severityOfAscites\"\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          value={basicInfo.clinicalParameters.severityOfAscites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"MILD\"}>Mild</option>\r\n                          <option value={\"MODERATE\"}>Moderate</option>\r\n                          <option value={\"MASSIVE_OR_GROSS\"}>\r\n                            Massive/Gross\r\n                          </option>\r\n                        </select>\r\n                        {/* {formik.errors.severityOfAscites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.severityOfAscites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ascitesLevel\">Grade of Encephalopathy</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"gradeOfEncephalopathy\"\r\n                        id=\"gradeOfEncephalopathy\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={\r\n                          basicInfo.clinicalParameters.gradeOfEncephalopathy\r\n                        }\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={0}>0</option>\r\n                        <option value={1}>1</option>\r\n                        <option value={2}>2</option>\r\n                        <option value={3}>3</option>\r\n                        <option value={4}>4</option>\r\n                        <option value={5}>5</option>\r\n                      </select>\r\n                      {/* {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.gradeOfEncephalopathy}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"childPughScore\">Child pugh score</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"childPughScore\"\r\n                        id=\"childPughScore\"\r\n                        value={basicInfo.clinicalParameters.childPughScore}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.childPughScore !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.childPughScore}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"liverBiopsyStage\"\r\n                        id=\"liverBiopsyStage\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.liverBiopsyStage}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"FIBROSIS\"}> Fibrosis</option>\r\n                        <option value={\"CIRRHOSIS\"}>Cirrhosis</option>\r\n                        <option value={\"NO_FIBROSIS\"}> No Fibrosis</option>\r\n                        {/* <option value={\"CIRRHOSIS\"}>Cirrhosis</option> */}\r\n                        <option value={\"HIGH_CC\"}>High CC </option>\r\n                      </select>\r\n                      {/* {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.liverBiopsyStage}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"diagnosis_result\">Diagnosis</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"diagnosis_result\"\r\n                        id=\"diagnosis_result\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.diagnosis_result}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"NO_FIBROSIS\"}> No Fibrosis</option>\r\n                        <option value={\"FIBROSIS\"}>Fibrosis</option>\r\n                        <option value={\"CIRRHOSIS\"}>Cirrhosis</option>\r\n                        <option value={\"HIGH_CC\"}>HCC</option>\r\n                      </select>\r\n                      {/* {formik.errors.diagnosis_result !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.diagnosis_result}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {false ? <Spinner /> : \"\"}\r\n            <br />\r\n            <div className=\"d-flex justify-content-between\">\r\n              <MatButton\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={moveBack}\r\n                className={classes.button}\r\n                startIcon={<ArrowBackIcon />}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n              </MatButton>\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                endIcon={<ArrowForward />}\r\n                onClick={handleSubmit}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n              </MatButton>\r\n            </div>\r\n            {/* </Form> */}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm2;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm3ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst postDataWithToken = async (data, key) => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}${key}`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    // Handle the response if needed\r\n    console.log(\"Post successful:\", response.data);\r\n    toast.success(\"Treatment submitted successfully\");\r\n    deleteCookie(\"heaptitis3PayloadValue\");\r\n    deleteCookie(\"hepatitis3\");\r\n    deleteCookie(\"enrollmentIds\");\r\n    deleteCookie(\"hepatitis2\");\r\n    deleteCookie(\"heaptitis2PayloadValue\");\r\n    deleteCookie(\"hepatitis1\");\r\n    deleteCookie(\"heaptitis1PayloadValue\");\r\n    setStep(0);\r\n    return response.data;\r\n  } catch (error) {\r\n    // Handle any errors that occurred during the request\r\n    toast.error(\"Treatment failed\");\r\n    console.error(\"Error posting data:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nfunction deleteCookie(name) {\r\n  document.cookie = name + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n}\r\n\r\nfunction convertStringBooleanValues(originalObj) {\r\n  const newObj = {};\r\n\r\n  for (const key in originalObj) {\r\n    if (originalObj.hasOwnProperty(key)) {\r\n      const value = originalObj[key];\r\n      if (typeof value === \"string\") {\r\n        newObj[key] =\r\n          value.toLowerCase() === \"yes\"\r\n            ? \"YES\"\r\n            : value.toLowerCase() === \"no\"\r\n            ? \"NO\"\r\n            : value;\r\n      } else {\r\n        newObj[key] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  return newObj;\r\n}\r\n\r\nfunction formatDate(inputDate) {\r\n  // Split the input date string into an array\r\n  var dateArray = inputDate.split(\"-\");\r\n\r\n  // Check if the input date is in the correct format (yyyy-mm-dd)\r\n  if (dateArray.length !== 3) {\r\n    return \"Invalid date format\";\r\n  }\r\n\r\n  // Extract the year, month, and day from the array\r\n  var year = dateArray[0];\r\n  var month = dateArray[1];\r\n  var day = dateArray[2];\r\n\r\n  // Create a new date string in the \"dd-mm-yyyy\" format\r\n  var newDateFormat = day + \"-\" + month + \"-\" + year;\r\n\r\n  return newDateFormat;\r\n}\r\n\r\nconst ViralHepatitisForm3 = ({ setStep }) => {\r\n  const [userId, setUserId] = useState(getCookie(\"enrollmentIds\"));\r\n\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    enrollmentUuid: userId.enrollmentUuid,\r\n    hepatitisBTreatment: {\r\n      dateStarted: \"\",\r\n      dateStopped: \"\",\r\n      hbvPastTreatmentRegimen: \"\",\r\n      hepatitisBRegimenSwitch: {\r\n        adverseEffectReported: \"\",\r\n        dateStarted: \"\",\r\n        dateStopped: \"\",\r\n        newRegime: \"\",\r\n        reasonForSwitch: \"\",\r\n      },\r\n      historyOfAdverseEffect: \"\",\r\n      newRegimen: \"\",\r\n      reasonForHepatitisBTreatment: {\r\n        comment: \"string\",\r\n        reasonsForTreatment: \"\",\r\n      },\r\n      treatmentExperience: \"\",\r\n    },\r\n    hepatitisCTreatment: {\r\n      adverseEffectReported: \"\",\r\n      dateCompleted: \"\",\r\n      dateStarted: \"\",\r\n      dateStopped: \"\",\r\n      hbvPastTreatmentRegimen: \"\",\r\n      hcvRetreatment: {\r\n        dateStarted: \"\",\r\n        dateStopped: \"\",\r\n        hbvPastTreatmentRegimen: \"\",\r\n        history_of_AdverseEffect: \"YES\",\r\n        newRegimen: \"\",\r\n        prescribedDuration: 0,\r\n        retreatmentAdverseEffect: \"\",\r\n      },\r\n      hepatitisSvr12Testing: {\r\n        dateTested: \"\",\r\n        hcvRNA: \"DETECTED\",\r\n        hcvRNAValue: \"\",\r\n        retreatmentDateTested: \"\",\r\n        retreatmentHcvRNA: \"\",\r\n        retreatmentHcvRNAValue: \"\",\r\n      },\r\n      pastTreatmentExperience: \"\",\r\n      prescribedDuration: \"\",\r\n      treatmentExperience: \"\",\r\n    },\r\n  });\r\n  console.log(basicInfo.hepatitisBTreatment.treatmentExperience);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  // handle input changes\r\n  const handleInputChangeBasicHB = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisBTreatment: {\r\n        ...basicInfo.hepatitisBTreatment,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleInputChangeBasicHBReason = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hbvReasonForTreatmentEligibility\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          reasonForHepatitisBTreatment: {\r\n            ...basicInfo.hepatitisBTreatment.reasonForHepatitisBTreatment,\r\n            reasonsForTreatment: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hbvReasonsForTreatmentComment\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          reasonForHepatitisBTreatment: {\r\n            ...basicInfo.hepatitisBTreatment.reasonForHepatitisBTreatment,\r\n            comment: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    // if (e.target.name === \"hbvRegimeSwitchDateStarted\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         dateStarted: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n    // if (e.target.name === \"hbvRegimeSwitchDateStopped\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         dateStopped: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n    // if (e.target.name === \"hbvAdverseEffectReported\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         adverseEffectReported: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n\r\n    // if (e.target.name === \"hbvRegimeSwitchReason\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         reasonForSwitch: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n  };\r\n  const handleInputChangeBasicHBRegSwitch = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hbvRegimeSwitchNewRegimen\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            newRegime: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hbvRegimeSwitchDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            dateStarted: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hbvRegimeSwitchDateStopped\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            dateStopped: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hbvAdverseEffectReported\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            adverseEffectReported: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hbvRegimeSwitchReason\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            reasonForSwitch: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeBasicHCGen = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisCTreatment: {\r\n        ...basicInfo.hepatitisCTreatment,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n  const handleInputChangeBasicHC = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (e.target.name === \"hcvAdverseEventReported\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          adverseEffectReported: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvTreatmentExperience\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          treatmentExperience: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          dateStarted: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvDateCompleted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          dateCompleted: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvDateStopped\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          dateStopped: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvPrescribedDuration\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          prescribedDuration: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hbvPastTreatmentRegimenForHcv\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hbvPastTreatmentRegimen: e.target.value,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeBasicHCSVR = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"svr12TestingDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            dateTested: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12TestingHcvRna\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            hcvRNA: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12TestingHcvRnaValue\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            hcvRNAValue: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12RetreatmentDateTested\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            retreatmentDateTested: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12RetreatmentHcvRna\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            retreatmentHcvRNA: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"svr12RetreatmentHcvRnaValue\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            retreatmentHcvRNAValue: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeBasicHHCV = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hcvRetreatmentNewRegimen\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            newRegimen: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvRetreatmentPrescribedDuration\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            prescribedDuration: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvRetreatmentDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            dateStarted: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvRetreatmentDateStopped\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            dateStopped: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvRetreatmentAdverseEffect\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            retreatmentAdverseEffect: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvRetreatmentHistoryOfAdverseEffect\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            history_of_AdverseEffect: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // to capture the error\r\n  let temp = { ...errors };\r\n  const validate = () => {\r\n    // temp.treatmentExperienceB = basicInfo.hepatitisBTreatment\r\n    //   .treatmentExperience\r\n    //   ? \"\"\r\n    //   : \"Treatment experience is required\";\r\n\r\n    temp.hbvRegimeSwitchNewRegimen = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.newRegime\r\n      ? \"\"\r\n      : \"New Regime is required\";\r\n\r\n    temp.hbvRegimeSwitchDateStarted = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.dateStarted\r\n      ? \"\"\r\n      : \"Date Started is required\";\r\n\r\n    temp.hbvRegimeSwitchDateStopped = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.dateStopped\r\n      ? \"\"\r\n      : \"Date Stopped is required\";\r\n\r\n    temp.hbvRegimeSwitchReason = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.reasonForSwitch\r\n      ? \"\"\r\n      : \"Reason for switch is required\";\r\n\r\n    temp.hcvTreatmentExperience = basicInfo.hepatitisCTreatment\r\n      .treatmentExperience\r\n      ? \"\"\r\n      : \" Treatment experience is required\";\r\n\r\n    temp.pastTreatmentExperience = basicInfo.hepatitisCTreatment\r\n      .pastTreatmentExperience\r\n      ? \"\"\r\n      : \"Past Treatment experience is required\";\r\n    // console.log(temp);\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  // submit form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validating the input\r\n    // window.scrollTo(0, 0);\r\n\r\n    console.log(basicInfo);\r\n    // console.log(errors);\r\n\r\n    if (validate()) {\r\n      console.log(\"good to go\", basicInfo);\r\n      postDataWithToken(basicInfo, \"hepatitis/treatment\");\r\n    }\r\n  };\r\n  const onSubmitHandler = (values) => {\r\n    console.log(values.hbvDateStarted);\r\n    setCookie(\"hepatitis3\", values, 1);\r\n    const enrollmentIds = getCookie(\"enrollmentIds\");\r\n    const restructuredTreatmentPayload = {\r\n      enrollmentUuid: enrollmentIds?.enrollmentUuid,\r\n      hepatitisBTreatment: {\r\n        dateStarted: formatDate(values.hbvDateStarted),\r\n        dateStopped: formatDate(values.hbvDateStopped),\r\n        hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimen,\r\n        hepatitisBRegimenSwitch: {\r\n          adverseEffectReported: values.hbvAdverseEffectReported,\r\n          dateStarted: formatDate(values.hbvRegimeSwitchDateStarted),\r\n          dateStopped: formatDate(values.hbvRegimeSwitchDateStopped),\r\n          newRegime: values.hbvRegimeSwitchNewRegimen,\r\n          reasonForSwitch: values.hbvRegimeSwitchReason,\r\n        },\r\n        historyOfAdverseEffect: values.hbvHistoryOfAdverseEffect,\r\n        newRegimen: values.hbvNewRegimen,\r\n        reasonForHepatitisBTreatment: {\r\n          comment: values.hbvReasonsForTreatmentComment,\r\n          reasonsForTreatment: values.hbvReasonForTreatmentEligibility,\r\n        },\r\n        treatmentExperience: values.hbvTreatmentExperience,\r\n      },\r\n      hepatitisCTreatment: {\r\n        adverseEffectReported: values.hcvAdverseEventReported,\r\n        dateCompleted: formatDate(values.hcvDateCompleted),\r\n        dateStarted: formatDate(values.hcvDateStarted),\r\n        dateStopped: formatDate(values.hcvDateStopped),\r\n        hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimenForHcv,\r\n        hcvRetreatment: {\r\n          dateStarted: formatDate(values.hcvRetreatmentDateStarted),\r\n          dateStopped: formatDate(values.hcvRetreatmentDateStopped),\r\n          hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimenForHcv,\r\n          history_of_AdverseEffect: values.hcvRetreatmentHistoryOfAdverseEffect,\r\n          newRegimen: values.hcvRetreatmentNewRegimen,\r\n          prescribedDuration: values.hcvRetreatmentPrescribedDuration,\r\n          retreatmentAdverseEffect: values.hcvRetreatmentAdverseEffect,\r\n        },\r\n        hepatitisSvr12Testing: {\r\n          dateTested: formatDate(values.svr12TestingDateStarted),\r\n          hcvRNA: values.svr12TestingHcvRna,\r\n          hcvRNAValue: values.svr12TestingHcvRnaValue,\r\n          retreatmentDateTested: formatDate(values.svr12RetreatmentDateTested),\r\n          // retreatmentHcvRNA: \"string\",\r\n          // retreatmentHcvRNAValue: \"string\",\r\n        },\r\n        // pastTreatmentExperience: \"string\",\r\n        prescribedDuration: values.hcvRetreatmentPrescribedDuration,\r\n        treatmentExperience: values.hcvTreatmentExperience,\r\n      },\r\n    };\r\n\r\n    setCookie(\"heaptitis3PayloadValue\", restructuredTreatmentPayload, 1);\r\n    postDataWithToken(restructuredTreatmentPayload, \"hepatitis/treatment\");\r\n  };\r\n\r\n  const moveBack = () => {\r\n    window.scrollTo(0, 0);\r\n    setStep(1);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm3ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis3\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n  }, []);\r\n\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hbvTreatmentRegimenSwitch: true,\r\n    hbvTreatmentReasonforTreatment: true,\r\n    hcvTreatmentRegimenSwitch: true,\r\n    hcvTreatmentRegimenHcvRetreatment: true,\r\n    hcvTreatmentSvr12Testing: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Hepatitis B Treatment\r\n                </h5>\r\n              </div>\r\n              <div>\r\n                <div className=\"card-body\">\r\n                  <div\r\n                    className=\"basic-form\"\r\n                    style={{ padding: \"0 50px 0 50px\" }}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvTreatmentExperience\">\r\n                            Treatment experience\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"treatmentExperience\"\r\n                            id=\"treatmentExperience\"\r\n                            value={\r\n                              basicInfo.hepatitisBTreatment.treatmentExperience\r\n                            }\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option>Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.treatmentExperienceB !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.treatmentExperienceB}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      {/* {basicInfo.hbvTreatmentExperience && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvPastTreatmentRegimen\">\r\n                                Past treatment regime\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvPastTreatmentRegimen\"\r\n                                id=\"hbvPastTreatmentRegimen\"\r\n                                value={basicInfo.hbvPastTreatmentRegimen}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvPastTreatmentRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )} */}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvNewRegimen\">New regime</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"newRegimen\"\r\n                            id=\"newRegimen\"\r\n                            value={basicInfo.hepatitisBTreatment.newRegimen}\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {/* {formik.errors.hbvNewRegimen !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbvNewRegimen}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvPastTreatmentRegimen\">\r\n                            Hbv Past treatment regimen\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hbvPastTreatmentRegimen\"\r\n                            id=\"hbvPastTreatmentRegimen\"\r\n                            value={\r\n                              basicInfo.hepatitisBTreatment\r\n                                .hbvPastTreatmentRegimen\r\n                            }\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {/* \r\n                          {formik.errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbvPastTreatmentRegimen}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      {basicInfo.hbvPastTreatmentRegimen !== \"\" && (\r\n                        <>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvDateStarted\">Date started</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateStarted\"\r\n                                id=\"dateStarted\"\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                value={\r\n                                  basicInfo.hepatitisBTreatment.dateStarted\r\n                                }\r\n                                onChange={handleInputChangeBasicHB}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {/* {formik.errors.hbvDateStarted !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvDateStopped\">Date stopped</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateStopped\"\r\n                                id=\"dateStopped\"\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                value={\r\n                                  basicInfo.hepatitisBTreatment.dateStopped\r\n                                }\r\n                                onChange={handleInputChangeBasicHB}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {/* {formik.errors.hbvDateStopped !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvDateStopped}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvHistoryOfAdverseEffect\">\r\n                            History of adverse effect\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"historyOfAdverseEffect\"\r\n                            id=\"historyOfAdverseEffect\"\r\n                            value={\r\n                              basicInfo.hepatitisBTreatment\r\n                                .historyOfAdverseEffect\r\n                            }\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option>Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {/* {formik.errors.hbvHistoryOfAdverseEffect !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbvHistoryOfAdverseEffect}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Regimen Switch\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hbvTreatmentRegimenSwitch:\r\n                            !prevState.hbvTreatmentRegimenSwitch,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hbvTreatmentRegimenSwitch}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchNewRegimen\">\r\n                              New Regimen\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbvRegimeSwitchNewRegimen\"\r\n                              id=\"hbvRegimeSwitchNewRegimen\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.newRegime\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchNewRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchNewRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchDateStarted\">\r\n                              Date Started{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hbvRegimeSwitchDateStarted\"\r\n                              id=\"hbvRegimeSwitchDateStarted\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.dateStarted\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchDateStopped\">\r\n                              Date Stopped{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hbvRegimeSwitchDateStopped\"\r\n                              id=\"hbvRegimeSwitchDateStopped\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.dateStopped\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchDateStopped !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchDateStopped}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvAdverseEffectReported\">\r\n                              Adverse effect reported\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvAdverseEffectReported\"\r\n                              id=\"hbvAdverseEffectReported\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.adverseEffectReported\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {formik.errors.hbvAdverseEffectReported !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvAdverseEffectReported}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchReason\">\r\n                              Reason for switch\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbvRegimeSwitchReason\"\r\n                              id=\"hbvRegimeSwitchReason\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.reasonForSwitch\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchReason !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchReason}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Reason for treatment\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hbvTreatmentReasonforTreatment:\r\n                            !prevState.hbvTreatmentReasonforTreatment,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hbvTreatmentReasonforTreatment}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvReasonForTreatmentEligibility\">\r\n                              Reasons for treatment\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvReasonForTreatmentEligibility\"\r\n                              id=\"hbvReasonForTreatmentEligibility\"\r\n                              onChange={handleInputChangeBasicHBReason}\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .reasonForHepatitisBTreatment\r\n                                  .reasonsForTreatment\r\n                              }\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n\r\n                              <option value={\"treatment eligible\"}>\r\n                                Treatment Eligible\r\n                              </option>\r\n                              <option value={\"hbv pmtct\"}>HBV PMTCT</option>\r\n                            </select>\r\n                            {/* {formik.errors.hbvReasonForTreatmentEligibility !==\r\n                            \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvReasonForTreatmentEligibility}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvReasonsForTreatmentComment\">\r\n                              Comment\r\n                            </Label>\r\n                            <textarea\r\n                              className=\"form-control\"\r\n                              name=\"hbvReasonsForTreatmentComment\"\r\n                              id=\"hbvReasonsForTreatmentComment\"\r\n                              onChange={handleInputChangeBasicHBReason}\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .reasonForHepatitisBTreatment.comment\r\n                              }\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                                height: \"80px\",\r\n                              }}\r\n                            />\r\n                            {/* \r\n                            {formik.errors.hbvReasonsForTreatmentComment !==\r\n                            \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvReasonsForTreatmentComment}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Hepatitis C Treatment\r\n                </h5>\r\n              </div>\r\n\r\n              <div>\r\n                <div className=\"card-body\">\r\n                  <div\r\n                    className=\"basic-form\"\r\n                    style={{ padding: \"0 50px 0 50px\" }}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvAdverseEventReported\">\r\n                            Adverse Effect reported\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hcvAdverseEventReported\"\r\n                            id=\"hcvAdverseEventReported\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment\r\n                                .adverseEffectReported\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"YES\">Yes</option>\r\n                            <option value=\"NO\">No</option>\r\n                          </select>\r\n                          {/* {formik.errors.hcvAdverseEventReported !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hcvAdverseEventReported}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvTreatmentExperience\">\r\n                            Treatment experience\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvTreatmentExperience\"\r\n                            id=\"hcvTreatmentExperience\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment.treatmentExperience\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option>Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.hcvTreatmentExperience !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvTreatmentExperience}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvPastTreatmentRegimen\">\r\n                            HBV Past treatment regimen\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pastTreatmentExperience\"\r\n                            id=\"pastTreatmentExperience\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment\r\n                                .pastTreatmentExperience\r\n                            }\r\n                            onChange={handleInputChangeBasicHCGen}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.pastTreatmentExperience !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.pastTreatmentExperience}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvDateStarted\">Date started</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvDateStarted\"\r\n                            id=\"hcvDateStarted\"\r\n                            value={basicInfo.hepatitisCTreatment.dateStarted}\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {/* {formik.errors.hcvDateStarted !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hcvDateStarted}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvDateCompleted\">Date completed</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvDateCompleted\"\r\n                            id=\"hcvDateCompleted\"\r\n                            value={basicInfo.hepatitisCTreatment.dateCompleted}\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {/* {formik.errors.hcvDateCompleted !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hcvDateCompleted}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvDateStopped\">Date stopped</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvDateStopped\"\r\n                            id=\"hcvDateStopped\"\r\n                            value={basicInfo.hepatitisCTreatment.dateStopped}\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {/* {formik.errors.hcvDateStopped !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hcvDateStopped}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvPrescribedDuration\">\r\n                            Prescribed duration\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hcvPrescribedDuration\"\r\n                            id=\"hcvPrescribedDuration\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment.prescribedDuration\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={0}>Select</option>\r\n                            <option value={8}>8 weeks</option>\r\n                            <option value={12}>12 weeks</option>\r\n                            <option value={24}>24 weeks</option>\r\n                          </select>\r\n                          {/* {formik.errors.hcvPrescribedDuration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hcvPrescribedDuration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvPastTreatmentRegimenForHcv\">\r\n                            HBV past treatment regimen\r\n                          </Label>\r\n                          <select\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"hbvPastTreatmentRegimenForHcv\"\r\n                            id=\"hbvPastTreatmentRegimenForHcv\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment\r\n                                .hbvPastTreatmentRegimen\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {/* \r\n                          {formik.errors.hbvPastTreatmentRegimenForHcv !==\r\n                          \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbvPastTreatmentRegimenForHcv}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    SVR 12 Testing\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hcvTreatmentSvr12Testing:\r\n                            !prevState.hcvTreatmentSvr12Testing,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hcvTreatmentSvr12Testing}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hcvTreatmentSvr12Testing}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12TestingDateStarted\">\r\n                              Date tested\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"svr12TestingDateStarted\"\r\n                              id=\"svr12TestingDateStarted\"\r\n                              type=\"date\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.dateTested\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* \r\n                            {formik.errors.svr12TestingDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.svr12TestingDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12TestingHcvRna\">\r\n                              HCV RNA <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"svr12TestingHcvRna\"\r\n                              id=\"svr12TestingHcvRna\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.hcvRNA\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"DETECTED\">Detected</option>\r\n                              <option value=\"UNDETECTED\">Undetected</option>\r\n                            </select>\r\n                            {/* {errors.hbvRegimeSwitchReason !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchReason}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {basicInfo.hepatitisCTreatment.hepatitisSvr12Testing\r\n                          .hcvRNA === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRnaValue\">\r\n                                Input HCV RNA value\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRnaValue\"\r\n                                id=\"svr12TestingHcvRnaValue\"\r\n                                type=\"text\"\r\n                                value={\r\n                                  basicInfo.hepatitisCTreatment\r\n                                    .hepatitisSvr12Testing.hcvRNAValue\r\n                                }\r\n                                onChange={handleInputChangeBasicHCSVR}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {/* \r\n                              {formik.errors.svr12TestingHcvRnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingHcvRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        {/* <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRnaValue\">\r\n                                Input HCV RNA value\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRnaValue\"\r\n                                id=\"svr12TestingHcvRnaValue\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={basicInfo.svr12TestingHcvRnaValue}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.svr12TestingHcvRnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingHcvRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div> */}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12RetreatmentDateTested\">\r\n                              Retreatment date tested\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"svr12RetreatmentDateTested\"\r\n                              id=\"svr12RetreatmentDateTested\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.retreatmentDateTested\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              type=\"date\"\r\n                            />\r\n\r\n                            {/* {formik.errors.svr12RetreatmentDateTested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.svr12RetreatmentDateTested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12RetreatmentHcvRna\">\r\n                              Retreatment HCV RNA(IU/ml)\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"svr12RetreatmentHcvRna\"\r\n                              id=\"svr12RetreatmentHcvRna\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.retreatmentHcvRNA\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"DETECTED\">Detected</option>\r\n                              <option value=\"UNDETECTED\">Undetected</option>\r\n                            </select>\r\n                            {/* {formik.errors.svr12RetreatmentHcvRna !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.svr12RetreatmentHcvRna}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {basicInfo.hepatitisCTreatment.hepatitisSvr12Testing\r\n                          .retreatmentHcvRNA === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12RetreatmentHcvRnaValue\">\r\n                                Input Retreatment HCV RNA value(IU/ml)\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"svr12RetreatmentHcvRnaValue\"\r\n                                id=\"svr12RetreatmentHcvRnaValue\"\r\n                                value={\r\n                                  basicInfo.hepatitisCTreatment\r\n                                    .hepatitisSvr12Testing\r\n                                    .retreatmentHcvRNAValue\r\n                                }\r\n                                onChange={handleInputChangeBasicHCSVR}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.svr12RetreatmentHcvRnaValue !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12RetreatmentHcvRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    HCV Retreatment\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hcvTreatmentRegimenHcvRetreatment:\r\n                            !prevState.hcvTreatmentRegimenHcvRetreatment,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={\r\n                      isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment\r\n                    }\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse\r\n                    in={isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment}\r\n                  >\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentNewRegimen\">\r\n                              New regimen\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentNewRegimen\"\r\n                              id=\"hcvRetreatmentNewRegimen\"\r\n                              type=\"text\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .newRegimen\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n\r\n                            {/* {formik.errors.hcvRetreatmentNewRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvRetreatmentNewRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentPrescribedDuration\">\r\n                              Prescribed Duration\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentPrescribedDuration\"\r\n                              id=\"hcvRetreatmentPrescribedDuration\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .prescribedDuration\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={0}>Select</option>\r\n                              <option value={8}>8 weeks</option>\r\n                              <option value={12}>12 weeks</option>\r\n                              <option value={24}>24 weeks</option>\r\n                            </select>\r\n                            {/* {formik.errors.hcvRetreatmentPrescribedDuration !==\r\n                            \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvRetreatmentPrescribedDuration}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentDateStarted\">\r\n                              Date started\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentDateStarted\"\r\n                              id=\"hcvRetreatmentDateStarted\"\r\n                              type=\"date\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .dateStarted\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n\r\n                            {/* {formik.errors.hcvRetreatmentDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvRetreatmentDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentDateStopped\">\r\n                              Date stopped\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentDateStopped\"\r\n                              id=\"hcvRetreatmentDateStopped\"\r\n                              type=\"date\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .dateStopped\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* \r\n                            {formik.errors.hcvRetreatmentDateStopped !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvRetreatmentDateStopped}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentAdverseEffect\">\r\n                              Retreatment Adverse effect\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentAdverseEffect\"\r\n                              id=\"hcvRetreatmentAdverseEffect\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .retreatmentAdverseEffect\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {/* {formik.errors.hcvRetreatmentAdverseEffect !==\r\n                            \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvRetreatmentAdverseEffect}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentHistoryOfAdverseEffect\">\r\n                              History of adverse effect\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentHistoryOfAdverseEffect\"\r\n                              id=\"hcvRetreatmentHistoryOfAdverseEffect\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .history_of_AdverseEffect\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {/* {formik.errors\r\n                              .hcvRetreatmentHistoryOfAdverseEffect !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {\r\n                                  formik.errors\r\n                                    .hcvRetreatmentHistoryOfAdverseEffect\r\n                                }\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {false ? <Spinner /> : \"\"}\r\n            <br />\r\n            <div className=\"d-flex justify-content-between\">\r\n              <MatButton\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<ArrowBackIcon />}\r\n                onClick={moveBack}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n              </MatButton>\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={handleSubmit}\r\n                // endIcon={<ArrowForward />}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n              </MatButton>\r\n            </div>\r\n            {/* </Form> */}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm3;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm2ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm4 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm2ValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: false,\r\n    hepatitisCDropdown: false,\r\n    coInfectionDropdown: false,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Diagnosis\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis B\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvTestRequested\">\r\n                                Date HBV test requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvTestRequested\"\r\n                                id=\"dateHbvTestRequested\"\r\n                                value={formik.values.dateHbvTestRequested}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvTestRequested !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvTestRequested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvSampleCollected\">\r\n                                Date HBV sample Requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvSampleCollected\"\r\n                                id=\"dateHbvSampleCollected\"\r\n                                value={formik.values.dateHbvSampleCollected}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvSampleCollected !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvSampleCollected}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvDnaResultReported\">\r\n                                Date of HBV DNA result reported{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvDnaResultReported\"\r\n                                id=\"dateHbvDnaResultReported\"\r\n                                value={formik.values.dateHbvDnaResultReported}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvDnaResultReported !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvDnaResultReported}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-2 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                HBV DNA(UI/ml){\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"detected\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Detected\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"undetected\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Undetected\r\n                                </label>\r\n\r\n                                {formik.errors.hbvDna !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDna}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </div>\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hbvDna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hbvDnaValue\">\r\n                                  Input HBV DNA value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hbvDnaValue\"\r\n                                  id=\"hbvDnaValue\"\r\n                                  value={formik.values.hbvDnaValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.hbvDnaValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"landmark\">HBsAG Quantification</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbsAgQuantification\"\r\n                                id=\"hbsAgQuantification\"\r\n                                value={formik.values.hbsAgQuantification}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbsAgQuantification ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbsAgQuantification}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbeAg\">HbeAG</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbeAg\"\r\n                                id=\"hbeAg\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hbeAg}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hbeAg !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbeAg}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"antiHdv\">Anti-HDV</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"antiHdv\"\r\n                                id=\"antiHdv\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.antiHdv}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                                <option value={\"not done\"}>Not Done</option>\r\n                              </select>\r\n                              {formik.errors.antiHdv !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.antiHdv}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"treatmentEligible\">\r\n                                Treatment Eligible\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"treatmentEligible\"\r\n                                id=\"treatmentEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.treatmentEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"yes\"}>Yes</option>\r\n                                <option value={\"no\"}>No</option>\r\n                              </select>\r\n                              {formik.errors.treatmentEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.treatmentEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"pmtctEligible\">PMTCT Eligible</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"pmtctEligible\"\r\n                                id=\"pmtctEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pmtctEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.pmtctEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.pmtctEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4-12\">\r\n                            <FormGroup>\r\n                              <Label for=\"comment\">Comment</Label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                name=\"comment\"\r\n                                id=\"comment\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.comment}\r\n                                cols=\"50\"\r\n                                rows=\"30\"\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                  height: \"120px\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.comment !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.comment}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis C\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRna\">HCV RNA (IU/ml)</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRna\"\r\n                                id=\"hcvRna\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRna}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"detected\"}>Detected</option>\r\n                                <option value={\"undetected\"}>Undetected</option>\r\n                              </select>\r\n                              {formik.errors.hcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hcvRna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hcvValue\">\r\n                                  Input HCV RNA Value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hcvValue\"\r\n                                  id=\"hcvValue\"\r\n                                  value={formik.values.hcvValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n                                {formik.errors.hcvValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hcvValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hepatitisCoInfection\">\r\n                                Hepatitis Coinfection\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hepatitisCoInfection\"\r\n                                id=\"hepatitisCoInfection\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hepatitisCoInfection}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                multiple\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"hbv/hcv\"}>HBV/HCV</option>\r\n                                <option value={\"hcv/hiv\"}>HCV/HIV</option>\r\n                                <option value={\"hbv/hdv\"}>HBV/HDV</option>\r\n                                <option value={\"hbv/hcd/hiv\"}>\r\n                                  HBV/HCD/HIV\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hepatitisCoInfection !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hepatitisCoInfection}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"commobidities\">\r\n                                Commobidities{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"commobidities\"\r\n                                id=\"commobidities\"\r\n                                value={formik.values.commobidities}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.commobidities !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.commobidities}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pst\">PST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"pst\"\r\n                          id=\"pst\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.pst}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.pst !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pst}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.pst === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pstValue\">\r\n                            Input PST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pstValue\"\r\n                            id=\"pstValue\"\r\n                            value={formik.values.pstValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pstValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pstValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBilirubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBilirubin\"\r\n                          id=\"totalBilirubin\"\r\n                          value={formik.values.totalBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBilirubin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBilirubin\"\r\n                          id=\"directBilirubin\"\r\n                          value={formik.values.directBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTime\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTime\"\r\n                          id=\"prothrombinTime\"\r\n                          value={formik.values.prothrombinTime}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTime !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTime}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">\r\n                          Ultrasound scan (μmol/L)\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"acites\">Acites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acites\"\r\n                          id=\"acites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.acites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.acites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.acites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik.values.ascites === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"severityOfAscites\">\r\n                            Severity of ascites\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"severityOfAscites\"\r\n                            id=\"severityOfAscites\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.severityOfAscites}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"mild\"}>Mild</option>\r\n                            <option value={\"moderate\"}>Moderate</option>\r\n                            <option value={\"massive/gross\"}>\r\n                              Massive/Gross\r\n                            </option>\r\n                          </select>\r\n                          {formik.errors.severityOfAscites !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.severityOfAscites}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"F-0\"}> No Fibrosis</option>\r\n                          <option value={\"F-1\"}>Mild Fibrosis</option>\r\n                          <option value={\"F-2\"}>Moderate Fibrosis</option>\r\n                          <option value={\"F-3\"}> Severe Fibrosis</option>\r\n                          <option value={\"F-4\"}>Cirrhosis</option>\r\n                          <option value={\"not done\"}>Not done</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis\"\r\n                          id=\"diagnosis\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"no fibrosis\"}> No Fibrosis</option>\r\n                          <option value={\"fibrosis\"}>Fibrosis</option>\r\n                          <option value={\"cirrhosis\"}>Cirrhosis</option>\r\n                          <option value={\"hcc\"}>HCC</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.diagnosis !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-between\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<ArrowBackIcon />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n                </MatButton>\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm4;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n// import classNames from 'classnames';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\n// import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\n// import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from \"@material-ui/core/Divider\";\r\n// import { Button } from 'semantic-ui-react';\r\n// import {Label,} from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n// import axios from \"axios\";\r\n// import { url as baseUrl, token } from \"./../../../api\";\r\n// import Typography from '@material-ui/core/Typography';\r\n// import CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCardFollowup(props) {\r\n  const { classes } = props;\r\n  // const patientObj = props.patientObj;\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  // console.log(patientObj);\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  const get_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    Bolanle Bassey\r\n                  </b>\r\n                  <Link to={\"/\"}>\r\n                    <ButtonMui\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-end ms-2 mr-2 mt-2\"\r\n                      //startIcon={<FaUserPlus size=\"10\"/>}\r\n                      startIcon={<TiArrowBack />}\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                        color: \"#fff\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                    </ButtonMui>\r\n                  </Link>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Patient ID :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      KEB/SYMH/COM/017/07/23\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>2019-07-04</b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      4 year(s)\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Gender :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      Female\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                     0\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      Gulumbe\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCardFollowup.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCardFollowup);\r\n","import React from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Form } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateFollowupFormValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\r\nimport PatientCardFollowUp from \"./PatientCardFollowUp\";\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst FollowupForm = () => {\r\n  const onSubmitHandler = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const { formik } = useValidateFollowupFormValuesHook(onSubmitHandler);\r\n  return (\r\n    <>\r\n      <CardContent>\r\n        <PatientCardFollowUp />\r\n      </CardContent>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Preliminary\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfVisit\">\r\n                            Date of visit{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfVisit\"\r\n                            id=\"dateOfVisit\"\r\n                            value={formik.initialValues.dateOfVisit}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.dateOfVisit !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.dateOfVisit}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"bloodPressure\">\r\n                            Blood pressure (mmHg)\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"bloodPressure\"\r\n                            id=\"bloodPressure\"\r\n                            value={formik.initialValues.bloodPressure}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.bloodPressure !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.bloodPressure}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"weight\">\r\n                            Weight <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"weight\"\r\n                            id=\"weight\"\r\n                            value={formik.initialValues.weight}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.weight !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.weight}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"height\">\r\n                            Height <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"height\"\r\n                            id=\"height\"\r\n                            value={formik.initialValues.height}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.height !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.height}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"bmi\">BMI </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"bmi\"\r\n                            id=\"bmi\"\r\n                            value={formik.initialValues.bmi}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.bmi !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.bmi}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbeAg\">HbeAG</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hbeAg\"\r\n                            id=\"hbeAg\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.hbeAg}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"reactive\"}>Reactive</option>\r\n                            <option value={\"non-reactive\"}>Non Reactive</option>\r\n                          </select>\r\n                          {formik.errors.hbeAg !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbeAg}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvDna\">HBV DNA (IU/mL)</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hbvDna\"\r\n                            id=\"hbvDna\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.hbvDna}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"detected\"}>Detected</option>\r\n                            <option value={\"undetected\"}>Undetected</option>\r\n                          </select>\r\n                          {formik.errors.hbvDna !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbvDna}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"landmark\">HBsAG Quantification</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hbsAgQuantification\"\r\n                            id=\"hbsAgQuantification\"\r\n                            value={formik.values.hbsAgQuantification}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.hbsAgQuantification ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbsAgQuantification}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST (UI/mL)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT (UI/mL)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"plt\">PLT (mm3)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"plt\"\r\n                          id=\"plt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.plt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.plt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.plt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.pst === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pstValue\">\r\n                            Input PST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pstValue\"\r\n                            id=\"pstValue\"\r\n                            value={formik.values.pstValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pstValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pstValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBilirubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBilirubin\"\r\n                          id=\"totalBilirubin\"\r\n                          value={formik.values.totalBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"albumin\">\r\n                          Albumin <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"albumin\"\r\n                          id=\"albumin\"\r\n                          value={formik.values.albumin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.albumin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.albumin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBilirubin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBilirubin\"\r\n                          id=\"directBilirubin\"\r\n                          value={formik.values.directBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTime\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTime\"\r\n                          id=\"prothrombinTime\"\r\n                          value={formik.values.prothrombinTime}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTime !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTime}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">Ultrasound scan</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ctScan\">CT scan</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ctScan\"\r\n                          id=\"ctScan\"\r\n                          value={formik.values.ctScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ctScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ctScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"acites\">Acites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acites\"\r\n                          id=\"acites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.acites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.acites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.acites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"severityOfAscites\">\r\n                          Severity of ascites\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"severityOfAscites\"\r\n                          id=\"severityOfAscites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.severityOfAscites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"mild\"}>Mild</option>\r\n                          <option value={\"moderate\"}>Moderate</option>\r\n                          <option value={\"massive/gross\"}>Massive/Gross</option>\r\n                        </select>\r\n                        {formik.errors.severityOfAscites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.severityOfAscites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"F-0\"}> No Fibrosis</option>\r\n                          <option value={\"F-1\"}>Mild Fibrosis</option>\r\n                          <option value={\"F-2\"}>Moderate Fibrosis</option>\r\n                          <option value={\"F-3\"}> Severe Fibrosis</option>\r\n                          <option value={\"F-4\"}>Cirrhosis</option>\r\n                          <option value={\"not done\"}>Not done</option>\r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"stagingDateForLiverBiopsy\">\r\n                          Staging date for liver{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"stagingDateForLiverBiopsy\"\r\n                          id=\"stagingDateForLiverBiopsy\"\r\n                          value={formik.values.stagingDateForLiverBiopsy}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.stagingDateForLiverBiopsy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.stagingDateForLiverBiopsy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis\"\r\n                          id=\"diagnosis\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"no fibrosis\"}> No Fibrosis</option>\r\n                          <option value={\"fibrosis\"}>Fibrosis</option>\r\n                          <option value={\"cirrhosis\"}>Cirrhosis</option>\r\n                          <option value={\"hcc\"}>HCC</option>\r\n                        </select>\r\n                        {formik.errors.diagnosis !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Appointment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"treatmentRegimen\">\r\n                          Treatment regimen\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"treatmentRegimen\"\r\n                          id=\"treatmentRegimen\"\r\n                          value={formik.initialValues.treatmentRegimen}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.treatmentRegimen !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.treatmentRegimen}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"nextAppointment\">\r\n                          Next appointment\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"nextAppointment\"\r\n                          id=\"nextAppointment\"\r\n                          value={formik.initialValues.nextAppointment}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.nextAppointment !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.dateOfHepatitisBPositiveScreening}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"clinicalName\">Clinical Name </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"clinicalName\"\r\n                          id=\"clinicalName\"\r\n                          value={formik.initialValues.clinicalName}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.clinicalName !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.clinicalName}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4-12\">\r\n                      <FormGroup>\r\n                        <Label for=\"remark\">Remark</Label>\r\n                        <textarea\r\n                          className=\"form-control\"\r\n                          name=\"remark\"\r\n                          id=\"remark\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.remark}\r\n                          cols=\"50\"\r\n                          rows=\"30\"\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                            height: \"120px\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.remark !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.remark}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FollowupForm;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  '../patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <br /><br/>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date Registration<span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                      <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <FormGroup> \r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"location\"\r\n                                              id=\"location\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.location} >\r\n                                              <option value=\"\" >Select</option>\r\n                                              <option value=\"Facility\" >Facility</option>\r\n                                              <option value=\"Community\" >Community</option>\r\n                                          </Input>\r\n                                      </FormGroup> \r\n                                      {errors.location !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.location}</span>\r\n                                      ) : \"\" }                                        \r\n                                      \r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-4\">\r\n                                      <FormGroup>\r\n                                      <Label >Facility Name </Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"text\"\r\n                                              name=\"vaccinationFacility\"\r\n                                              id=\"vaccinationFacility\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccinationFacility}>\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.vaccinationFacility !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              )}\r\n                                        \r\n                                        <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n                                            </div>\r\n                                            </div>\r\n                                            </div>\r\n                    \r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                            <h5 className=\"card-title\" style={{color:'#fff'}}>VH Laboratory register</h5>\r\n                                            {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                        </div>\r\n                                        {showContactCard && (\r\n                                        <div className=\"card-body\">\r\n                                            <div className={\"row\"}>\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Clinic/Unit where test request was ordered</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HBV screening</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>HBcAb (Total)</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">HBsAg quantification(IU/ml)</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HBeAg</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Anti-HDV</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                    </div>\r\n                                                    <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HBV DNA (Write exact result)</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HCV screening</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Type of HCV RNA test</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Hepatitis C Virus RNA Testing</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                    </div>\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">HCV RNA Write exact result(IU/ml)</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HIV Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                          </div>\r\n                                      </div>\r\n                                )}\r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br/>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Steppers from \"./Stepper/Stepper\";\r\nimport ViralHepatitisForm1 from \"./ViralHepatitisForms/Form1\";\r\nimport ViralHepatitisForm2 from \"./ViralHepatitisForms/Form2\";\r\nimport ViralHepatitisForm3 from \"./ViralHepatitisForms/Form3\";\r\nimport ViralHepatitisForm4 from \"./ViralHepatitisForms/Form4\";\r\nimport FollowupForm from \"./ViralHepatitisForms/FollowUp\";\r\nimport LaboratoryRegister from \"./ViralHepatitisForms/LaboratoryRegister\";\r\nimport { useLocalStorageState } from \"../../hooks/useLocalStorageState\";\r\n\r\nconst ViralHepatitisFormsContainer = (props) => {\r\n  const [step, setStep] = useLocalStorageState(\r\n    \"hepatitis-enrollment-form-step\",\r\n    0\r\n  );\r\n\r\n  useEffect(() => {\r\n    setStep(0);\r\n  }, []);\r\n  const formMap = {\r\n    0: <ViralHepatitisForm1 step={step} setStep={setStep} />,\r\n    1: <ViralHepatitisForm2 step={step} setStep={setStep} />,\r\n    2: <ViralHepatitisForm3 step={step} setStep={setStep} />,\r\n    // 3: <FollowupForm step={step} setStep={setStep}/>,\r\n    // 4: <LaboratoryRegister/>,\r\n  };\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Viral Hepatitis /</Link>New Client\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/\",\r\n          state: \"users\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mr-10 pr-10\"\r\n          style={{\r\n            backgroundColor: \"#014d88\",\r\n            fontWeight: \"bolder\",\r\n            margingRight: \"-40px\",\r\n          }}\r\n          startIcon={<TiArrowBack />}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n            Back{\" \"}\r\n          </span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n      <Steppers activeStep={step} />\r\n      {formMap[step]}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisFormsContainer;\r\n","import * as React from 'react'\r\n\r\n/**\r\n *\r\n * @param {String} key The key to set in localStorage for this value\r\n * @param {Object} defaultValue The value to use if it is not already in localStorage\r\n * @param {{serialize: Function, deserialize: Function}} options The serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse respectively)\r\n */\r\n\r\nfunction useLocalStorageState(\r\n  key,\r\n  defaultValue = '',\r\n  // the = {} fixes the error we would get from destructuring when no argument was passed\r\n  // Check https://jacobparis.com/blog/destructure-arguments for a detailed explanation\r\n  {serialize = JSON.stringify, deserialize = JSON.parse} = {},\r\n) {\r\n  const [state, setState] = React.useState(() => {\r\n    const valueInLocalStorage = window.localStorage.getItem(key)\r\n    if (valueInLocalStorage) {\r\n      // the try/catch is here in case the localStorage value was set before\r\n      // we had the serialization in place (like we do in previous extra credits)\r\n      try {\r\n        return deserialize(valueInLocalStorage)\r\n      } catch (error) {\r\n        window.localStorage.removeItem(key)\r\n      }\r\n    }\r\n    return typeof defaultValue === 'function' ? defaultValue() : defaultValue\r\n  })\r\n\r\n  const prevKeyRef = React.useRef(key)\r\n\r\n  // Check the example at src/examples/local-state-key-change.js to visualize a key change\r\n  React.useEffect(() => {\r\n    const prevKey = prevKeyRef.current\r\n    if (prevKey !== key) {\r\n      window.localStorage.removeItem(prevKey)\r\n    }\r\n    prevKeyRef.current = key\r\n    window.localStorage.setItem(key, serialize(state))\r\n  }, [key, state, serialize])\r\n\r\n  return [state, setState]\r\n}\r\n\r\nexport {useLocalStorageState}","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\n// import RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport ViralHepatitisFormsContainer from \"./main/webapp/jsx/components/Patient/ViralHepatitisFormsContainer\";\r\nimport FollowupForm from \"./main/webapp/jsx/components/Patient/ViralHepatitisForms/FollowUp\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            {/* <PatientDetail /> */}\r\n            <FollowupForm/>\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <ViralHepatitisFormsContainer />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}