{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/PatientVaccinatedLIst.js","main/webapp/jsx/formSchemas/form1ValidationSchema.js","main/webapp/jsx/helpers/cookieStoragehelpers.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form1.js","main/webapp/jsx/components/Patient/SummaryTypeSelect/SummaryTypeSelect.js","main/webapp/jsx/formSchemas/summaryFormsValidationSchema.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Reactive.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/NonReactive.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Fibrosis.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Cirrhosis.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HepatocellularCarcinoma.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType1.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType2.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType3.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType4.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryFormContainer.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","main/webapp/jsx/components/Patient/Stepper/Stepper.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form2.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form3.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form4.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/PatientCardFollowUp.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/FollowUp.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/LaboratoryRegister.js","main/webapp/jsx/components/Patient/ViralHepatitisFormsContainer.js","main/webapp/jsx/hooks/useLocalStorageState.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","calculate_age","dob","today","Date","birthDate","split","age_now","getFullYear","m","getMonth","getDate","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","concat","baseUrl","pageSize","page","headers","then","response","result","_result$data","_result$data$records","_result$data$records$","records","map","call","row","name","firstName","lastName","hospital_number","participantId","gender","age","count","Label","size","vaccinationStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","useValidateForm2ValuesHook","onSubmit","Form2ValidationSchema","yup","formik","useFormik","initialValues","validationSchema","setCookie","value","daysToExpire","expirationDate","setDate","cookieValue","encodeURIComponent","JSON","stringify","toUTCString","document","cookie","getCookie","cookieArray","decodeURIComponent","i","length","charAt","substring","indexOf","parse","library","add","faCheckSquare","faCoffee","faEdit","faTrash","useStyles","borderRadius","demo","palette","background","default","inline","ViralHepatitisForm1","_ref","setStep","_useState","useState","active","streetAddress","address","contact","contactPoint","dateOfBirth","deceased","deceasedDateTime","genderId","identifier","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","phoneNumber","altPhonenumber","countryId","stateId","district","sexId","ninNumber","_useState2","_slicedToArray","basicInfo","setBasicInfo","_useState3","_useState4","genders","setGenders","_useState5","_useState6","maritalStatusOptions","setMaritalStatusOptions","_useState7","_useState8","educationOptions","setEducationOptions","_useState9","_useState10","occupationOptions","setOccupationOptions","_useState11","_useState12","relationshipOptions","setRelationshipOptions","_useState13","_useState14","countries","setCountries","_useState15","_useState16","states","setStates","_useState17","_useState18","setProvinces","_useState19","_useState20","_useState21","_useState22","settopLevelUnitCountryOptions","_useState23","_useState24","carePoints","setCarePoints","_useState25","_useState26","setSourceReferral","_useState27","_useState28","setPregnancyStatus","sexCodeset","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","apiUrl","Authorization","sent","sort","stop","apply","arguments","loadMaritalStatus","useCallback","_callee2","_context2","t0","loadEducation","_callee3","_context3","loadOccupation","_callee4","_context4","loadRelationships","_callee5","_context5","loadTopLevelCountry","_callee6","_context6","loadOrganisationUnitsByParentId","_ref8","_callee7","parentId","_context7","abrupt","_x","setStateByCountryId","catch","postDataWithToken","_ref9","_callee8","key","_response$data","_response$data2","_context8","post","console","log","toast","enrollmentId","enrollmentUuid","message","_x2","_x3","classes","Form1ValidationSchema","useValidateForm1ValuesHook","values","scrollTo","restructuredEnrolmentPayload","bmi","weight","breastfeeding","coreEntryPoint","hepatitisB","historyOfUsingAbusedSubstance","personDto","assignerId","type","organizationId","surname","pregnancy","screening","dateOfFirstHepatitisBPositiveScreening","hepatitisC","useEffect","setValues","castCookieValueToForm","setEnrollSetting","e","_e$target2","_e$target3","_formik$values","target","getProvinces","_e$target","getCountryId","getStates","_Fragment","Card","className","CardContent","Form","handleSubmit","FormGroup","for","id","onChange","handleChange","onBlur","handleBlur","border","errors","phone","item","index","Number","landmark","relationship","MatButton","endIcon","ArrowForward","textTransform","SummaryTypeSelect","setFormValues","_ref$formValues","formValues","select1Value","select2Value","select3Value","maxWidth","Row","Col","Input","event","prevState","disabled","useValidateSummaryValuesHook","ReactiveFormSchema","Reactive","hepatitisBDropdown","hepatitisCDropdown","coInfectionDropdown","isDropdownsOpen","setIsDropdownsOpen","justifyContent","marginLeft","IconButton","onClick","ExpandMoreIcon","Collapse","in","padding","maleNineAndUnder","maleTen2Fourteen","maleFifteenAndAbove","maleTotal","femaleNineAndUnder","femaleTen2Fourteen","femaleFifteenAndAbove","femaleTotal","specialPopulationPWID","specialPopulationPW","NonReactive","Fibrosis","Cirrhosis","HepatocellularCarcinoma","HbvType1","HbvType2","HbvType3","HbvType4","ViralHepatitisSummaryFormContainer","_formMap","formMap","_defineProperty","divStyle","Home","setKey","Fragment","startIcon","FaUserPlus","xl","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","heading","typography","pxToRem","secondaryHeading","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","TiArrowBack","dateParts","dateObject","moment","format","Divider","navItemText","SubMenu","patientObjs","Observation","observation","filter","x","Menu","inverted","Item","setActiveContent","activeContent","route","getAge","Vaccination","setErrors","temp","vaccine","setVaccine","adverseEffect","batchNumber","doseNumber","patientId","vaccinationFacility","vaccineDate","objValues","setObjValues","saving","setSaving","VACCINE","handleInputChange","Modal","isOpen","showModal","toggle","ModalHeader","ModalBody","CardBody","InputGroup","SaveIcon","preventDefault","Object","every","loadPatients","CancelIcon","PatientVaccinationHistory","vacinationList","setVaccinationtList","modal","setModal","_React$useState","React","_React$useState2","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","setRecord","patients","_patients","vaccineName","position","Dropdown","LoadEditModal","IconMenu","LoadDeleteModal","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","RecentHistory","VaccinationHistory","PatientnHistory","recentActivities","setRecentActivities","loading","setLoading","useHistory","PatientHistory","personId","activities","LoadViewPage","action","path","actionType","isLoading","date","viewable","Icon","LoadDeletePage","fontFamily","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","setDevices","pageLoading","setPageLoading","_React$useState3","_React$useState4","showCapture","setshowCapture","_React$useState5","_React$useState6","setTryAgain","_React$useState7","_React$useState8","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","biometricItems","_biometricItems","_","uniq","extend","captured","includes","_ref3","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","finger","find","_toConsumableArray","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","required","_ref4","validate","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","category","patient_id","questionAnswers","visit_date","datatype","responses","obj","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","chronicMedicationModal","setChronicMedicationModal","supportiveCareModal","setSupportiveCareModal","vaccinationHistory","setVaccinationHistory","inclusionHistory","setInclusionHistory","demograhicHistory","setDemographicHistory","_useState29","_useState30","vitalHistory","setVitalHistory","_useState31","_useState32","comobitieHistory","setComobitieHistory","_useState33","_useState34","reinfectionHistory","setReinfectionHistory","_useState35","_useState36","signsSymptomsHistory","setSignsSymptomsHistory","_useState37","_useState38","chronicMedicationHistory","setChronicMedicationHistory","_useState39","_useState40","medicationHistory","setMedicationHistory","_useState41","_useState42","supportiveCarenHistory","setSupportiveCareHistory","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","Demographic","VitalSign","Comorbitie","SignsSymptoms","art","setArt","activeTab","prepId","PatientCardDetail","AddmissionHome","flexGrow","UserRegistration","email","relationshipId","middleName","relatives","setRelatives","toISOString","substr","replace","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","provinces","userDetail","user","useLocation","setfemaleStatus","_useState43","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","prepSupporter","uniqueClientId","ancUnique","_useState44","_useState45","_useState46","_useState47","_useState48","_useState49","_useState50","hivStatus","setHivStatus","_useState51","_useState52","_useState53","_useState54","setTbStatus","_useState55","_useState56","setKP","_useState57","_useState58","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","setOvcEnrolled","_useState65","_useState66","open","setOpen","locationState","loadGenders","getSex","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","newConatctsInfo","contactInfo","line","push","identifiers","hospitalNumber","altphone","country","uniqueId","maritalStatus","employmentStatus","education","city","getStateId","patientAge","sex","alert","getSexId","handleDateOfBirthChange","dateOfRegistration1","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","slice","getRelationship","handleInputChangeRelatives","checkPhoneNumberBasic","inputName","patientForm","fullName","POSITION","TOP_RIGHT","autoClose","hideProgressBar","min","max","defaultChecked","currentDate","setMonth","dobNew","Math","abs","maritalStatusOption","occupationOption","educationOption","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","relative","splice","handleEditRelative","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","AddIcon","code","Spinner","patientDTO","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","enrollment","getCharacters","hosiptalNumber","_callee9","_context9","person","hivEnrollment","put","handleCheckBox","checked","floor","random","htmlFor","backButton","instructions","Steppers","activeStep","steps","Stepper","alternativeLabel","label","Step","StepLabel","ViralHepatitisForm2","_formik$values2","enrollmentIds","restructuredDiagnosisPayload","hepatitisBTest","dateHbvTestRequested","dateHbvSampleRequested","dateHbvDnaTestRequested","stagingDateOfLiverBiopsy","hbvDna","hvbDnaValue","hbsAgQuantification","ctScan","albumin","hbeAG","antiHDV","treatmentEligible","pmtctEligible","comment","hepatitisCTest","hcvRNA","hcRnaValue","hepatitisCoinfection","commobidities","multipleInfection","clinicalParameters","ast","pst","plt","astValue","totalBiliRubin","directBiliribin","apriScore","fib4","prothrombinTimeNR","urea","creatinine","afp","fibroscan","ultrasoundScan","ascites","severityOfAscites","gradeOfEncephalopathy","childPughScore","liverBiopsyStage","diagnosis_result","dateHbvDnaResultReported","cols","rows","altValue","pstValue","ArrowBackIcon","deleteCookie","formatDate","inputDate","dateArray","year","month","ViralHepatitisForm3","_form3InitialValues","_yup$object","form3InitialValues","Form3ValidationSchema","useValidateForm3ValuesHook","hbvDateStarted","restructuredTreatmentPayload","hepatitisBTreatment","dateStarted","dateStopped","hbvDateStopped","hbvPastTreatmentRegimen","hepatitisBRegimenSwitch","adverseEffectReported","hbvAdverseEffectReported","hbvRegimeSwitchDateStarted","hbvRegimeSwitchDateStopped","newRegime","hbvRegimeSwitchNewRegimen","reasonForSwitch","hbvRegimeSwitchReason","historyOfAdverseEffect","hbvHistoryOfAdverseEffect","newRegimen","hbvNewRegimen","reasonForHepatitisBTreatment","hbvReasonsForTreatmentComment","reasonsForTreatment","hbvReasonForTreatmentEligibility","treatmentExperience","hbvTreatmentExperience","hepatitisCTreatment","hcvAdverseEventReported","dateCompleted","hcvDateCompleted","hcvDateStarted","hcvDateStopped","hbvPastTreatmentRegimenForHcv","hcvRetreatment","hcvRetreatmentDateStarted","hcvRetreatmentDateStopped","history_of_AdverseEffect","hcvRetreatmentHistoryOfAdverseEffect","hcvRetreatmentNewRegimen","prescribedDuration","hcvRetreatmentPrescribedDuration","retreatmentAdverseEffect","hcvRetreatmentAdverseEffect","hepatitisSvr12Testing","dateTested","svr12TestingDateStarted","svr12TestingHcvRna","hcvRNAValue","svr12TestingHcvRnaValue","retreatmentDateTested","svr12RetreatmentDateTested","hcvTreatmentExperience","hbvTreatmentRegimenSwitch","hbvTreatmentReasonforTreatment","hcvTreatmentRegimenSwitch","hcvTreatmentRegimenHcvRetreatment","hcvTreatmentSvr12Testing","hcvPrescribedDuration","svr12RetreatmentHcvRna","svr12RetreatmentHcvRnaValue","FollowupForm","FollowupFormValidationSchema","dateOfVisit","bloodPressure","hbeAg","directBilirubin","stagingDateForLiverBiopsy","treatmentRegimen","nextAppointment","remark","useValidateFollowupFormValuesHook","PatientCardFollowUp","totalBilirubin","prothrombinTime","acites","diagnosis","dateOfHepatitisBPositiveScreening","clinicalName","ViralHepatitisFormsContainer","_useLocalStorageState","defaultValue","undefined","_ref$serialize","serialize","_ref$deserialize","deserialize","valueInLocalStorage","localStorage","getItem","removeItem","setState","prevKeyRef","prevKey","current","setItem","useLocalStorageState","_useLocalStorageState2","step","margingRight","App","Router","Switch","Route","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.3bc8d9c9.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url =  'http://localhost:8383/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjk1MzIxNDQ3fQ.QtLLqHufAUbTL556e72m2qu09kJcHWye4iiaAB_vA5cZEgoF0MYOR7W5qd-_NzOtch1mJGmOW16BnwrZJWVRGw'","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            { title: \"Patient Number\", field: \"hospital_number\", filtering: false },\r\n            {\r\n                title: \"Name\",\r\n                field: \"name\",\r\n            },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            // { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: true }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result?.data?.records?.map?.((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst invalidTextPrompt = \"Invalid input type\";\r\nconst requiredTextPrompt = \"field is required\";\r\n\r\nexport const useValidateForm1ValuesHook = (onSubmit) => {\r\n  const form1InitialValues = {\r\n    \"stateId\": \"\",\r\n    \"otherName\": \"\",\r\n    \"countryId\": \"\",\r\n    \"coreEntryPoint\": \"\",\r\n    \"pregnancy\": \"\",\r\n    \"weight\": \"\",\r\n    \"height\": \"\",\r\n    \"hepatitisB\": \"\",\r\n    \"breastfeeding\": \"\",\r\n    \"historyOfUsingAbusedSubstance\": \"\",\r\n    \"dateOfFirstHepatitisBPositiveScreening\": \"\",\r\n    \"hepatitisC\": \"\",\r\n    \"surname\": \"\",\r\n    \"firstName\": \"\",\r\n    \"dateOfBirth\": \"\",\r\n    \"maritalStatusId\": \"\",\r\n    \"phone\": \"\",\r\n    \"ninNumber\": \"\",\r\n    \"isDateOfBirthEstimated\": \"\",\r\n    \"educationId\": \"\",\r\n    \"employmentStatusId\": \"\",\r\n    \"dateOfRegistration\": \"\",\r\n  };\r\n\r\n  const Form1ValidationSchema = yup.object({\r\n    \"stateId\": yup.number(),\r\n    \"countryId\": yup.number(),\r\n    \"educationId\": yup.number(),\r\n    \"employmentStatusId\": yup.number(),\r\n    \"coreEntryPoint\": yup.string(),\r\n    \"pregnancy\": yup.string(),\r\n    \"weight\": yup.number(),\r\n    \"height\": yup.number(),\r\n    \"hepatitisB\": yup.string(),\r\n    \"breastfeeding\": yup.string(),\r\n    \"historyOfUsingAbusedSubstance\": yup.string(),\r\n    \"dateOfFirstHepatitisBPositiveScreening\": yup.date(),\r\n    \"hepatitisC\": yup.string(),\r\n    \"surname\": yup.string(),\r\n    \"firstName\": yup.string(),\r\n    \"otherName\": yup.string(),\r\n    \"dateOfBirth\": yup.date(),\r\n    \"dateOfRegistration\": yup.date(),\r\n    \"maritalStatusId\": yup.number(),\r\n    \"sexId\": yup.number(),\r\n    \"phone\": yup.string(),\r\n    \"ninNumber\": yup.string(),\r\n    \"isDateOfBirthEstimated\": yup.boolean()\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form1InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form1ValidationSchema,\r\n  });\r\n   return { formik };;\r\n};\r\n\r\n\r\nexport const useValidateForm2ValuesHook = (onSubmit) => {\r\n  const form2InitialValues = {\r\n    \"afp\": \"\",\r\n    \"albumin\": \"\",\r\n    \"alt\": \"\",\r\n    \"altValue\": \"\",\r\n    \"antiHDV\": \"\",\r\n    \"apriScore\": \"\",\r\n    \"ascites\": \"\",\r\n    \"ast\": \"\",\r\n    \"astValue\": \"\",\r\n    \"childPughScore\": \"\",\r\n    \"liverBiopsyStage\": \"\",\r\n    \"comment\": \"\",\r\n    \"commobidities\": \"\",\r\n    \"creatinine\": \"\",\r\n    \"ctScan\": \"\",\r\n    \"dateHbvDnaResultReported\": \"\",\r\n    \"dateHbvSampleCollected\": \"\",\r\n    \"dateHbvSampleRequested\": \"\",\r\n    \"dateHbvTestRequested\": \"\",\r\n    \"dateHbvDnaTestRequested\": \"\",\r\n    \"diagnosis_result\": \"\",\r\n    \"fib4\": \"\",\r\n    \"fibroscan\": \"\",\r\n    \"gradeOfEncephalopathy\": \"\",\r\n    \"hbeAg\": \"\",\r\n    \"hbsAgQuantification\": \"\",\r\n    \"hbvDna\": \"\",\r\n    \"hvbDnaValue\": \"\",\r\n    \"hcvRNA\": \"\",\r\n    \"hcRnaValue\": \"\",\r\n    \"hepatitisCoinfection\": \"\",\r\n    \"stagingDateOfLiverBiopsy\": \"\",\r\n    \"pst\": \"\",\r\n    \"pstValue\": \"\",\r\n    \"pmtctEligible\": \"\",\r\n    \"prothrombinTimeNR\": \"\",\r\n    \"severityOfAscites\": \"\",\r\n    \"multipleInfection\": \"\",\r\n    \"stagingDateForLiverBiopsy\": \"\",\r\n    \"totalBiliRubin\": \"\",\r\n    \"directBiliribin\": \"\",\r\n    \"treatmentEligible\": \"\",\r\n    \"ultrasoundScan\": \"\",\r\n    \"urea\": \"\"\r\n  };\r\n\r\n  const Form2ValidationSchema = yup.object({\r\n    \"afp\": yup.string(),\r\n    \"albumin\": yup.string(),\r\n    \"alt\": yup.string(),\r\n    \"altValue\": yup.string(),\r\n    \"antiHDV\": yup.string(),\r\n    \"apriScore\": yup.string(),\r\n    \"ascites\": yup.string(),\r\n    \"ast\": yup.string(),\r\n    \"astValue\": yup.string(),\r\n    \"childPughScore\": yup.string(),\r\n    \"liverBiopsyStage\": yup.string(),\r\n    \"comment\": yup.string(),\r\n    \"commobidities\": yup.string(),\r\n    \"creatinine\": yup.string(),\r\n    \"ctScan\": yup.string(),\r\n    \"dateHbvDnaResultReported\": yup.date(),\r\n    \"dateHbvSampleCollected\": yup.date(),\r\n    \"dateHbvSampleRequested\": yup.date(),\r\n    \"dateHbvTestRequested\": yup.date(),\r\n    \"dateHbvDnaTestRequested\": yup.date(),\r\n    \"diagnosis_result\": yup.string(),\r\n    \"fib4\": yup.string(),\r\n    \"fibroscan\": yup.string(),\r\n    \"gradeOfEncephalopathy\": yup.number(),\r\n    \"hbeAg\": yup.string(),\r\n    \"hbsAgQuantification\": yup.string(),\r\n    \"hbvDna\": yup.string(),\r\n    \"hvbDnaValue\": yup.string(),\r\n    \"hcvRNA\": yup.string(),\r\n    \"hcRnaValue\": yup.string(),\r\n    \"hepatitisCoinfection\": yup.string(),\r\n    \"stagingDateOfLiverBiopsy\": yup.string(),\r\n    \"pst\": yup.string(),\r\n    \"pstValue\": yup.string(),\r\n    \"pmtctEligible\": yup.string(),\r\n    \"prothrombinTimeNR\": yup.string(),\r\n    \"severityOfAscites\": yup.string(),\r\n    \"multipleInfection\": yup.string(),\r\n    \"stagingDateForLiverBiopsy\": yup.date(),\r\n    \"totalBiliRubin\": yup.string(),\r\n    \"directBiliribin\": yup.string(),\r\n    \"treatmentEligible\": yup.string(),\r\n    \"ultrasoundScan\": yup.string(),\r\n    \"urea\": yup.string()\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form2InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form2ValidationSchema,\r\n  });\r\n   return { formik };;\r\n};\r\n\r\n\r\nexport const useValidateForm3ValuesHook = (onSubmit) => {\r\n  const form3InitialValues = {\r\n    \"hbvDateStarted\": \"\",\r\n    \"hbvDateStopped\": \"\",\r\n    \"hbvHistoryOfAdverseEffect\": \"\",\r\n    \"hbvNewRegimen\": \"\",\r\n    \"hbvPastTreatmentRegimen\": \"\",\r\n    \"hbvReasonForTreatmentEligibility\": \"\",\r\n    \"hbvReasonsForTreatmentComment\": \"\",\r\n    \"hbvRegimeSwitchDateStarted\": \"\",\r\n    \"hbvRegimeSwitchDateStopped\": \"\",\r\n    \"hbvRegimeSwitchHistoryOfAdverseEffect\": \"\",\r\n    \"hbvRegimeSwitchNewRegimen\": \"\",\r\n    \"hbvRegimeSwitchReason\": \"\",\r\n    \"hbvTreatmentExperience\": \"\",\r\n    \"hcvAdverseEventReported\": \"\",\r\n    \"hcvDateCompleted\": \"\",\r\n    \"hcvDateStopped\": \"\",\r\n    \"hcvDateStarted\": \"\",\r\n    \"hcvHistoryOfAdverseEffect\": \"\",\r\n    \"pastTreatmentExperience\": \"\",\r\n    \"hbvPastTreatmentRegimen\": \"\",\r\n    \"hcvPrescribedDuration\": \"\",\r\n    \"hcvRegimeSwitchDateStarted\": \"\",\r\n    \"hcvRegimeSwitchDateStopped\": \"\",\r\n    \"hcvRegimeSwitchHistoryOfAdverseEffect\": \"\",\r\n    \"hcvRetreatmentAdverseEffect\": \"\",\r\n    \"hcvRetreatmentDateStarted\": \"\",\r\n    \"hcvRetreatmentDateStopped\": \"\",\r\n    \"hcvRetreatmentNewRegimen\": \"\",\r\n    \"hcvRetreatmentNewRegime\": \"\",\r\n    \"hcvRetreatmentPrescribedDuration\": \"\",\r\n    \"hcvTreatmentExperience\": \"\",\r\n    \"svr12RetreatmentDateTested\": \"\",\r\n    \"svr12RetreatmentHcvRna\": \"\",\r\n    \"svr12RetreatmentHcvRnaValue\": \"\",\r\n    \"svr12TestingDateStarted\": \"\",\r\n    \"svr12TestingHcvRna\": \"\",\r\n    \"svr12TestingHcvRnaValue\": \"\"\r\n  };\r\n\r\n  const Form3ValidationSchema = yup.object({\r\n    \"hbvDateStarted\": yup.date(),\r\n    \"hbvDateStopped\": yup.date(),\r\n    \"hbvHistoryOfAdverseEffect\": yup.string(),\r\n    \"hbvNewRegimen\": yup.string(),\r\n    \"hbvPastTreatmentRegimen\": yup.string(),\r\n    \"hbvReasonForTreatmentEligibility\": yup.string(),\r\n    \"hbvReasonsForTreatmentComment\": yup.string(),\r\n    \"hbvRegimeSwitchDateStarted\": yup.date(),\r\n    \"hbvRegimeSwitchDateStopped\": yup.date(),\r\n    \"hbvRegimeSwitchHistoryOfAdverseEffect\": yup.string(),\r\n    \"hbvRegimeSwitchNewRegimen\": yup.string(),\r\n    \"hbvRegimeSwitchReason\": yup.string(),\r\n    \"hbvTreatmentExperience\": yup.string(),\r\n    \"hcvAdverseEventReported\": yup.string(),\r\n    \"hcvDateCompleted\": yup.date(),\r\n    \"hcvDateStopped\": yup.date(),\r\n    \"hcvDateStarted\": yup.date(),\r\n    \"hcvHistoryOfAdverseEffect\": yup.string(),\r\n    \"pastTreatmentExperience\": yup.string(),\r\n    \"hbvPastTreatmentRegimen\": yup.string(),\r\n    \"hcvPrescribedDuration\": yup.number(),\r\n    \"hcvRegimeSwitchDateStarted\": yup.date(),\r\n    \"hcvRegimeSwitchDateStopped\": yup.date(),\r\n    \"hcvRegimeSwitchHistoryOfAdverseEffect\": yup.string(),\r\n    \"hcvRetreatmentAdverseEffect\": yup.string(),\r\n    \"hcvRetreatmentDateStarted\": yup.date(),\r\n    \"hcvRetreatmentDateStopped\": yup.date(),\r\n    \"hcvRetreatmentNewRegimen\": yup.string(),\r\n    \"hcvRetreatmentNewRegime\": yup.string(),\r\n    \"hcvRetreatmentPrescribedDuration\": yup.string(),\r\n    \"hcvTreatmentExperience\": yup.string(),\r\n    \"svr12RetreatmentDateTested\": yup.date(),\r\n    \"svr12RetreatmentHcvRna\": yup.string(),\r\n    \"svr12RetreatmentHcvRnaValue\": yup.string(),\r\n    \"svr12TestingDateStarted\": yup.date(),\r\n    \"svr12TestingHcvRna\": yup.string(),\r\n    \"svr12TestingHcvRnaValue\": yup.string()\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form3InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form3ValidationSchema,\r\n  });\r\n   return { formik };\r\n};\r\n\r\nexport const useValidateFollowupFormValuesHook = (onSubmit) => {\r\n  const followupFormIntialValue = {\r\n    dateOfVisit: \"\",\r\n    weight: \"\",\r\n    height: \"\",\r\n    bmi: \"\",\r\n    bloodPressure: \"\",\r\n    hbsAgQuantification: \"\",\r\n    hbeAg: \"\",\r\n    hbvDna: \"\",\r\n\r\n    alt: \"\",\r\n    ast: \"\",\r\n    pst: \"\",\r\n    totalBiliRubin: \"\",\r\n    directBilirubin: \"\",\r\n    albumin: \"\",\r\n    apriScore: \"\",\r\n    fib4: \"\",\r\n    prothrombinTimeNR: \"\",\r\n    urea: \"\",\r\n    creatinine: \"\",\r\n    ultrasoundScan: \"\",\r\n    afp: \"\",\r\n    fibroscan: \"\",\r\n    ctScan: \"\",\r\n    ascites: \"\",\r\n    severityOfAscites: \"\",\r\n    gradeOfEncephalopathy: \"\",\r\n    childPughScore: \"\",\r\n    stagingDateOfLiverBiopsy: \"\",\r\n    stagingDateForLiverBiopsy: \"\",\r\n    diagnosis_result: \"\",\r\n    treatmentRegimen: \"\",\r\n    nextAppointment: \"\",\r\n    remark: \"\",\r\n\r\n  };\r\n\r\n  const FollowupFormValidationSchema = yup.object({\r\n    dateOfVisit: yup.string(),\r\n    weight: yup.string(),\r\n    height: yup.string(),\r\n    bmi: yup.string(),\r\n    bloodPressure: yup.string(),\r\n    hbsAgQuantification: yup.string(),\r\n    hbeAg: yup.string(),\r\n    hbvDna: yup.string(),\r\n\r\n    alt: yup.string(),\r\n    ast: yup.string(),\r\n    pst: yup.string(),\r\n    totalBiliRubin: yup.string(),\r\n    directBilirubin: yup.string(),\r\n    albumin: yup.string(),\r\n    apriScore: yup.string(),\r\n    fib4: yup.string(),\r\n    prothrombinTimeNR: yup.string(),\r\n    urea: yup.string(),\r\n    creatinine: yup.string(),\r\n    ultrasoundScan: yup.string(),\r\n    afp: yup.string(),\r\n    fibroscan: yup.string(),\r\n    ctScan: yup.string(),\r\n    ascites: yup.string(),\r\n    severityOfAscites: yup.string(),\r\n    gradeOfEncephalopathy: yup.string(),\r\n    childPughScore: yup.string(),\r\n    stagingDateOfLiverBiopsy: yup.string(),\r\n    stagingDateForLiverBiopsy: yup.string(),\r\n    diagnosis_result: yup.string()\r\n\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: followupFormIntialValue,\r\n    onSubmit,\r\n    validationSchema: FollowupFormValidationSchema,\r\n  });\r\n   return { formik };;\r\n};\r\n\r\n\r\n\r\n","export function setCookie(name, value, daysToExpire) {\r\n    const expirationDate = new Date();\r\n    expirationDate.setDate(expirationDate.getDate() + daysToExpire);\r\n  \r\n    let cookieValue = encodeURIComponent(name) + \"=\";\r\n  \r\n    // If the value is not a string, stringify it as JSON\r\n    if (typeof value !== 'string') {\r\n      cookieValue += encodeURIComponent(JSON.stringify(value));\r\n    } else {\r\n      cookieValue += encodeURIComponent(value);\r\n    }\r\n  \r\n    cookieValue += \";expires=\" + expirationDate.toUTCString() + \";path=/\";\r\n  \r\n    document.cookie = cookieValue;\r\n}\r\n  \r\n  export function getCookie(name) {\r\n    const decodedCookie = decodeURIComponent(document.cookie);\r\n    const cookieArray = decodedCookie.split(';');\r\n  \r\n    for (let i = 0; i < cookieArray.length; i++) {\r\n      let cookie = cookieArray[i];\r\n      while (cookie.charAt(0) === ' ') {\r\n        cookie = cookie.substring(1);\r\n      }\r\n  \r\n      if (cookie.indexOf(name + \"=\") === 0) {\r\n        const cookieValue = cookie.substring(name.length + 1, cookie.length);\r\n        \r\n        // Check if the value is JSON and parse it if necessary\r\n        try {\r\n          return JSON.parse(decodeURIComponent(cookieValue));\r\n        } catch (error) {\r\n          // If it's not valid JSON, return the raw value\r\n          return decodeURIComponent(cookieValue);\r\n        }\r\n      }\r\n    }\r\n  \r\n    return null;\r\n}\r\n  \r\n","import React, { useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Form } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm1ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { ArrowForward } from \"@material-ui/icons\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { useCallback } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm1 = ({ setStep }) => {\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    streetAddress: \"\",\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: \"\",\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: \"\",\r\n    genderId: \"\",\r\n    identifier: \"\",\r\n    otherName: \"\",\r\n    maritalStatusId: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    dateOfRegistration: \"\",\r\n    isDateOfBirthEstimated: null,\r\n    age: \"\",\r\n    phoneNumber: \"\",\r\n    altPhonenumber: \"\",\r\n    dob: \"\",\r\n    countryId: 1,\r\n    stateId: \"\",\r\n    district: \"\",\r\n    sexId: \"\",\r\n    ninNumber: \"\",\r\n  });\r\n\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n\r\n  const sexCodeset = async () => {\r\n    const response = await axios.get(`${apiUrl}application-codesets/v2/SEX`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    setGenders(response.data.sort());\r\n  };\r\n\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const CareEntryPoint = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/POINT_ENTRY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setCarePoints(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/ENROLLMENT_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${apiUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data.sort());\r\n  }, []);\r\n\r\n  const loadOrganisationUnitsByParentId = async (parentId) => {\r\n    const response = await axios.get(\r\n      `${apiUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n\r\n    return age_now;\r\n  };\r\n  const phoneNumberFormatCheck = (phone) => {\r\n    //console.log(\"err\", phone);\r\n    if (\r\n      phone != undefined &&\r\n      typeof phone?.value !== null &&\r\n      typeof phone?.value !== \"undefined\" &&\r\n      phone?.value?.charAt(0) === \"0\"\r\n    ) {\r\n      phone.value = phone.value.replace(\"0\", \"234\");\r\n    }\r\n    return phone;\r\n  };\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${apiUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get States from selected country\r\n  const getStates = (e) => {\r\n    const getCountryId = e?.target?.value;\r\n    setStateByCountryId(1);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId() {\r\n    axios\r\n      .get(`${apiUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setStates(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e?.target?.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e?.target?.value });\r\n    axios\r\n      .get(\r\n        `${apiUrl}organisation-units/parent-organisation-units/${formik?.values?.state}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const postDataWithToken = async (data, key) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}${key}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      // Handle the response if needed\r\n      console.log(\"Post successful:\", response.data);\r\n      toast.success(\"Enrolment submitted successfully\");\r\n      setCookie(\r\n        \"enrollmentIds\",\r\n        {\r\n          enrollmentId: response.data?.enrollmentId,\r\n          enrollmentUuid: response.data?.enrollmentUuid,\r\n        },\r\n        1\r\n      );\r\n      setStep(1);\r\n      return response.data;\r\n    } catch (error) {\r\n      // Handle any errors that occurred during the request\r\n      toast.error(\"Enrolment failed\");\r\n      console.error(\"Error posting data:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    const restructuredEnrolmentPayload = {\r\n      bmi: values.weight / values.height,\r\n      breastfeeding: values.breastfeeding,\r\n      coreEntryPoint: values.coreEntryPoint,\r\n      height: values.height,\r\n      hepatitisB: values.hepatitisB,\r\n      historyOfUsingAbusedSubstance: values.historyOfUsingAbusedSubstance,\r\n\r\n      personDto: {\r\n        active: true,\r\n        address: [\r\n          {\r\n            countryId: values.countryId,\r\n            stateId: values.stateId,\r\n          },\r\n        ],\r\n        dateOfBirth: values.dateOfBirth,\r\n        dateOfRegistration: values.dateOfRegistration,\r\n        educationId: values.educationId,\r\n        employmentStatusId: values.employmentStatusId,\r\n        firstName: values.firstName,\r\n        genderId: values.sexId,\r\n        identifier: [\r\n          {\r\n            assignerId: 0,\r\n            type: \"string\",\r\n            value: \"string\",\r\n          },\r\n        ],\r\n        isDateOfBirthEstimated:\r\n          values.isDateOfBirthEstimated === \"true\" ? true : false,\r\n        maritalStatusId: values.maritalStatusId,\r\n        ninNumber: values.ninNumber,\r\n        organizationId: 0,\r\n        otherName: values.otherName,\r\n        sexId: values.sexId,\r\n        surname: values.surname,\r\n      },\r\n      pregnancy: values.pregnancy,\r\n      screening: {\r\n        dateOfFirstHepatitisBPositiveScreening:\r\n          values.dateOfFirstHepatitisBPositiveScreening,\r\n        hepatitisC: values.hepatitisC,\r\n      },\r\n      weight: values.weight,\r\n    };\r\n\r\n    setCookie(\"hepatitis1\", values, 1);\r\n    setCookie(\"heaptitis1PayloadValue\", restructuredEnrolmentPayload, 1);\r\n    postDataWithToken(restructuredEnrolmentPayload, \"hepatitis/enrollment\");\r\n    // setStep(1);\r\n  };\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm1ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis1\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n    sexCodeset();\r\n    PregnancyStatus();\r\n    CareEntryPoint();\r\n    SourceReferral();\r\n    loadMaritalStatus();\r\n    loadTopLevelCountry();\r\n    loadRelationships();\r\n    loadOrganisationUnitsByParentId();\r\n    EnrollmentSetting();\r\n    loadEducation();\r\n    getProvinces();\r\n    setStateByCountryId();\r\n    loadOccupation();\r\n    getStates();\r\n    GetCountry();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Demography\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      {/* <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"facilityId\">\r\n                            Facility Id <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"facilityId\"\r\n                            id=\"facilityId\"\r\n                            value={formik.values.facilityId}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.facilityId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.facilityId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div> */}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"surname\">\r\n                            Surname <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"surname\"\r\n                            id=\"surname\"\r\n                            value={formik.values.surname}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.surname !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.surname}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">\r\n                            Firstname <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={formik.values.firstName}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.firstName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"otherName\">Other name </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"otherName\"\r\n                            id=\"otherName\"\r\n                            value={formik.values.otherName}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.otherName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.otherName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"phone\">\r\n                            Phone <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"phone\"\r\n                            id=\"phone\"\r\n                            value={formik.values.phone}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.phone !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.phone}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {/* <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"residentialAddress\">\r\n                            Residential Address{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"residentialAddress\"\r\n                            id=\"residentialAddress\"\r\n                            value={formik.values.residentialAddress}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.residentialAddress !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.residentialAddress}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div> */}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"countryId\">\r\n                            Country <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            // type=\"text\"\r\n                            name=\"countryId\"\r\n                            id=\"countryId\"\r\n                            value={formik.values.countryId}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {countries.map((item, index) => (\r\n                              <option value={Number(item.id)} key={index}>\r\n                                {item.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {formik.errors.countryId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.countryId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"stateId\">\r\n                            State <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"stateId\"\r\n                            id=\"stateId\"\r\n                            value={formik.values.stateId}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {states.map((item, index) => (\r\n                              <option value={Number(item.id)} key={index}>\r\n                                {item.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {formik.errors.stateId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.stateId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"landmark\">Landmark </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"landmark\"\r\n                            id=\"landmark\"\r\n                            value={formik.values.landmark}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.landmark !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.landmark}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {/* <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"lga\">LGA </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lga\"\r\n                            id=\"lga\"\r\n                            value={formik.values.lga}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.lga !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.lga}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div> */}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfBirth\">\r\n                            Date of birth\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfBirth\"\r\n                            id=\"dateOfBirth\"\r\n                            value={formik.values.dateOfBirth}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.dateOfBirth !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.dateOfBirth}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"isDateOfBirthEstimated\">\r\n                            Is date Of estimated\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            // type=\"date\"\r\n                            name=\"isDateOfBirthEstimated\"\r\n                            id=\"isDateOfBirthEstimated\"\r\n                            value={formik.values.isDateOfBirthEstimated}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option>Select</option>\r\n                            <option value={true}>Yes</option>\r\n                            <option value={false}>No</option>\r\n                          </select>\r\n                          {formik.errors.isDateOfBirthEstimated !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.isDateOfBirthEstimated}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of registration\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            value={formik.values.dateOfRegistration}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.dateOfRegistration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.dateOfRegistration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"employmentStatusId\">Occupation</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            value={formik.values.employmentStatusId}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {occupationOptions.map((item, index) => (\r\n                              <option\r\n                                value={Number(item.id)}\r\n                                key={Number(item.id)}\r\n                              >\r\n                                {item.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {formik.errors.employmentStatusId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"maritalStatusId\">\r\n                            Marital status\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            value={formik.values.maritalStatusId}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {maritalStatusOptions.map((item, index) => (\r\n                              <option value={Number(item.id)}>\r\n                                {item.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {formik.errors.maritalStatusId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.maritalStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"educationId\">\r\n                            Education <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            // type=\"text\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            value={formik.values.educationId}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option>Select</option>\r\n                            {educationOptions.map((item, index) => (\r\n                              <option value={Number(item.id)}>\r\n                                {item.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {formik.errors.educationId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"relationship\">\r\n                            Relationship{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"relationship\"\r\n                            id=\"relationship\"\r\n                            value={formik.values.relationship}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option>Select</option>\r\n                            {relationshipOptions.map((item, index) => (\r\n                              <option value={Number(item.id)}>\r\n                                {item.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {formik.errors.relationship !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.relationship}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"sexId\">\r\n                            Sex <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            value={formik.values.sexId}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option>Select</option>\r\n                            {genders.map((item, index) => (\r\n                              <option value={Number(item.id)}>\r\n                                {item.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {formik.errors.sexId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"ninNumber\">NIN number </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"ninNumber\"\r\n                            id=\"ninNumber\"\r\n                            value={formik.values.ninNumber}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.ninNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.ninNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Enrolment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"coreEntryPoint\">\r\n                          Core entry point\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"coreEntryPoint\"\r\n                          id=\"coreEntryPoint\"\r\n                          value={formik.values.coreEntryPoint}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> </option>\r\n                          {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {formik.errors.coreEntryPoint !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.coreEntryPoint}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"sex\">\r\n                          Sex <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"sex\"\r\n                          id=\"sex\"\r\n                          value={formik.values.sex}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"male\">Male</option>\r\n                          <option value=\"female\">Female</option>\r\n                        </select>\r\n                        {formik.errors.sex !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.sex}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div> */}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pregnancy\">\r\n                          Pregnancy <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"pregnancy\"\r\n                          id=\"pregnancy\"\r\n                          value={formik.values.pregnancy}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select </option>\r\n                          <option value=\"NO\">No </option>\r\n                          <option value=\"YES\">Yes </option>\r\n                          {/* {pregnancyStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))} */}\r\n                        </select>\r\n                        {formik.errors.pregnancy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pregnancy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"weight\">\r\n                          Weight (in KG){\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"weight\"\r\n                          id=\"weight\"\r\n                          value={formik.values.weight}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.weight !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.weight}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"height\">\r\n                          Height (In M) <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"height\"\r\n                          id=\"height\"\r\n                          value={formik.values.height}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.height !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.height}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"bmi\">BMI </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"bmi\"\r\n                          id=\"bmi\"\r\n                          value={formik.values.bmi}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.bmi !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.bmi}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div> */}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"hepatitisB\">\r\n                          Hepatitis B (HBsAg){\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"hepatitisB\"\r\n                          id=\"hepatitisB\"\r\n                          value={formik.values.hepatitisB}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.hepatitisB !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.hepatitisB}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"breastfeeding\">\r\n                          Breastfeeding <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"breastfeeding\"\r\n                          id=\"breastfeeding\"\r\n                          value={formik.values.breastfeeding}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value={\"YES\"}>Yes</option>\r\n                          <option value={\"NO\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.breastfeeding !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.breastfeeding}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"historyOfUsingAbusedSubstance\">\r\n                          History of using abused substance{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"historyOfUsingAbusedSubstance\"\r\n                          id=\"historyOfUsingAbusedSubstance\"\r\n                          value={formik.values.historyOfUsingAbusedSubstance}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value={\"YES\"}>Yes</option>\r\n                          <option value={\"NO\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.historyOfUsingAbusedSubstance !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.historyOfUsingAbusedSubstance}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Screening\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfFirstHepatitisBPositiveScreening\">\r\n                          Date of first Hep. B positive screening{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dateOfFirstHepatitisBPositiveScreening\"\r\n                          id=\"dateOfFirstHepatitisBPositiveScreening\"\r\n                          value={\r\n                            formik.values.dateOfFirstHepatitisBPositiveScreening\r\n                          }\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors\r\n                          .dateOfFirstHepatitisBPositiveScreening !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {\r\n                              formik.errors\r\n                                .dateOfFirstHepatitisBPositiveScreening\r\n                            }\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"hepatitisC\">Hepatitis C (HCVAb) </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"hepatitisC\"\r\n                          id=\"hepatitisC\"\r\n                          value={formik.values.hepatitisC}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.hepatitisC !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.hepatitisC}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm1;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, FormGroup, Input } from \"reactstrap\";\r\n\r\nconst SummaryTypeSelect = ({\r\n  setFormValues,\r\n  formValues: { select1Value, select2Value, select3Value },\r\n}) => {\r\n  return (\r\n    <div style={{ maxWidth: \"400px\" }}>\r\n      <Row className=\"d-flex justify-content-between\">\r\n        <Col>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"summary-type\"\r\n              id=\"summary-type\"\r\n              value={select1Value}\r\n              onChange={(event) => setFormValues(prevState => {\r\n                return { ...prevState, select1Value: event.target.value, select2Value: \"\" }\r\n              })}\r\n            >\r\n              <option value=\"\">Summary type</option>\r\n              <option value=\"Hepatitis B\">Hepatitis B</option>\r\n              <option value=\"Hepatitis C\">Hepatitis C</option>\r\n              <option value=\"CoInfection\">CoInfection</option>\r\n            </Input>\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        {select1Value !== \"\" && (\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select2\"\r\n                id=\"select2\"\r\n                value={select2Value}\r\n                onChange={(event) => setFormValues(prevState => {\r\n                  return { ...prevState, select2Value: event.target.value, select3Value: \"\" }\r\n                })}\r\n                disabled={select1Value === \"\"}\r\n              >\r\n                <option value=\"\">select type for {select1Value}</option>\r\n\r\n                {select1Value === \"Hepatitis B\" && (\r\n                  <>\r\n                    <option value=\"Diagnosis\">Diagnosis</option>\r\n                    <option value=\"Complications\">Complications</option>\r\n                    <option value=\"Treatment\">Treatment</option>\r\n                    <option value=\"Monitoring\">Monitoring</option>\r\n                    <option value=\"Mortality\">Mortality</option>\r\n                  </>\r\n                )}\r\n                {select1Value === \"Hepatitis C\" && (\r\n                  <>\r\n                    <option value=\"Screening/Diagnosis\">\r\n                      Screening/Diagnosis\r\n                    </option>\r\n                    <option value=\"HCV Complications\">HCV Complications</option>\r\n                    <option value=\"HCV Treatment\">HCV Treatment</option>\r\n                    <option value=\"HCV Treatment Effectiveness\">\r\n                      HCV Treatment Effectiveness\r\n                    </option>\r\n                    <option value=\"HCV Re-treatment\">HCV Re-treatment</option>\r\n                    <option value=\"HCV Related Mortality\">\r\n                      HCV Related Mortality\r\n                    </option>\r\n                  </>\r\n                )}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        )}\r\n\r\n\r\n        {select2Value !== \"\" && select1Value !== \"\" && (\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select3\"\r\n                id=\"select3\"\r\n                value={select3Value}\r\n                onChange={(event) => setFormValues(prevState => {\r\n                  return { ...prevState, select3Value: event.target.value }\r\n                })}\r\n                disabled={select2Value === \"\"}\r\n              >\r\n                <option value=\"\">\r\n                  Select type for {select1Value} {select2Value}\r\n                </option>\r\n                {select2Value === \"Diagnosis\" && (\r\n                  <>\r\n                    <option value=\"Reactive\">Reactive</option>\r\n                    <option value=\"Non Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Complications\" && (\r\n                  <>\r\n                    <option value=\"Fibrosis\">Fibrosis</option>\r\n                    <option value=\"Cirrhosis\">Cirrhosis</option>\r\n                    <option value=\"Hepatocellular Carcinoma\">\r\n                      Hepatocellular Carcinoma\r\n                    </option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Monitoring\" && (\r\n                  <>\r\n                    <option value=\"Monitoring Reactive\">Reactive</option>\r\n                    <option value=\"Monitoring Non Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Mortality\" && (\r\n                  <>\r\n                    <option value=\"Mortality Reactive\">Reactive</option>\r\n                    <option value=\"Mortality Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Treatment\" && (\r\n                  <>\r\n                    <option value=\"HBV DNA <2000 IU/ml\">\r\n                      HBV DNA {\"<\"}2000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBV DNA >=2000 IU/ml\">\r\n                      HBV DNA {\">=\"}2000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBV DNA >=200000 IU/ml\">\r\n                      HBV DNA {\">=\"}200,000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBegAg +ve\">HBegAg +ve</option>\r\n                  </>\r\n                )}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SummaryTypeSelect\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useValidateSummaryValuesHook = (onSubmit) => {\r\n  const reactiveFormInitialValues = {\r\n   \"maleNineAndUnder\": \"\",\r\n   \"maleTen2Fourteen\": \"\",\r\n   \"maleFifteenAndAbove\": \"\",\r\n   \"maleTotal\" : \"\",\r\n   \"femaleNineAndUnder\": \"\",\r\n   \"femaleTen2Fourteen\": \"\",\r\n   \"femaleFifteenAndAbove\": \"\",\r\n   \"femaleTotal\" : \"\",\r\n   \"specialPopulationPWID\" : \"\",\r\n   \"specialPopulationPW\" : \"\",\r\n  };\r\n\r\n  const ReactiveFormSchema = yup.object({\r\n    \"maleNineAndUnder\": yup.string(),\r\n    \"maleTen2Fourteen\": yup.string(),\r\n    \"maleFifteenAndAbove\": yup.string(),\r\n    \"maleTotal\" : yup.string(),\r\n    \"femaleNineAndUnder\": yup.string(),\r\n    \"femaleTen2Fourteen\": yup.string(),\r\n    \"femaleFifteenAndAbove\": yup.string(),\r\n    \"femaleTotal\" : yup.string(),\r\n    \"specialPopulationPWID\" : yup.string(),\r\n    \"specialPopulationPW\" : yup.string(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: reactiveFormInitialValues,\r\n    onSubmit,\r\n    validationSchema: ReactiveFormSchema,\r\n  });\r\n   return { formik };;\r\n};","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Reactive = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Reactive\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reactive;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst NonReactive = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Non-Reactive\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NonReactive;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Fibrosis = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Fibrosis\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Fibrosis;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Cirrhosis = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Cirrhosis\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cirrhosis;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HepatocellularCarcinoma = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Hepatocellular Carcinoma\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HepatocellularCarcinoma;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType1 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\"<\"} 2000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType1;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType2 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\">=\"}2000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType2;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType3 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\">=\"}200000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType3;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType4 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBegAg +ve\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType4;\r\n","import React, { useState } from \"react\";\r\nimport SummaryTypeSelect from \"./SummaryTypeSelect/SummaryTypeSelect\";\r\nimport Reactive  from \"../Patient/ViralHepatitisSummaryForms/Reactive\";\r\nimport NonReactive from \"./ViralHepatitisSummaryForms/NonReactive\";\r\nimport Fibrosis from \"./ViralHepatitisSummaryForms/Fibrosis\";\r\nimport Cirrhosis from \"./ViralHepatitisSummaryForms/Cirrhosis\";\r\nimport HepatocellularCarcinoma from \"./ViralHepatitisSummaryForms/HepatocellularCarcinoma\";\r\nimport HbvType1 from \"./ViralHepatitisSummaryForms/HbvType1\";\r\nimport HbvType2 from \"./ViralHepatitisSummaryForms/HbvType2\";\r\nimport HbvType3 from \"./ViralHepatitisSummaryForms/HbvType3\";\r\nimport HbvType4 from \"./ViralHepatitisSummaryForms/HbvType4\";\r\n\r\nconst ViralHepatitisSummaryFormContainer = () => {\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    select1Value: \"\",\r\n    select2Value: \"\",\r\n    select3Value: \"\",\r\n});\r\n\r\nconst formMap = {\r\n    \"Reactive\" : <Reactive/>,\r\n    \"Non Reactive\" : <NonReactive/>,\r\n    \"Fibrosis\" : <Fibrosis/>,\r\n    \"Cirrhosis\" : <Cirrhosis/>,\r\n    \"Hepatocellular Carcinoma\" : <HepatocellularCarcinoma/>,\r\n    \"HBV DNA <2000 IU/ml\" : <HbvType1/>,\r\n    \"HBV DNA >=2000 IU/ml\" : <HbvType2/>,\r\n    \"HBV DNA >=200000 IU/ml\" : <HbvType3/>,\r\n    \"HBegAg +ve\" : <HbvType4/>,\r\n    \"Mortality Reactive\" : <div> Mortality Reactive</div>,\r\n    \"Mortality Reactive\" : <div> Mortality Reactive</div>,\r\n    \"Monitoring Reactive\" : <div>Monitoring Reactive</div>,\r\n    \"Monitoring Non Reactive\" : <div>Monitoring Non Reactive</div>,\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <SummaryTypeSelect formValues={formValues} setFormValues={setFormValues}/>\r\n      </div>\r\n\r\n      <div className=\"my-2\" style={{fontWeight: \"600\"}}>\r\n        <span>{formValues.select1Value && ` ${formValues.select1Value} `}</span>\r\n        <span>{formValues.select2Value && ` | ${formValues.select2Value } `}</span>\r\n        <span style={{color: \"#014d88\"}}>{formValues.select3Value && `| ${formValues.select3Value} `}</span>\r\n      </div>\r\n\r\n      <div>\r\n       {formMap[formValues.select3Value]}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisSummaryFormContainer;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList'\r\nimport PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nimport ViralHepatitis from \"./Patient/ViralHepatitisForms/Form1\"\r\nimport ViralHepatitisSummaryFormContainer from \"./Patient/ViralHepatitisSummaryFormContainer\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>Viral Hepatitis</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n\r\n                  <Tab eventKey=\"visualization\" title=\"Hepatitis Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>  \r\n\r\n\r\n                  <Tab eventKey=\"vaccinated\" title=\"Summary\">                   \r\n                    {/* <PatientVaccinatedLIst /> */}\r\n                   <ViralHepatitisSummaryFormContainer/>\r\n                  </Tab>                \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.phone!==null ? patientObj.phone :\"\"}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{patientObj.address!==null ? patientObj.address : \"\"} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    const loadVaccination = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    }\r\n    const loadIcu = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'icu'})\r\n    }\r\n    const loadAddmission = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    }\r\n    const onClickDischarge = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        //setActiveItem('history')\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>                  \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    console.log(props.records)\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Dosage Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n    console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>       \r\n            <br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Vaccination History \"\r\n              columns={[\r\n                { title: \"Vaccine\", field: \"vaccine\", filtering: false },\r\n                {\r\n                  title: \"Vaccine Date\",\r\n                  field: \"vaccineDate\",\r\n                },\r\n                \r\n                { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                { title: \"Location\", field: \"location\", filtering: false },      \r\n                { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ vacinationList.map((row) => ({\r\n                    vaccine: row.vaccineName,\r\n                    vaccineDate: row.vaccineDate,\r\n                    batchNumber: row.batchNumber,\r\n                    doseNumber: row.doseNumber,\r\n                    location: row.location,\r\n                    vaccinationFacility: row.vaccinationFacility,\r\n                    adverseEffect: row.adverseEffect,\r\n                    actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>\r\n                  \r\n                  }))}\r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { Fragment} from \"react\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n  \r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >HEPATITIS /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Enrolement', 'Diagnosis', 'Treatment'];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return 'Enrolement';\r\n    case 1:\r\n      return 'Diagnosis';\r\n    case 2:\r\n      return 'Treatment';\r\n    default:\r\n      return 'Unknown stepIndex';\r\n  }\r\n}\r\n\r\nexport default function Steppers({activeStep}) {\r\n  \r\n  \r\n  const steps = getSteps();\r\n\r\n\r\n  return (\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm2ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm2 = ({ setStep }) => {\r\n\r\n  const postDataWithToken = async (data, key) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}${key}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      console.log(\"Post successful:\", response.data);\r\n      toast.success(\"Diagnosis submitted successfully\");\r\n      setStep(2);\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(\"Diagnosis failed\");\r\n      console.error(\"Error posting data:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    const enrollmentIds = getCookie(\"enrollmentIds\")\r\n    const restructuredDiagnosisPayload = {\r\n      enrollmentUuid: enrollmentIds?.enrollmentUuid,\r\n      hepatitisBTest: {\r\n        dateHbvTestRequested: values.dateHbvTestRequested,\r\n        dateHbvSampleRequested: values.dateHbvSampleRequested,\r\n        dateHbvDnaTestRequested: values.dateHbvDnaTestRequested,\r\n        stagingDateOfLiverBiopsy: values.stagingDateOfLiverBiopsy,\r\n        hbvDna: values.hbvDna,\r\n        hvbDnaValue: values.hvbDnaValue,\r\n        hbsAgQuantification: values.hbsAgQuantification,\r\n        ctScan: values.ctScan,\r\n        albumin: values.albumin,\r\n        hbeAG: values.hbeAG,\r\n        antiHDV: values.antiHDV,\r\n        treatmentEligible: values.treatmentEligible,\r\n        pmtctEligible: values.pmtctEligible,\r\n        comment: values.comment,\r\n      },\r\n      hepatitisCTest: {\r\n        hcvRNA: values.hcvRNA,\r\n        hcRnaValue: values.hcRnaValue,\r\n        hepatitisCoinfection: values.hepatitisCoinfection,\r\n        commobidities: values.commobidities,\r\n        multipleInfection: values.multipleInfection,\r\n      },\r\n      clinicalParameters: {\r\n        ast: values.ast,\r\n        alt: values.alt,\r\n        pst: values.plt,\r\n        astValue: values.astValue,\r\n        totalBiliRubin: values.totalBiliRubin,\r\n        directBiliribin: values.directBiliribin,\r\n        apriScore: values.apriScore,\r\n        fib4: values.fib4,\r\n        prothrombinTimeNR: values.prothrombinTimeNR,\r\n        urea: values.urea,\r\n        creatinine: values.creatinine,\r\n        afp: values.afp,\r\n        fibroscan: values.fibroscan,\r\n        ultrasoundScan: values.ultrasoundScan,\r\n        ascites: values.ascites,\r\n        severityOfAscites: values.severityOfAscites,\r\n        gradeOfEncephalopathy: values.gradeOfEncephalopathy,\r\n        childPughScore: values.childPughScore,\r\n        liverBiopsyStage: values.liverBiopsyStage,\r\n        diagnosis_result: values.diagnosis_result,\r\n      },\r\n    };\r\n    setCookie(\"hepatitis2\", values, 1);\r\n    setCookie(\"heaptitis2PayloadValue\", restructuredDiagnosisPayload, 1);\r\n    postDataWithToken(restructuredDiagnosisPayload, \"hepatitis/diagnosis\");\r\n  };\r\n\r\n\r\n  const moveBack = () => {\r\n    window.scrollTo(0, 0);\r\n    setStep(0);\r\n  };\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm2ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis2\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n  }, []);\r\n\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Diagnosis\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis B\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvDnaTestRequested\">\r\n                                Date HBV DNA test requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvDnaTestRequested\"\r\n                                id=\"dateHbvDnaTestRequested\"\r\n                                value={formik.values.dateHbvDnaTestRequested}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvDnaTestRequested !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvDnaTestRequested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvTestRequested\">\r\n                                Date HBV test requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvTestRequested\"\r\n                                id=\"dateHbvTestRequested\"\r\n                                value={formik.values.dateHbvTestRequested}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvTestRequested !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvTestRequested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvSampleRequested\">\r\n                                Date HBV sample Requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvSampleRequested\"\r\n                                id=\"dateHbvSampleRequested\"\r\n                                value={formik.values.dateHbvSampleRequested}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvSampleRequested !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvSampleRequested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvDnaResultReported\">\r\n                                Date of HBV DNA result reported{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvDnaResultReported\"\r\n                                id=\"dateHbvDnaResultReported\"\r\n                                value={formik.values.dateHbvDnaResultReported}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvDnaResultReported !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvDnaResultReported}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"stagingDateOfLiverBiopsy\">\r\n                                Staging date of liver biopsy{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"stagingDateOfLiverBiopsy\"\r\n                                id=\"stagingDateOfLiverBiopsy\"\r\n                                value={formik.values.stagingDateOfLiverBiopsy}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.stagingDateOfLiverBiopsy !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.stagingDateOfLiverBiopsy}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-2 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                HBV DNA(UI/ml){\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"DETECTED\"\r\n                                    name=\"hbvDna\"\r\n                                    checked={\r\n                                      formik?.values?.hbvDna === \"DETECTED\"\r\n                                    }\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Detected\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"UNDETECTED\"\r\n                                    name=\"hbvDna\"\r\n                                    checked={\r\n                                      formik?.values?.hbvDna === \"UNDETECTED\"\r\n                                    }\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Undetected\r\n                                </label>\r\n\r\n                                {formik.errors.hbvDna !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDna}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </div>\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hbvDna === \"DETECTED\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hvbDnaValue\">\r\n                                  Input HBV DNA value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hvbDnaValue\"\r\n                                  id=\"hvbDnaValue\"\r\n                                  value={formik.values.hvbDnaValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.hvbDnaValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hvbDnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbsAgQuantification\">\r\n                                HBsAG Quantification\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbsAgQuantification\"\r\n                                id=\"hbsAgQuantification\"\r\n                                value={formik.values.hbsAgQuantification}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbsAgQuantification ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbsAgQuantification}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"ctScan\">CT scan</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"ctScan\"\r\n                                id=\"ctScan\"\r\n                                value={formik.values.ctScan}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.ctScan ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.ctScan}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"albumin\">Albumin</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"albumin\"\r\n                                id=\"albumin\"\r\n                                value={formik.values.albumin}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.albumin ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.albumin}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbeAG\">HbeAG</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbeAG\"\r\n                                id=\"hbeAG\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hbeAG}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"REACTIVE\"}>Reactive</option>\r\n                                <option value={\"NON_REACTIVE\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hbeAG !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbeAG}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"antiHDV\">Anti-HDV</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"antiHDV\"\r\n                                id=\"antiHDV\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.antiHDV}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"REACTIVE\"}>Reactive</option>\r\n                                <option value={\"NON_REACTIVE\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                                <option value={\"NOT_DONE\"}>Not Done</option>\r\n                              </select>\r\n                              {formik.errors.antiHDV !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.antiHDV}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"treatmentEligible\">\r\n                                Treatment Eligible\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"treatmentEligible\"\r\n                                id=\"treatmentEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.treatmentEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"YES\"}>Yes</option>\r\n                                <option value={\"NO\"}>No</option>\r\n                              </select>\r\n                              {formik.errors.treatmentEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.treatmentEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"pmtctEligible\">PMTCT Eligible</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"pmtctEligible\"\r\n                                id=\"pmtctEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pmtctEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"YES\"}>Yes</option>\r\n                                <option value={\"NO\"}>No</option>\r\n                              </select>\r\n                              {formik.errors.pmtctEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.pmtctEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4-12\">\r\n                            <FormGroup>\r\n                              <Label for=\"comment\">Comment</Label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                name=\"comment\"\r\n                                id=\"comment\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.comment}\r\n                                cols=\"50\"\r\n                                rows=\"30\"\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                  height: \"120px\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.comment !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.comment}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis C\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRNA\">HCV RNA (IU/ml)</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRNA\"\r\n                                id=\"hcvRNA\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRNA}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"DETECTED\"}>Detected</option>\r\n                                <option value={\"UNDETECTED\"}>Undetected</option>\r\n                              </select>\r\n                              {formik.errors.hcvRNA !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRNA}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hcvRNA === \"DETECTED\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hcRnaValue\">\r\n                                  Input HCV RNA Value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hcRnaValue\"\r\n                                  id=\"hcRnaValue\"\r\n                                  value={formik.values.hcRnaValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n                                {formik.errors.hcRnaValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hcRnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hepatitisCoinfection\">\r\n                                Hepatitis Coinfection\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hepatitisCoinfection\"\r\n                                id=\"hepatitisCoinfection\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hepatitisCoinfection}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"HBV_HCV\"}>HBV/HCV</option>\r\n                                <option value={\"HCV_HIV\"}>HCV/HIV</option>\r\n                                <option value={\"HBV_HDV\"}>HBV/HDV</option>\r\n                                <option value={\"HBV_HCD_HIV\"}>\r\n                                  HBV/HCD/HIV\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hepatitisCoinfection !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hepatitisCoinfection}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"commobidities\">\r\n                                Commobidities{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"commobidities\"\r\n                                id=\"commobidities\"\r\n                                value={formik.values.commobidities}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.commobidities !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.commobidities}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"multipleInfection\">\r\n                                Specify multiple infection{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"multipleInfection\"\r\n                                id=\"multipleInfection\"\r\n                                value={formik.values.multipleInfection}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.multipleInfection !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.multipleInfection}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"YES\"}>Yes</option>\r\n                          <option value={\"NO\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"YES\"}>Yes</option>\r\n                          <option value={\"NO\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pst\">PST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"pst\"\r\n                          id=\"pst\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.pst}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"YES\"}>Yes</option>\r\n                          <option value={\"NO\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.pst !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pst}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"YES\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"YES\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.plt === \"YES\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pstValue\">\r\n                            Input PST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pstValue\"\r\n                            id=\"pstValue\"\r\n                            value={formik.values.pstValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pstValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pstValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBiliRubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBiliRubin\"\r\n                          id=\"totalBiliRubin\"\r\n                          value={formik.values.totalBiliRubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBiliRubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBiliRubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBiliribin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBiliribin\"\r\n                          id=\"directBiliribin\"\r\n                          value={formik.values.directBiliribin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBiliribin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBiliribin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTimeNR\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTimeNR\"\r\n                          id=\"prothrombinTimeNR\"\r\n                          value={formik.values.prothrombinTimeNR}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTimeNR !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTimeNR}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">\r\n                          Ultrasound scan (μmol/L)\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascites\">Ascites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ascites\"\r\n                          id=\"ascites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ascites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"YES\"}>Yes</option>\r\n                          <option value={\"NO\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ascites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ascites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik.values.ascites === \"YES\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"severityOfAscites\">\r\n                            Severity of ascites\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"severityOfAscites\"\r\n                            id=\"severityOfAscites\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.severityOfAscites}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"MILD\"}>Mild</option>\r\n                            <option value={\"MODERATE\"}>Moderate</option>\r\n                            <option value={\"MASSIVE_OR_GROSS\"}>\r\n                              Massive/Gross\r\n                            </option>\r\n                          </select>\r\n                          {formik.errors.severityOfAscites !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.severityOfAscites}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"FIBROSIS\"}>\r\n                            {\" \"}\r\n                            Fibrosis\r\n                          </option>\r\n                          <option value={\"CIRRHOSIS\"}>\r\n                            Cirrhosis\r\n                          </option>\r\n                          <option value={\"NO_FIBROSIS\"}>\r\n                            {\" \"}\r\n                            No Fibrosis\r\n                          </option>\r\n                          {/* <option value={\"CIRRHOSIS\"}>Cirrhosis</option> */}\r\n                          <option value={\"HIGH_CC\"}>High CC </option>\r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis_result\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis_result\"\r\n                          id=\"diagnosis_result\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis_result}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"NO_FIBROSIS\"}> No Fibrosis</option>\r\n                          <option value={\"FIBROSIS\"}>Fibrosis</option>\r\n                          <option value={\"CIRRHOSIS\"}>Cirrhosis</option>\r\n                          <option value={\"HIGH_CC\"}>HCC</option>\r\n                        </select>\r\n                        {formik.errors.diagnosis_result !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis_result}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-between\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={moveBack}\r\n                  className={classes.button}\r\n                  startIcon={<ArrowBackIcon />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n                </MatButton>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm2;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm3ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst postDataWithToken = async (data, key) => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}${key}`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    // Handle the response if needed\r\n    console.log(\"Post successful:\", response.data);\r\n    toast.success(\"Treatment submitted successfully\");\r\n    deleteCookie(\"heaptitis3PayloadValue\")\r\n    deleteCookie(\"hepatitis3\")\r\n    deleteCookie(\"enrollmentIds\")\r\n    deleteCookie(\"hepatitis2\")\r\n    deleteCookie(\"heaptitis2PayloadValue\")\r\n    deleteCookie(\"hepatitis1\")\r\n    deleteCookie(\"heaptitis1PayloadValue\")\r\n    setStep(0)\r\n    return response.data;\r\n  } catch (error) {\r\n    // Handle any errors that occurred during the request\r\n    toast.error(\"Treatment failed\");\r\n    console.error(\"Error posting data:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nfunction deleteCookie(name) {\r\n  document.cookie = name + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n}\r\n\r\nfunction convertStringBooleanValues(originalObj) {\r\n  const newObj = {};\r\n\r\n  for (const key in originalObj) {\r\n    if (originalObj.hasOwnProperty(key)) {\r\n      const value = originalObj[key];\r\n      if (typeof value === \"string\") {\r\n        newObj[key] =\r\n          value.toLowerCase() === \"yes\"\r\n            ? \"YES\"\r\n            : value.toLowerCase() === \"no\"\r\n            ? \"NO\"\r\n            : value;\r\n      } else {\r\n        newObj[key] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  return newObj;\r\n}\r\n\r\nfunction formatDate(inputDate) {\r\n  // Split the input date string into an array\r\n  var dateArray = inputDate.split('-');\r\n\r\n  // Check if the input date is in the correct format (yyyy-mm-dd)\r\n  if (dateArray.length !== 3) {\r\n    return 'Invalid date format';\r\n  }\r\n\r\n  // Extract the year, month, and day from the array\r\n  var year = dateArray[0];\r\n  var month = dateArray[1];\r\n  var day = dateArray[2];\r\n\r\n  // Create a new date string in the \"dd-mm-yyyy\" format\r\n  var newDateFormat = day + '-' + month + '-' + year;\r\n\r\n  return newDateFormat;\r\n}\r\n\r\nconst ViralHepatitisForm3 = ({ setStep }) => {\r\n  const onSubmitHandler = (values) => {\r\n    console.log(values.hbvDateStarted);\r\n    setCookie(\"hepatitis3\", values, 1);\r\n    const enrollmentIds = getCookie(\"enrollmentIds\");\r\n    const restructuredTreatmentPayload = {\r\n      enrollmentUuid: enrollmentIds?.enrollmentUuid,\r\n      hepatitisBTreatment: {\r\n        dateStarted: formatDate(values.hbvDateStarted),\r\n        dateStopped: formatDate(values.hbvDateStopped),\r\n        hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimen,\r\n        hepatitisBRegimenSwitch: {\r\n          adverseEffectReported: values.hbvAdverseEffectReported,\r\n          dateStarted: formatDate(values.hbvRegimeSwitchDateStarted),\r\n          dateStopped: formatDate(values.hbvRegimeSwitchDateStopped),\r\n          newRegime: values.hbvRegimeSwitchNewRegimen,\r\n          reasonForSwitch: values.hbvRegimeSwitchReason,\r\n        },\r\n        historyOfAdverseEffect: values.hbvHistoryOfAdverseEffect,\r\n        newRegimen: values.hbvNewRegimen,\r\n        reasonForHepatitisBTreatment: {\r\n          comment: values.hbvReasonsForTreatmentComment,\r\n          reasonsForTreatment: values.hbvReasonForTreatmentEligibility,\r\n        },\r\n        treatmentExperience: values.hbvTreatmentExperience,\r\n      },\r\n      hepatitisCTreatment: {\r\n        adverseEffectReported: values.hcvAdverseEventReported,\r\n        dateCompleted: formatDate(values.hcvDateCompleted),\r\n        dateStarted: formatDate(values.hcvDateStarted),\r\n        dateStopped: formatDate(values.hcvDateStopped),\r\n        hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimenForHcv,\r\n        hcvRetreatment: {\r\n          dateStarted: formatDate(values.hcvRetreatmentDateStarted),\r\n          dateStopped: formatDate(values.hcvRetreatmentDateStopped),\r\n          hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimenForHcv,\r\n          history_of_AdverseEffect: values.hcvRetreatmentHistoryOfAdverseEffect,\r\n          newRegimen: values.hcvRetreatmentNewRegimen,\r\n          prescribedDuration: values.hcvRetreatmentPrescribedDuration,\r\n          retreatmentAdverseEffect: values.hcvRetreatmentAdverseEffect,\r\n        },\r\n        hepatitisSvr12Testing: {\r\n          dateTested: formatDate(values.svr12TestingDateStarted),\r\n          hcvRNA: values.svr12TestingHcvRna,\r\n          hcvRNAValue: values.svr12TestingHcvRnaValue,\r\n          retreatmentDateTested: formatDate(values.svr12RetreatmentDateTested),\r\n          // retreatmentHcvRNA: \"string\",\r\n          // retreatmentHcvRNAValue: \"string\",\r\n        },\r\n        // pastTreatmentExperience: \"string\",\r\n        prescribedDuration: values.hcvRetreatmentPrescribedDuration,\r\n        treatmentExperience: values.hcvTreatmentExperience,\r\n      },\r\n    };\r\n\r\n    setCookie(\"heaptitis3PayloadValue\", restructuredTreatmentPayload, 1);\r\n    postDataWithToken(restructuredTreatmentPayload, \"hepatitis/treatment\");\r\n   \r\n  };\r\n\r\n  const moveBack = () => {\r\n    window.scrollTo(0, 0);\r\n    setStep(1);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm3ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis3\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n  }, []);\r\n\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hbvTreatmentRegimenSwitch: true,\r\n    hbvTreatmentReasonforTreatment: true,\r\n    hcvTreatmentRegimenSwitch: true,\r\n    hcvTreatmentRegimenHcvRetreatment: true,\r\n    hcvTreatmentSvr12Testing: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Hepatitis B Treatment\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <div className=\"card-body\">\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvTreatmentExperience\">\r\n                              Treatment experience\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvTreatmentExperience\"\r\n                              id=\"hbvTreatmentExperience\"\r\n                              value={formik.values.hbvTreatmentExperience}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {formik.errors.hbvTreatmentExperience !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvTreatmentExperience}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {/* {formik.values.hbvTreatmentExperience && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvPastTreatmentRegimen\">\r\n                                Past treatment regime\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvPastTreatmentRegimen\"\r\n                                id=\"hbvPastTreatmentRegimen\"\r\n                                value={formik.values.hbvPastTreatmentRegimen}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvPastTreatmentRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )} */}\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvNewRegimen\">New regime</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbvNewRegimen\"\r\n                              id=\"hbvNewRegimen\"\r\n                              value={formik.values.hbvNewRegimen}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {formik.errors.hbvNewRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvNewRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvPastTreatmentRegimen\">\r\n                              Hbv Past treatment regimen\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbvPastTreatmentRegimen\"\r\n                              id=\"hbvPastTreatmentRegimen\"\r\n                              value={formik.values.hbvPastTreatmentRegimen}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n\r\n                            {formik.errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvPastTreatmentRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {formik.values.hbvPastTreatmentRegimen !== \"\" && (\r\n                          <>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hbvDateStarted\">Date started</Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"date\"\r\n                                  name=\"hbvDateStarted\"\r\n                                  id=\"hbvDateStarted\"\r\n                                  value={formik.values.hbvDateStarted}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n                                {formik.errors.hbvDateStarted !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDateStarted}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hbvDateStopped\">Date stopped</Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"date\"\r\n                                  name=\"hbvDateStopped\"\r\n                                  id=\"hbvDateStopped\"\r\n                                  value={formik.values.hbvDateStopped}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n                                {formik.errors.hbvDateStopped !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDateStopped}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          </>\r\n                        )}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvHistoryOfAdverseEffect\">\r\n                              History of adverse effect\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvHistoryOfAdverseEffect\"\r\n                              id=\"hbvHistoryOfAdverseEffect\"\r\n                              value={formik.values.hbvHistoryOfAdverseEffect}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {formik.errors.hbvHistoryOfAdverseEffect !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvHistoryOfAdverseEffect}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Regimen Switch\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hbvTreatmentRegimenSwitch:\r\n                              !prevState.hbvTreatmentRegimenSwitch,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hbvTreatmentRegimenSwitch}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchNewRegimen\">\r\n                                New Regimen\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvRegimeSwitchNewRegimen\"\r\n                                id=\"hbvRegimeSwitchNewRegimen\"\r\n                                value={formik.values.hbvRegimeSwitchNewRegimen}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvRegimeSwitchNewRegimen !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvRegimeSwitchNewRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchDateStarted\">\r\n                                Date Started{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"hbvRegimeSwitchDateStarted\"\r\n                                id=\"hbvRegimeSwitchDateStarted\"\r\n                                value={formik.values.hbvRegimeSwitchDateStarted}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvRegimeSwitchDateStarted !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvRegimeSwitchDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchDateStopped\">\r\n                                Date Stopped{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"hbvRegimeSwitchDateStopped\"\r\n                                id=\"hbvRegimeSwitchDateStopped\"\r\n                                value={formik.values.hbvRegimeSwitchDateStopped}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvRegimeSwitchDateStopped !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvRegimeSwitchDateStopped}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvAdverseEffectReported\">\r\n                                Adverse effect reported\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbvAdverseEffectReported\"\r\n                                id=\"hbvAdverseEffectReported\"\r\n                                value={formik.values.hbvAdverseEffectReported}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option>Select</option>\r\n                                <option value={\"YES\"}>Yes</option>\r\n                                <option value={\"NO\"}>No</option>\r\n                              </select>\r\n                              {formik.errors.hbvAdverseEffectReported !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvAdverseEffectReported}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchReason\">\r\n                                Reason for switch\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvRegimeSwitchReason\"\r\n                                id=\"hbvRegimeSwitchReason\"\r\n                                value={formik.values.hbvRegimeSwitchReason}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvRegimeSwitchReason !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvRegimeSwitchReason}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Reason for treatment\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hbvTreatmentReasonforTreatment:\r\n                              !prevState.hbvTreatmentReasonforTreatment,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse\r\n                      in={isDropdownsOpen.hbvTreatmentReasonforTreatment}\r\n                    >\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvReasonForTreatmentEligibility\">\r\n                                Reasons for treatment\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbvReasonForTreatmentEligibility\"\r\n                                id=\"hbvReasonForTreatmentEligibility\"\r\n                                onChange={formik.handleChange}\r\n                                value={\r\n                                  formik.values.hbvReasonForTreatmentEligibility\r\n                                }\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"treatment eligible\"}>\r\n                                  Treatment Eligible\r\n                                </option>\r\n                                <option value={\"hbv pmtct\"}>HBV PMTCT</option>\r\n                              </select>\r\n                              {formik.errors\r\n                                .hbvReasonForTreatmentEligibility !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hbvReasonForTreatmentEligibility\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvReasonsForTreatmentComment\">\r\n                                Comment\r\n                              </Label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                name=\"hbvReasonsForTreatmentComment\"\r\n                                id=\"hbvReasonsForTreatmentComment\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={\r\n                                  formik.values.hbvReasonsForTreatmentComment\r\n                                }\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                  height: \"80px\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hbvReasonsForTreatmentComment !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvReasonsForTreatmentComment}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Hepatitis C Treatment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div className=\"card-body\">\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvAdverseEventReported\">\r\n                              Adverse Effect reported\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvAdverseEventReported\"\r\n                              id=\"hcvAdverseEventReported\"\r\n                              value={formik.values.hcvAdverseEventReported}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"YES\">Yes</option>\r\n                              <option value=\"NO\">No</option>\r\n                            </select>\r\n                            {formik.errors.hcvAdverseEventReported !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvAdverseEventReported}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvTreatmentExperience\">\r\n                              Treatment experience\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hcvTreatmentExperience\"\r\n                              id=\"hcvTreatmentExperience\"\r\n                              value={formik.values.hcvTreatmentExperience}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {formik.errors.hcvTreatmentExperience !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvTreatmentExperience}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvPastTreatmentRegimen\">\r\n                              HBV Past treatment regimen\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbvPastTreatmentRegimen\"\r\n                              id=\"hbvPastTreatmentRegimen\"\r\n                              value={formik.values.hbvPastTreatmentRegimen}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {formik.errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvPastTreatmentRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvDateStarted\">Date started</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hcvDateStarted\"\r\n                              id=\"hcvDateStarted\"\r\n                              value={formik.values.hcvDateStarted}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {formik.errors.hcvDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvDateCompleted\">Date completed</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hcvDateCompleted\"\r\n                              id=\"hcvDateCompleted\"\r\n                              value={formik.values.hcvDateCompleted}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {formik.errors.hcvDateCompleted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvDateCompleted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvDateStopped\">Date stopped</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hcvDateStopped\"\r\n                              id=\"hcvDateStopped\"\r\n                              value={formik.values.hcvDateStopped}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {formik.errors.hcvDateStopped !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvDateStopped}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvPrescribedDuration\">\r\n                              Prescribed duration\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvPrescribedDuration\"\r\n                              id=\"hcvPrescribedDuration\"\r\n                              value={formik.values.hcvPrescribedDuration}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={0}>Select</option>\r\n                              <option value={8}>8 weeks</option>\r\n                              <option value={12}>12 weeks</option>\r\n                              <option value={24}>24 weeks</option>\r\n                            </select>\r\n                            {formik.errors.hcvPrescribedDuration !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvPrescribedDuration}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvPastTreatmentRegimenForHcv\">\r\n                              HBV past treatment regimen\r\n                            </Label>\r\n                            <select\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name=\"hbvPastTreatmentRegimenForHcv\"\r\n                              id=\"hbvPastTreatmentRegimenForHcv\"\r\n                              value={\r\n                                formik.values.hbvPastTreatmentRegimenForHcv\r\n                              }\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n\r\n                            {formik.errors.hbvPastTreatmentRegimenForHcv !==\r\n                            \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvPastTreatmentRegimenForHcv}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      SVR 12 Testing\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hcvTreatmentSvr12Testing:\r\n                              !prevState.hcvTreatmentSvr12Testing,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hcvTreatmentSvr12Testing}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hcvTreatmentSvr12Testing}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingDateStarted\">\r\n                                Date tested\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingDateStarted\"\r\n                                id=\"svr12TestingDateStarted\"\r\n                                type=\"date\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.svr12TestingDateStarted}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.svr12TestingDateStarted !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRna\">\r\n                                HCV RNA <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRna\"\r\n                                id=\"svr12TestingHcvRna\"\r\n                                value={formik.values.svr12TestingHcvRna}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"DETECTED\">Detected</option>\r\n                                <option value=\"UNDETECTED\">Undetected</option>\r\n                              </select>\r\n                              {formik.errors.svr12TestingHcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingHcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          {formik.values.svr12TestingHcvRna === \"DETECTED\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"svr12TestingHcvRnaValue\">\r\n                                  Input HCV RNA value\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  name=\"svr12TestingHcvRnaValue\"\r\n                                  id=\"svr12TestingHcvRnaValue\"\r\n                                  type=\"text\"\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  value={formik.values.svr12TestingHcvRnaValue}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.svr12TestingHcvRnaValue !==\r\n                                \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.svr12TestingHcvRnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRnaValue\">\r\n                                Input HCV RNA value\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRnaValue\"\r\n                                id=\"svr12TestingHcvRnaValue\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.svr12TestingHcvRnaValue}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.svr12TestingHcvRnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingHcvRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div> */}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12RetreatmentDateTested\">\r\n                                Retreatment date tested\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12RetreatmentDateTested\"\r\n                                id=\"svr12RetreatmentDateTested\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.svr12RetreatmentDateTested}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                type=\"date\"\r\n                              />\r\n\r\n                              {formik.errors.svr12RetreatmentDateTested !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12RetreatmentDateTested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12RetreatmentHcvRna\">\r\n                                Retreatment HCV RNA(IU/ml)\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"svr12RetreatmentHcvRna\"\r\n                                id=\"svr12RetreatmentHcvRna\"\r\n                                value={formik.values.svr12RetreatmentHcvRna}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"DETECTED\">Detected</option>\r\n                                <option value=\"UNDETECTED\">Undetected</option>\r\n                              </select>\r\n                              {formik.errors.svr12RetreatmentHcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12RetreatmentHcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          {formik.values.svr12RetreatmentHcvRna ===\r\n                            \"DETECTED\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"svr12RetreatmentHcvRnaValue\">\r\n                                  Input Retreatment HCV RNA value(IU/ml)\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"svr12RetreatmentHcvRnaValue\"\r\n                                  id=\"svr12RetreatmentHcvRnaValue\"\r\n                                  value={\r\n                                    formik.values.svr12RetreatmentHcvRnaValue\r\n                                  }\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.svr12RetreatmentHcvRnaValue !==\r\n                                \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.svr12RetreatmentHcvRnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      HCV Retreatment\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hcvTreatmentRegimenHcvRetreatment:\r\n                              !prevState.hcvTreatmentRegimenHcvRetreatment,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={\r\n                        isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment\r\n                      }\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse\r\n                      in={isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment}\r\n                    >\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentNewRegimen\">\r\n                                New regimen\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentNewRegimen\"\r\n                                id=\"hcvRetreatmentNewRegimen\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRetreatmentNewRegimen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hcvRetreatmentNewRegimen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentNewRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentPrescribedDuration\">\r\n                                Prescribed Duration\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentPrescribedDuration\"\r\n                                id=\"hcvRetreatmentPrescribedDuration\"\r\n                                value={\r\n                                  formik.values.hcvRetreatmentPrescribedDuration\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={0}>Select</option>\r\n                                <option value={8}>8 weeks</option>\r\n                                <option value={12}>12 weeks</option>\r\n                                <option value={24}>24 weeks</option>\r\n                              </select>\r\n                              {formik.errors\r\n                                .hcvRetreatmentPrescribedDuration !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hcvRetreatmentPrescribedDuration\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentDateStarted\">\r\n                                Date started\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentDateStarted\"\r\n                                id=\"hcvRetreatmentDateStarted\"\r\n                                type=\"date\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRetreatmentDateStarted}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hcvRetreatmentDateStarted !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentDateStopped\">\r\n                                Date stopped\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentDateStopped\"\r\n                                id=\"hcvRetreatmentDateStopped\"\r\n                                type=\"date\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRetreatmentDateStopped}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hcvRetreatmentDateStopped !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentDateStopped}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentAdverseEffect\">\r\n                                Retreatment Adverse effect\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentAdverseEffect\"\r\n                                id=\"hcvRetreatmentAdverseEffect\"\r\n                                value={\r\n                                  formik.values.hcvRetreatmentAdverseEffect\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option>Select</option>\r\n                                <option value={\"YES\"}>Yes</option>\r\n                                <option value={\"NO\"}>No</option>\r\n                              </select>\r\n                              {formik.errors.hcvRetreatmentAdverseEffect !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentAdverseEffect}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentHistoryOfAdverseEffect\">\r\n                                History of adverse effect\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentHistoryOfAdverseEffect\"\r\n                                id=\"hcvRetreatmentHistoryOfAdverseEffect\"\r\n                                value={formik.values.hcvRetreatmentHistoryOfAdverseEffect}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option>Select</option>\r\n                                <option value={\"YES\"}>Yes</option>\r\n                                <option value={\"NO\"}>No</option>\r\n                              </select>\r\n                              {formik.errors.hcvRetreatmentHistoryOfAdverseEffect !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentHistoryOfAdverseEffect}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                         \r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-between\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<ArrowBackIcon />}\r\n                  onClick={moveBack}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n                </MatButton>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  // endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm3;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm2ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm4 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm2ValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: false,\r\n    hepatitisCDropdown: false,\r\n    coInfectionDropdown: false,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Diagnosis\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis B\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvTestRequested\">\r\n                                Date HBV test requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvTestRequested\"\r\n                                id=\"dateHbvTestRequested\"\r\n                                value={formik.values.dateHbvTestRequested}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvTestRequested !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvTestRequested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvSampleCollected\">\r\n                                Date HBV sample Requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvSampleCollected\"\r\n                                id=\"dateHbvSampleCollected\"\r\n                                value={formik.values.dateHbvSampleCollected}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvSampleCollected !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvSampleCollected}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvDnaResultReported\">\r\n                                Date of HBV DNA result reported{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvDnaResultReported\"\r\n                                id=\"dateHbvDnaResultReported\"\r\n                                value={formik.values.dateHbvDnaResultReported}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvDnaResultReported !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvDnaResultReported}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-2 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                HBV DNA(UI/ml){\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"detected\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Detected\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"undetected\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Undetected\r\n                                </label>\r\n\r\n                                {formik.errors.hbvDna !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDna}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </div>\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hbvDna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hbvDnaValue\">\r\n                                  Input HBV DNA value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hbvDnaValue\"\r\n                                  id=\"hbvDnaValue\"\r\n                                  value={formik.values.hbvDnaValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.hbvDnaValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"landmark\">HBsAG Quantification</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbsAgQuantification\"\r\n                                id=\"hbsAgQuantification\"\r\n                                value={formik.values.hbsAgQuantification}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbsAgQuantification ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbsAgQuantification}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbeAg\">HbeAG</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbeAg\"\r\n                                id=\"hbeAg\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hbeAg}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hbeAg !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbeAg}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"antiHdv\">Anti-HDV</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"antiHdv\"\r\n                                id=\"antiHdv\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.antiHdv}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                                <option value={\"not done\"}>Not Done</option>\r\n                              </select>\r\n                              {formik.errors.antiHdv !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.antiHdv}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"treatmentEligible\">\r\n                                Treatment Eligible\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"treatmentEligible\"\r\n                                id=\"treatmentEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.treatmentEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"yes\"}>Yes</option>\r\n                                <option value={\"no\"}>No</option>\r\n                              </select>\r\n                              {formik.errors.treatmentEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.treatmentEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"pmtctEligible\">PMTCT Eligible</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"pmtctEligible\"\r\n                                id=\"pmtctEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pmtctEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.pmtctEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.pmtctEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4-12\">\r\n                            <FormGroup>\r\n                              <Label for=\"comment\">Comment</Label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                name=\"comment\"\r\n                                id=\"comment\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.comment}\r\n                                cols=\"50\"\r\n                                rows=\"30\"\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                  height: \"120px\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.comment !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.comment}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis C\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRna\">HCV RNA (IU/ml)</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRna\"\r\n                                id=\"hcvRna\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRna}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"detected\"}>Detected</option>\r\n                                <option value={\"undetected\"}>Undetected</option>\r\n                              </select>\r\n                              {formik.errors.hcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hcvRna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hcvValue\">\r\n                                  Input HCV RNA Value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hcvValue\"\r\n                                  id=\"hcvValue\"\r\n                                  value={formik.values.hcvValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n                                {formik.errors.hcvValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hcvValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hepatitisCoInfection\">\r\n                                Hepatitis Coinfection\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hepatitisCoInfection\"\r\n                                id=\"hepatitisCoInfection\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hepatitisCoInfection}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                multiple\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"hbv/hcv\"}>HBV/HCV</option>\r\n                                <option value={\"hcv/hiv\"}>HCV/HIV</option>\r\n                                <option value={\"hbv/hdv\"}>HBV/HDV</option>\r\n                                <option value={\"hbv/hcd/hiv\"}>\r\n                                  HBV/HCD/HIV\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hepatitisCoInfection !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hepatitisCoInfection}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"commobidities\">\r\n                                Commobidities{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"commobidities\"\r\n                                id=\"commobidities\"\r\n                                value={formik.values.commobidities}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.commobidities !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.commobidities}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pst\">PST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"pst\"\r\n                          id=\"pst\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.pst}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.pst !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pst}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.pst === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pstValue\">\r\n                            Input PST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pstValue\"\r\n                            id=\"pstValue\"\r\n                            value={formik.values.pstValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pstValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pstValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBilirubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBilirubin\"\r\n                          id=\"totalBilirubin\"\r\n                          value={formik.values.totalBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBilirubin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBilirubin\"\r\n                          id=\"directBilirubin\"\r\n                          value={formik.values.directBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTime\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTime\"\r\n                          id=\"prothrombinTime\"\r\n                          value={formik.values.prothrombinTime}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTime !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTime}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">\r\n                          Ultrasound scan (μmol/L)\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"acites\">Acites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acites\"\r\n                          id=\"acites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.acites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.acites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.acites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik.values.ascites === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"severityOfAscites\">\r\n                            Severity of ascites\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"severityOfAscites\"\r\n                            id=\"severityOfAscites\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.severityOfAscites}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"mild\"}>Mild</option>\r\n                            <option value={\"moderate\"}>Moderate</option>\r\n                            <option value={\"massive/gross\"}>\r\n                              Massive/Gross\r\n                            </option>\r\n                          </select>\r\n                          {formik.errors.severityOfAscites !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.severityOfAscites}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"F-0\"}> No Fibrosis</option>\r\n                          <option value={\"F-1\"}>Mild Fibrosis</option>\r\n                          <option value={\"F-2\"}>Moderate Fibrosis</option>\r\n                          <option value={\"F-3\"}> Severe Fibrosis</option>\r\n                          <option value={\"F-4\"}>Cirrhosis</option>\r\n                          <option value={\"not done\"}>Not done</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis\"\r\n                          id=\"diagnosis\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"no fibrosis\"}> No Fibrosis</option>\r\n                          <option value={\"fibrosis\"}>Fibrosis</option>\r\n                          <option value={\"cirrhosis\"}>Cirrhosis</option>\r\n                          <option value={\"hcc\"}>HCC</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.diagnosis !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-between\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<ArrowBackIcon />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n                </MatButton>\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm4;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n// import classNames from 'classnames';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\n// import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\n// import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from \"@material-ui/core/Divider\";\r\n// import { Button } from 'semantic-ui-react';\r\n// import {Label,} from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n// import axios from \"axios\";\r\n// import { url as baseUrl, token } from \"./../../../api\";\r\n// import Typography from '@material-ui/core/Typography';\r\n// import CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCardFollowup(props) {\r\n  const { classes } = props;\r\n  // const patientObj = props.patientObj;\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  // console.log(patientObj);\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  const get_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    Bolanle Bassey\r\n                  </b>\r\n                  <Link to={\"/\"}>\r\n                    <ButtonMui\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-end ms-2 mr-2 mt-2\"\r\n                      //startIcon={<FaUserPlus size=\"10\"/>}\r\n                      startIcon={<TiArrowBack />}\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                        color: \"#fff\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                    </ButtonMui>\r\n                  </Link>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Patient ID :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      KEB/SYMH/COM/017/07/23\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>2019-07-04</b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      4 year(s)\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Gender :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      Female\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                     0\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      Gulumbe\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCardFollowup.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCardFollowup);\r\n","import React from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Form } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateFollowupFormValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\r\nimport PatientCardFollowUp from \"./PatientCardFollowUp\";\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst FollowupForm = () => {\r\n  const onSubmitHandler = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const { formik } = useValidateFollowupFormValuesHook(onSubmitHandler);\r\n  return (\r\n    <>\r\n      <CardContent>\r\n        <PatientCardFollowUp />\r\n      </CardContent>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Preliminary\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfVisit\">\r\n                            Date of visit{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfVisit\"\r\n                            id=\"dateOfVisit\"\r\n                            value={formik.initialValues.dateOfVisit}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.dateOfVisit !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.dateOfVisit}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"bloodPressure\">\r\n                            Blood pressure (mmHg)\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"bloodPressure\"\r\n                            id=\"bloodPressure\"\r\n                            value={formik.initialValues.bloodPressure}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.bloodPressure !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.bloodPressure}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"weight\">\r\n                            Weight <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"weight\"\r\n                            id=\"weight\"\r\n                            value={formik.initialValues.weight}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.weight !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.weight}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"height\">\r\n                            Height <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"height\"\r\n                            id=\"height\"\r\n                            value={formik.initialValues.height}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.height !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.height}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"bmi\">BMI </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"bmi\"\r\n                            id=\"bmi\"\r\n                            value={formik.initialValues.bmi}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.bmi !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.bmi}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbeAg\">HbeAG</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hbeAg\"\r\n                            id=\"hbeAg\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.hbeAg}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"reactive\"}>Reactive</option>\r\n                            <option value={\"non-reactive\"}>Non Reactive</option>\r\n                          </select>\r\n                          {formik.errors.hbeAg !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbeAg}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvDna\">HBV DNA (IU/mL)</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hbvDna\"\r\n                            id=\"hbvDna\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.hbvDna}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"detected\"}>Detected</option>\r\n                            <option value={\"undetected\"}>Undetected</option>\r\n                          </select>\r\n                          {formik.errors.hbvDna !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbvDna}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"landmark\">HBsAG Quantification</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hbsAgQuantification\"\r\n                            id=\"hbsAgQuantification\"\r\n                            value={formik.values.hbsAgQuantification}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.hbsAgQuantification ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbsAgQuantification}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST (UI/mL)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT (UI/mL)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"plt\">PLT (mm3)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"plt\"\r\n                          id=\"plt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.plt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.plt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.plt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.pst === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pstValue\">\r\n                            Input PST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pstValue\"\r\n                            id=\"pstValue\"\r\n                            value={formik.values.pstValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pstValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pstValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBilirubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBilirubin\"\r\n                          id=\"totalBilirubin\"\r\n                          value={formik.values.totalBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"albumin\">\r\n                          Albumin <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"albumin\"\r\n                          id=\"albumin\"\r\n                          value={formik.values.albumin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.albumin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.albumin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBilirubin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBilirubin\"\r\n                          id=\"directBilirubin\"\r\n                          value={formik.values.directBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTime\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTime\"\r\n                          id=\"prothrombinTime\"\r\n                          value={formik.values.prothrombinTime}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTime !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTime}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">Ultrasound scan</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ctScan\">CT scan</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ctScan\"\r\n                          id=\"ctScan\"\r\n                          value={formik.values.ctScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ctScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ctScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"acites\">Acites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acites\"\r\n                          id=\"acites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.acites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.acites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.acites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"severityOfAscites\">\r\n                          Severity of ascites\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"severityOfAscites\"\r\n                          id=\"severityOfAscites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.severityOfAscites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"mild\"}>Mild</option>\r\n                          <option value={\"moderate\"}>Moderate</option>\r\n                          <option value={\"massive/gross\"}>Massive/Gross</option>\r\n                        </select>\r\n                        {formik.errors.severityOfAscites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.severityOfAscites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"F-0\"}> No Fibrosis</option>\r\n                          <option value={\"F-1\"}>Mild Fibrosis</option>\r\n                          <option value={\"F-2\"}>Moderate Fibrosis</option>\r\n                          <option value={\"F-3\"}> Severe Fibrosis</option>\r\n                          <option value={\"F-4\"}>Cirrhosis</option>\r\n                          <option value={\"not done\"}>Not done</option>\r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"stagingDateForLiverBiopsy\">\r\n                          Staging date for liver{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"stagingDateForLiverBiopsy\"\r\n                          id=\"stagingDateForLiverBiopsy\"\r\n                          value={formik.values.stagingDateForLiverBiopsy}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.stagingDateForLiverBiopsy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.stagingDateForLiverBiopsy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis\"\r\n                          id=\"diagnosis\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"no fibrosis\"}> No Fibrosis</option>\r\n                          <option value={\"fibrosis\"}>Fibrosis</option>\r\n                          <option value={\"cirrhosis\"}>Cirrhosis</option>\r\n                          <option value={\"hcc\"}>HCC</option>\r\n                        </select>\r\n                        {formik.errors.diagnosis !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Appointment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"treatmentRegimen\">\r\n                          Treatment regimen\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"treatmentRegimen\"\r\n                          id=\"treatmentRegimen\"\r\n                          value={formik.initialValues.treatmentRegimen}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.treatmentRegimen !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.treatmentRegimen}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"nextAppointment\">\r\n                          Next appointment\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"nextAppointment\"\r\n                          id=\"nextAppointment\"\r\n                          value={formik.initialValues.nextAppointment}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.nextAppointment !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.dateOfHepatitisBPositiveScreening}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"clinicalName\">Clinical Name </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"clinicalName\"\r\n                          id=\"clinicalName\"\r\n                          value={formik.initialValues.clinicalName}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.clinicalName !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.clinicalName}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4-12\">\r\n                      <FormGroup>\r\n                        <Label for=\"remark\">Remark</Label>\r\n                        <textarea\r\n                          className=\"form-control\"\r\n                          name=\"remark\"\r\n                          id=\"remark\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.remark}\r\n                          cols=\"50\"\r\n                          rows=\"30\"\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                            height: \"120px\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.remark !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.remark}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FollowupForm;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  '../patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <br /><br/>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date Registration<span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                      <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <FormGroup> \r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"location\"\r\n                                              id=\"location\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.location} >\r\n                                              <option value=\"\" >Select</option>\r\n                                              <option value=\"Facility\" >Facility</option>\r\n                                              <option value=\"Community\" >Community</option>\r\n                                          </Input>\r\n                                      </FormGroup> \r\n                                      {errors.location !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.location}</span>\r\n                                      ) : \"\" }                                        \r\n                                      \r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-4\">\r\n                                      <FormGroup>\r\n                                      <Label >Facility Name </Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"text\"\r\n                                              name=\"vaccinationFacility\"\r\n                                              id=\"vaccinationFacility\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccinationFacility}>\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.vaccinationFacility !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              )}\r\n                                        \r\n                                        <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n                                            </div>\r\n                                            </div>\r\n                                            </div>\r\n                    \r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                            <h5 className=\"card-title\" style={{color:'#fff'}}>VH Laboratory register</h5>\r\n                                            {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                        </div>\r\n                                        {showContactCard && (\r\n                                        <div className=\"card-body\">\r\n                                            <div className={\"row\"}>\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Clinic/Unit where test request was ordered</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HBV screening</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>HBcAb (Total)</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">HBsAg quantification(IU/ml)</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HBeAg</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Anti-HDV</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                    </div>\r\n                                                    <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HBV DNA (Write exact result)</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HCV screening</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Type of HCV RNA test</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Hepatitis C Virus RNA Testing</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                    </div>\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">HCV RNA Write exact result(IU/ml)</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HIV Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                          </div>\r\n                                      </div>\r\n                                )}\r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br/>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Steppers from \"./Stepper/Stepper\";\r\nimport ViralHepatitisForm1 from \"./ViralHepatitisForms/Form1\";\r\nimport ViralHepatitisForm2 from \"./ViralHepatitisForms/Form2\";\r\nimport ViralHepatitisForm3 from \"./ViralHepatitisForms/Form3\";\r\nimport ViralHepatitisForm4 from \"./ViralHepatitisForms/Form4\";\r\nimport FollowupForm from \"./ViralHepatitisForms/FollowUp\";\r\nimport LaboratoryRegister from \"./ViralHepatitisForms/LaboratoryRegister\";\r\nimport { useLocalStorageState } from \"../../hooks/useLocalStorageState\";\r\n\r\n\r\nconst ViralHepatitisFormsContainer = (props) => {\r\n  \r\n\r\n  const [step, setStep] = useLocalStorageState(\r\n    \"hepatitis-enrollment-form-step\",\r\n    0\r\n  );\r\n  const formMap = {\r\n    0: <ViralHepatitisForm1 step={step} setStep={setStep} />,\r\n    1: <ViralHepatitisForm2 step={step} setStep={setStep} />,\r\n    2: <ViralHepatitisForm3 step={step} setStep={setStep} />,\r\n    // 3: <FollowupForm step={step} setStep={setStep}/>,\r\n    // 4: <LaboratoryRegister/>,\r\n  };\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Viral Hepatitis /</Link>New Client\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/\",\r\n          state: \"users\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mr-10 pr-10\"\r\n          style={{\r\n            backgroundColor: \"#014d88\",\r\n            fontWeight: \"bolder\",\r\n            margingRight: \"-40px\",\r\n          }}\r\n          startIcon={<TiArrowBack />}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n            Back{\" \"}\r\n          </span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n      <Steppers activeStep={step} />\r\n      {formMap[step]}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisFormsContainer;\r\n","import * as React from 'react'\r\n\r\n/**\r\n *\r\n * @param {String} key The key to set in localStorage for this value\r\n * @param {Object} defaultValue The value to use if it is not already in localStorage\r\n * @param {{serialize: Function, deserialize: Function}} options The serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse respectively)\r\n */\r\n\r\nfunction useLocalStorageState(\r\n  key,\r\n  defaultValue = '',\r\n  // the = {} fixes the error we would get from destructuring when no argument was passed\r\n  // Check https://jacobparis.com/blog/destructure-arguments for a detailed explanation\r\n  {serialize = JSON.stringify, deserialize = JSON.parse} = {},\r\n) {\r\n  const [state, setState] = React.useState(() => {\r\n    const valueInLocalStorage = window.localStorage.getItem(key)\r\n    if (valueInLocalStorage) {\r\n      // the try/catch is here in case the localStorage value was set before\r\n      // we had the serialization in place (like we do in previous extra credits)\r\n      try {\r\n        return deserialize(valueInLocalStorage)\r\n      } catch (error) {\r\n        window.localStorage.removeItem(key)\r\n      }\r\n    }\r\n    return typeof defaultValue === 'function' ? defaultValue() : defaultValue\r\n  })\r\n\r\n  const prevKeyRef = React.useRef(key)\r\n\r\n  // Check the example at src/examples/local-state-key-change.js to visualize a key change\r\n  React.useEffect(() => {\r\n    const prevKey = prevKeyRef.current\r\n    if (prevKey !== key) {\r\n      window.localStorage.removeItem(prevKey)\r\n    }\r\n    prevKeyRef.current = key\r\n    window.localStorage.setItem(key, serialize(state))\r\n  }, [key, state, serialize])\r\n\r\n  return [state, setState]\r\n}\r\n\r\nexport {useLocalStorageState}","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\n// import RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport ViralHepatitisFormsContainer from \"./main/webapp/jsx/components/Patient/ViralHepatitisFormsContainer\";\r\nimport FollowupForm from \"./main/webapp/jsx/components/Patient/ViralHepatitisForms/FollowUp\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            {/* <PatientDetail /> */}\r\n            <FollowupForm/>\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <ViralHepatitisFormsContainer />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}