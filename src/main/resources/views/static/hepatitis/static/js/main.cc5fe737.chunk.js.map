{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/PatientVaccinatedLIst.js","main/webapp/jsx/components/Patient/HepatitisPatient.js","main/webapp/jsx/formSchemas/form1ValidationSchema.js","main/webapp/jsx/helpers/cookieStoragehelpers.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form1.js","main/webapp/jsx/components/Patient/SummaryTypeSelect/SummaryTypeSelect.js","main/webapp/jsx/formSchemas/summaryFormsValidationSchema.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Reactive.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/NonReactive.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Fibrosis.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Cirrhosis.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HepatocellularCarcinoma.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType1.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType2.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType3.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType4.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryFormContainer.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/DashboardForm2.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/DashboardTreatmentForm.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/SubmittedForms/enrolmentForm.js","main/webapp/jsx/components/Patient/SubmittedForms/DiagnosisSubmittedForm.js","main/webapp/jsx/components/Patient/SubmittedForms/TreatmentSubmittedForm.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","main/webapp/jsx/components/Patient/Stepper/Stepper.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form2.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form3.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form4.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/PatientCardFollowUp.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/FollowUp.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/LaboratoryRegister.js","main/webapp/jsx/components/Patient/ViralHepatitisFormsContainer.js","main/webapp/jsx/hooks/useLocalStorageState.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","calculate_age","dob","today","Date","birthDate","split","age_now","getFullYear","m","getMonth","getDate","_useState","useState","_useState2","_slicedToArray","loading","_useState3","_useState4","enablePPI","setEnablePPI","tableRef","useRef","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","enablePPIColumns","PPISelect","children","_jsxs","className","name","id","checked","onChange","style","border","borderRadius","htmlFor","fontWeight","MaterialTable","icons","title","columns","field","filtering","hidden","isLoading","data","query","Promise","resolve","reject","axios","concat","baseUrl","pageSize","page","headers","Authorization","then","response","result","totalCount","records","map","row","firstName","otherName","surname","filter","Boolean","join","sex","toLowerCase","charAt","toUpperCase","slice","dateOfBirth","age","undefined","actions","Link","to","pathname","state","patientId","patientObj","existingPatient","ButtonGroup","variant","backgroundColor","size","Button","TiArrowForward","totalRecords","options","headerStyle","padding","searchFieldStyle","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","sorting","onChangePage","setCurrentPage","HepatitisPatients","console","log","gender","useValidateForm1ValuesHook","onSubmit","Form1ValidationSchema","yup","stateId","countryId","educationId","employmentStatusId","coreEntryPoint","pregnancy","weight","hepatitisB","breastfeeding","historyOfUsingAbusedSubstance","dateOfFirstHepatitisBPositiveScreening","hepatitisC","dateOfRegistration","maritalStatusId","sexId","phone","ninNumber","isDateOfBirthEstimated","formik","useFormik","initialValues","validationSchema","useValidateForm2ValuesHook","Form2ValidationSchema","afp","albumin","alt","altValue","antiHDV","apriScore","ascites","ast","astValue","childPughScore","liverBiopsyStage","comment","commobidities","creatinine","ctScan","dateHbvDnaResultReported","dateHbvSampleCollected","dateHbvSampleRequested","dateHbvTestRequested","dateHbvDnaTestRequested","diagnosis_result","fib4","fibroscan","gradeOfEncephalopathy","hbeAg","hbsAgQuantification","hbvDna","hvbDnaValue","hcvRNA","hcRnaValue","hepatitisCoinfection","stagingDateOfLiverBiopsy","pst","pstValue","pmtctEligible","prothrombinTimeNR","severityOfAscites","multipleInfection","stagingDateForLiverBiopsy","totalBiliRubin","directBiliribin","treatmentEligible","ultrasoundScan","urea","useValidateForm3ValuesHook","_form3InitialValues","_yup$object","form3InitialValues","hbvDateStarted","hbvDateStopped","hbvHistoryOfAdverseEffect","hbvNewRegimen","hbvPastTreatmentRegimen","hbvReasonForTreatmentEligibility","hbvReasonsForTreatmentComment","hbvRegimeSwitchDateStarted","hbvRegimeSwitchDateStopped","hbvRegimeSwitchHistoryOfAdverseEffect","hbvRegimeSwitchNewRegimen","hbvRegimeSwitchReason","hbvTreatmentExperience","hcvAdverseEventReported","hcvDateCompleted","hcvDateStopped","hcvDateStarted","hcvHistoryOfAdverseEffect","pastTreatmentExperience","_defineProperty","Form3ValidationSchema","setCookie","daysToExpire","expirationDate","setDate","cookieValue","encodeURIComponent","JSON","stringify","toUTCString","document","cookie","getCookie","cookieArray","decodeURIComponent","i","length","substring","indexOf","parse","library","add","faCheckSquare","faCoffee","faEdit","faTrash","useStyles","demo","palette","background","default","inline","ViralHepatitisForm1","_ref","setStep","userStatus","district","info","setInfo","bmi","careEntryPoint","phoneNumber","altPhonenumber","screening","personDto","active","address","genderId","assignerId","organizationId","basicInfo","setBasicInfo","_useState5","_useState6","hospitalNumStatus","setHospitalNumStatus","_useState7","_useState8","genders","setGenders","_useState9","_useState10","maritalStatusOptions","setMaritalStatusOptions","_useState11","_useState12","educationOptions","setEducationOptions","_useState13","_useState14","occupationOptions","setOccupationOptions","_useState15","_useState16","setRelationshipOptions","_useState17","_useState18","countries","setCountries","_useState19","_useState20","states","setStates","_useState21","_useState22","hepatitisStatus","_useState23","_useState24","provinces","setProvinces","_useState25","_useState26","errors","setErrors","_useState27","_useState28","settopLevelUnitCountryOptions","_useState29","_useState30","ageDisabled","setAgeDisabled","_useState31","_useState32","carePoints","setCarePoints","_useState33","_useState34","setSourceReferral","_useState35","_useState36","setPregnancyStatus","_useState37","_useState38","setDisabledAgeBaseOnAge","_React$useState","React","_React$useState2","open","setOpen","toggle","sexCodeset","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","apiUrl","sent","sort","stop","apply","arguments","loadMaritalStatus","useCallback","_callee2","_context2","t0","loadEducation","_callee3","_context3","loadOccupation","_callee4","_context4","loadRelationships","_callee5","_context5","loadTopLevelCountry","_callee6","_context6","loadOrganisationUnitsByParentId","_ref8","_callee7","parentId","_context7","abrupt","_x","setStateByCountryId","catch","getProvinces","e","_e$target","target","postDataWithToken","_ref9","_callee8","key","_response$data","_response$data2","_context8","post","toast","enrollmentId","enrollmentUuid","message","_x2","_x3","classes","values","scrollTo","restructuredEnrolmentPayload","alphabetOnly","replace","handleDateOfBirthChange","temp","handleInputChangeBasic","_objectSpread5","handleInputChangesForInfo","getHosiptalNumber","_ref10","_callee9","hosiptalNumber","_context9","handleDobChange","handleSubmit","_ref11","_callee10","userInfo","newUserInfo","_context10","preventDefault","Object","every","x","personId","_x4","useEffect","setValues","castCookieValueToForm","setEnrollSetting","getCountryId","getStates","mass","heightSquare","calculateBMI","_Fragment","Card","CardContent","FormGroup","Label","for","max","moment","format","PhoneInput","containerStyle","inputStyle","country","placeholder","maxLength","masks","ng","at","inputName","checkPhoneNumberBasic","disabled","item","index","Number","landmark","defaultChecked","min","currentDate","setMonth","dobNew","toISOString","Math","abs","onBlur","handleBlur","MatButton","onClick","endIcon","ArrowForward","textTransform","SummaryTypeSelect","setFormValues","_ref$formValues","formValues","select1Value","select2Value","select3Value","maxWidth","Row","Col","Input","event","prevState","useValidateSummaryValuesHook","ReactiveFormSchema","Reactive","hepatitisBDropdown","hepatitisCDropdown","coInfectionDropdown","isDropdownsOpen","setIsDropdownsOpen","Form","justifyContent","marginLeft","IconButton","ExpandMoreIcon","Collapse","in","handleChange","maleNineAndUnder","maleTen2Fourteen","maleFifteenAndAbove","maleTotal","femaleNineAndUnder","femaleTen2Fourteen","femaleFifteenAndAbove","femaleTotal","specialPopulationPWID","specialPopulationPW","NonReactive","Fibrosis","Cirrhosis","HepatocellularCarcinoma","HbvType1","HbvType2","HbvType3","HbvType4","ViralHepatitisSummaryFormContainer","_formMap","formMap","divStyle","Home","setKey","Fragment","startIcon","FaUserPlus","xl","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","heading","typography","pxToRem","secondaryHeading","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","ExpansionPanel","ExpansionPanelSummary","md","root2","lastName","ButtonMui","TiArrowBack","Divider","navItemText","SubMenu","patientObjs","diagnosisActivities","setDiagnosisActivities","treatmentActivities","setTreatmentActivities","Observation","recentActivities","each","activityName","observation","Menu","inverted","Item","setActiveContent","activeContent","route","RecentHistory","history","useHistory","path","activityDate","setRecentActivities","saving","setSaving","record","notToBeUpdated","motherVisit","childVisit","childAlive","childDead","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","allRecentActivities","LoadViewPage","action","push","recordId","actionType","showForm","enrollment","diagnosis","treatment","PerfectScrollbar","Accordion","defaultActiveKey","Toggle","as","Text","includes","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","Modal","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","RecentActivities","fontFamily","lineHeight","Biometrics","InclusionCriteria","vaccination","setVaccination","category","patient_id","questionAnswers","visit_date","objValues","_patients","patients","handleInputChange","showModal","CardBody","datatype","required","responses","_ref3","_ref4","SaveIcon","entries","question_id","answer","getInclusionHistory","CancelIcon","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","chronicMedicationModal","setChronicMedicationModal","supportiveCareModal","setSupportiveCareModal","vaccinationHistory","setVaccinationHistory","inclusionHistory","setInclusionHistory","demograhicHistory","setDemographicHistory","vitalHistory","setVitalHistory","comobitieHistory","setComobitieHistory","reinfectionHistory","setReinfectionHistory","signsSymptomsHistory","setSignsSymptomsHistory","chronicMedicationHistory","setChronicMedicationHistory","_useState39","_useState40","medicationHistory","setMedicationHistory","_useState41","_useState42","supportiveCarenHistory","setSupportiveCareHistory","Grid","padded","Column","Segment","raised","ribbon","Icon","cursor","List","divided","Content","floated","Demographic","VitalSign","Comorbitie","SignsSymptoms","DashboardForm2","userId","clinicalParameters","hepatitisBTest","hbeAG","hepatitisCTest","handleInputChangeBasicForHC","handleInputChangeBasicForClinic","enrollmentIds","restructuredDiagnosisPayload","plt","cols","rows","DasboardTreatmentForm","_objectDestructuringEmpty","hepatitisBTreatment","dateStarted","dateStopped","hepatitisBRegimenSwitch","adverseEffectReported","newRegime","reasonForSwitch","historyOfAdverseEffect","newRegimen","reasonForHepatitisBTreatment","reasonsForTreatment","treatmentExperience","hepatitisCTreatment","dateCompleted","hcvRetreatment","history_of_AdverseEffect","prescribedDuration","retreatmentAdverseEffect","hepatitisSvr12Testing","dateTested","hcvRNAValue","retreatmentDateTested","retreatmentHcvRNA","retreatmentHcvRNAValue","handleInputChangeBasicHB","handleInputChangeBasicHBReason","handleInputChangeBasicHBRegSwitch","handleInputChangeBasicHC","handleInputChangeBasicHCSVR","handleInputChangeBasicHHCV","treatmentExperienceB","hcvTreatmentExperience","hbvAdverseEffectReported","hcvPrescribedDuration","svr12TestingDateStarted","svr12TestingHcvRna","svr12RetreatmentDateTested","svr12RetreatmentHcvRna","hcvRetreatmentNewRegimen","hcvRetreatmentPrescribedDuration","hcvRetreatmentDateStarted","hcvRetreatmentDateStopped","hcvRetreatmentAdverseEffect","hcvRetreatmentHistoryOfAdverseEffect","restructuredTreatmentPayload","formatDate","hbvPastTreatmentRegimenForHcv","svr12TestingHcvRnaValue","deleteCookie","inputDate","dateArray","year","month","hbvTreatmentRegimenSwitch","hbvTreatmentReasonforTreatment","hcvTreatmentRegimenSwitch","hcvTreatmentRegimenHcvRetreatment","hcvTreatmentSvr12Testing","art","setArt","activeTab","prepId","personUuid","PatientCardDetail","flexGrow","UserRegistration","contact","contactPoint","deceased","deceasedDateTime","email","relationshipId","middleName","relatives","setRelatives","substr","contacts","setContacts","disabledAgeBaseOnAge","showRelative","setShowRelative","relationshipOptions","person","hivEnrollment","userDetail","user","useLocation","setfemaleStatus","_useState43","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","prepSupporter","uniqueClientId","ancUnique","_useState44","setObjValues","_useState45","_useState46","_useState47","_useState48","_useState49","_useState50","hivStatus","setHivStatus","_useState51","_useState52","_useState53","_useState54","setTbStatus","_useState55","_useState56","setKP","_useState57","_useState58","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","setOvcEnrolled","_useState65","_useState66","locationState","loadGenders","getSex","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","newConatctsInfo","contactInfo","line","identifiers","altphone","uniqueId","maritalStatus","employmentStatus","education","city","getStateId","patientAge","alert","getSexId","dateParts","dateObject","validate","dateOfRegistration1","ninNumberValue","checkNINLimit","getRelationship","relationship","handleInputChangeRelatives","patientForm","fullName","organisationUnitId","postalCode","position","POSITION","TOP_RIGHT","ToastContainer","autoClose","hideProgressBar","maritalStatusOption","occupationOption","educationOption","relative","splice","handleEditRelative","FontAwesomeIcon","_toConsumableArray","handleDeleteRelative","checkPhoneNumber","validateRelatives","AddIcon","code","Spinner","EnrolmentSubmittedForm","allPatientInfo","patientInfo","setPatientInfo","put","_allPatientInfo$addre","_allPatientInfo$addre2","_allPatientInfo$addre3","_allPatientInfo$addre4","_patientInfo$screenin","_patientInfo$screenin2","_patientInfo$screenin3","_patientInfo$screenin4","_patientInfo$screenin5","_patientInfo$screenin6","monthValue","dayOfMonth","toString","isDobEstimated","DiagnosisSubmitedForm","_diagnosisInfo$hepati","_diagnosisInfo$hepati2","_diagnosisInfo$hepati3","_diagnosisInfo$hepati4","_diagnosisInfo$hepati5","_diagnosisInfo$hepati6","_diagnosisInfo$hepati7","_diagnosisInfo$hepati8","_diagnosisInfo$hepati9","diagnosisInfo","_diagnosisInfo$clinic","_diagnosisInfo$clinic2","_diagnosisInfo$clinic3","_diagnosisInfo$clinic4","_diagnosisInfo$clinic5","_diagnosisInfo$clinic6","_diagnosisInfo$clinic7","_diagnosisInfo$clinic8","_diagnosisInfo$clinic9","_diagnosisInfo$clinic10","_diagnosisInfo$clinic11","_diagnosisInfo$clinic12","_diagnosisInfo$clinic13","_diagnosisInfo$clinic14","_diagnosisInfo$clinic15","_diagnosisInfo$clinic16","_diagnosisInfo$clinic17","_diagnosisInfo$clinic18","_diagnosisInfo$clinic19","_diagnosisInfo$clinic20","_diagnosisInfo$hepati10","_diagnosisInfo$hepati11","_diagnosisInfo$hepati12","_diagnosisInfo$hepati13","_diagnosisInfo$hepati14","_diagnosisInfo$hepati15","_diagnosisInfo$hepati16","_diagnosisInfo$hepati17","_diagnosisInfo$hepati18","_diagnosisInfo$hepati19","_diagnosisInfo$hepati20","_diagnosisInfo$hepati21","_diagnosisInfo$hepati22","_diagnosisInfo$hepati23","_diagnosisInfo$hepati24","_diagnosisInfo$hepati25","_diagnosisInfo$hepati26","_diagnosisInfo$hepati27","_diagnosisInfo$hepati28","_diagnosisInfo$hepati29","_diagnosisInfo$hepati30","_diagnosisInfo$hepati31","_diagnosisInfo$hepati32","_diagnosisInfo$hepati33","_diagnosisInfo$hepati34","_diagnosisInfo$hepati35","_diagnosisInfo$hepati36","_diagnosisInfo$hepati37","_diagnosisInfo$hepati38","_diagnosisInfo$hepati39","_diagnosisInfo$hepati40","_diagnosisInfo$hepati41","_diagnosisInfo$hepati42","_diagnosisInfo$hepati43","_diagnosisInfo$hepati44","_diagnosisInfo$hepati45","_diagnosisInfo$hepati46","_diagnosisInfo$hepati47","_diagnosisInfo$hepati48","_diagnosisInfo$hepati49","TreatmentSubmittedForm","_treatmentInfo$hepati79","treatmentInfo","_treatmentInfo$hepati","_treatmentInfo$hepati2","_treatmentInfo$hepati3","_treatmentInfo$hepati4","_treatmentInfo$hepati5","_treatmentInfo$hepati6","_treatmentInfo$hepati7","_treatmentInfo$hepati8","_treatmentInfo$hepati9","_treatmentInfo$hepati10","_treatmentInfo$hepati11","_treatmentInfo$hepati12","_treatmentInfo$hepati13","_treatmentInfo$hepati14","_treatmentInfo$hepati15","_treatmentInfo$hepati16","_treatmentInfo$hepati17","_treatmentInfo$hepati18","_treatmentInfo$hepati19","_treatmentInfo$hepati20","_treatmentInfo$hepati21","_treatmentInfo$hepati22","_treatmentInfo$hepati23","_treatmentInfo$hepati24","_treatmentInfo$hepati25","_treatmentInfo$hepati26","_treatmentInfo$hepati27","_treatmentInfo$hepati28","_treatmentInfo$hepati29","_treatmentInfo$hepati30","_treatmentInfo$hepati31","_treatmentInfo$hepati32","_treatmentInfo$hepati33","_treatmentInfo$hepati34","_treatmentInfo$hepati35","_treatmentInfo$hepati36","_treatmentInfo$hepati37","_treatmentInfo$hepati38","_treatmentInfo$hepati39","_treatmentInfo$hepati40","_treatmentInfo$hepati41","_treatmentInfo$hepati42","_treatmentInfo$hepati43","_treatmentInfo$hepati44","_treatmentInfo$hepati45","_treatmentInfo$hepati46","_treatmentInfo$hepati47","_treatmentInfo$hepati48","_treatmentInfo$hepati49","_treatmentInfo$hepati50","_treatmentInfo$hepati51","_treatmentInfo$hepati52","_treatmentInfo$hepati53","_treatmentInfo$hepati54","_treatmentInfo$hepati55","_treatmentInfo$hepati56","_treatmentInfo$hepati57","_treatmentInfo$hepati58","_treatmentInfo$hepati59","_treatmentInfo$hepati60","_treatmentInfo$hepati61","_treatmentInfo$hepati62","_treatmentInfo$hepati63","_treatmentInfo$hepati64","_treatmentInfo$hepati65","_treatmentInfo$hepati66","_treatmentInfo$hepati67","_treatmentInfo$hepati68","_treatmentInfo$hepati69","_treatmentInfo$hepati70","_treatmentInfo$hepati71","_treatmentInfo$hepati72","_treatmentInfo$hepati73","_treatmentInfo$hepati74","_treatmentInfo$hepati75","_treatmentInfo$hepati76","_treatmentInfo$hepati77","_treatmentInfo$hepati78","hepatitisBTreatmentDto","hepatitisCTreatmentDto","setDiagnosisInfo","setTreatmentInfo","setEnrollmentUuid","enrollmentUuidT","setEnrollmentUuidT","setAllPatientInfo","viewHepatitisEnrollment","eId","uuid","viewHepatitisTreatment","backButton","marginRight","instructions","Steppers","activeStep","steps","Stepper","alternativeLabel","label","Step","StepLabel","ViralHepatitisForm2","ArrowBackIcon","ViralHepatitisForm3","ViralHepatitisFormsContainer","_useLocalStorageState","defaultValue","_ref$serialize","serialize","_ref$deserialize","deserialize","valueInLocalStorage","localStorage","getItem","removeItem","setState","prevKeyRef","prevKey","current","setItem","useLocalStorageState","_useLocalStorageState2","step","margingRight","App","Router","Switch","Route","PatientDetail","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.cc5fe737.chunk.js","sourcesContent":["export const token = new URLSearchParams(window.location.search).get(\"jwt\");\r\nexport const url = \"/api/v1/\";\r\n// export const url = \"http://localhost:8383/api/v1/\";\r\n// export const token =\r\n//   \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzAxMzUwNjg1fQ.9w_wH7qRX_-o6PIF8cHDSSb-CqzQVAnAqzLwfA8SY7Wbyn_VxzgGWGKKVlX4p1gbU9hStvmeKUM4C39UWD-flQ\";\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { TiArrowForward } from \"react-icons/ti\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Patients = (props) => {\r\n  //   const [permissions, setPermissions] = useState(props.permissions);\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [enablePPI, setEnablePPI] = useState(true);\r\n  const tableRef = useRef(null);\r\n\r\n  const getHospitalNumber = (identifier) => {\r\n    const hospitalNumber = identifier.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n  const handleRemoteData = (query) =>\r\n    new Promise((resolve, reject) => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}hepatitis/patient?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => response)\r\n        .then((result) => {\r\n          if (result.data === \"\") {\r\n            resolve({\r\n              data: [],\r\n              page: 0,\r\n              totalCount: 0,\r\n            });\r\n          } else {\r\n            resolve({\r\n              data: result.data.records.map((row) => ({\r\n                name: [row.firstName, row.otherName, row.surname]\r\n                  .filter(Boolean)\r\n                  .join(\", \"),\r\n                id: getHospitalNumber(row.identifier),\r\n                sex: row.sex\r\n                  ? row.sex.toLowerCase().charAt(0).toUpperCase() +\r\n                    row?.sex.slice(1).toLowerCase()\r\n                  : \"\",\r\n\r\n                dateOfBirth: row.dateOfBirth,\r\n                age:\r\n                  row.dateOfBirth === 0 ||\r\n                  row.dateOfBirth === undefined ||\r\n                  row.dateOfBirth === null ||\r\n                  row.dateOfBirth === \"\"\r\n                    ? 0\r\n                    : calculate_age(row.dateOfBirth),\r\n                actions: (\r\n                  <div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/register-patient\",\r\n                        state: {\r\n                          patientId: row.id,\r\n                          patientObj: row,\r\n                          existingPatient: \"existing\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      <ButtonGroup\r\n                        variant=\"contained\"\r\n                        aria-label=\"split button\"\r\n                        style={{\r\n                          backgroundColor: \"rgb(153, 46, 98)\",\r\n                          height: \"30px\",\r\n                          width: \"215px\",\r\n                        }}\r\n                        size=\"large\"\r\n                      >\r\n                        <Button\r\n                          color=\"primary\"\r\n                          size=\"small\"\r\n                          aria-label=\"select merge strategy\"\r\n                          aria-haspopup=\"menu\"\r\n                          style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                        >\r\n                          <TiArrowForward />\r\n                        </Button>\r\n                        <Button style={{ backgroundColor: \"rgb(153, 46, 98)\" }}>\r\n                          <span\r\n                            style={{\r\n                              fontSize: \"12px\",\r\n                              color: \"#fff\",\r\n                              fontWeight: \"bolder\",\r\n                            }}\r\n                          >\r\n                            Enroll Patient\r\n                          </span>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Link>\r\n\r\n                    {/* {permissions.includes(\"view_patient\") ||\r\n                    permissions.includes(\"all_permission\") ? (\r\n                      <SplitActionButton actions={actionItems(row)} />\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                  </div>\r\n                ),\r\n              })),\r\n              page: query.page,\r\n              totalCount: result.data.totalRecords,\r\n            });\r\n          }\r\n        });\r\n    });\r\n  const enablePPIColumns = () => {\r\n    setEnablePPI(!enablePPI);\r\n  };\r\n\r\n  const PPISelect = () => (\r\n    <div>\r\n      <div className=\"form-check custom-checkbox  float-left mt-4 mb-4 \">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"form-check-input\"\r\n          name=\"showPP!\"\r\n          id=\"showPP\"\r\n          value=\"showPP\"\r\n          checked={enablePPI === true ? false : true}\r\n          onChange={enablePPIColumns}\r\n          style={{\r\n            border: \"1px solid #014D88\",\r\n            borderRadius: \"0.25rem\",\r\n          }}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n          <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>SHOW PII</b>\r\n        </label>\r\n      </div>\r\n\r\n      {/* {permissions.includes(\"view_patient\") ||\r\n        permissions.includes(\"all_permission\") ? (\r\n          <FormGroup className=\" float-right mr-1\">\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  onChange={enablePPIColumns}\r\n                  checked={!enablePPI}\r\n                  style={{ color: \"#014d88\", fontWeight: \"bold\" }}\r\n                />\r\n              }\r\n              label=\"Show PII\"\r\n              style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n            />\r\n          </FormGroup>\r\n        ) : (\r\n          <h5 style={{ color: \"#3d4465\", fontWeight: \"bold\" }}>Patients</h5>\r\n        )} */}\r\n    </div>\r\n  );\r\n\r\n  const handleChangePage = (page) => {\r\n    setCurrentPage(page + 1);\r\n  };\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        tableRef={tableRef}\r\n        /*onSearchChange={(e) => {\r\n                    handleSearchChange(e);\r\n                }}*/\r\n        icons={tableIcons}\r\n        title={<PPISelect />}\r\n        columns={[\r\n          {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            filtering: false,\r\n            hidden: enablePPI,\r\n          },\r\n          { title: \"Hosp. Number\", field: \"id\", filtering: false },\r\n          { title: \"Sex\", field: \"sex\", filtering: false },\r\n          { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n          /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n          /*{ title: \"Status\", field: \"status\", filtering: false },*/\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={loading}\r\n        data={handleRemoteData}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n            fontSize: \"16px\",\r\n            padding: \"10px\",\r\n            fontWeight: \"bolder\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"50%\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n          sorting: true,\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        //localization={localization}\r\n      />\r\n      {/* <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n          },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          { title: \"Actions\", field: \"actions\", filtering: true },\r\n        ]}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data: result?.data?.records?.map?.((row) => ({\r\n                    name: row.firstName + \" \" + row.lastName,\r\n                    hospital_number: row.participantId,\r\n                    gender: row.gender !== null ? row.gender.display : \"\",\r\n                    age: calculate_age(row.dob),\r\n\r\n                    count: (\r\n                      <Label color=\"blue\" size=\"mini\">\r\n                        {row.vaccinationStatus}\r\n                      </Label>\r\n                    ),\r\n\r\n                    actions: (\r\n                      <div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/patient-history\",\r\n                            state: { patientObj: row },\r\n                          }}\r\n                        >\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            aria-label=\"split button\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(153, 46, 98)\",\r\n                              height: \"30px\",\r\n                              width: \"215px\",\r\n                            }}\r\n                            size=\"large\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <MdDashboard />\r\n                            </Button>\r\n                            <Button\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontSize: \"12px\",\r\n                                  color: \"#fff\",\r\n                                  fontWeight: \"bolder\",\r\n                                }}\r\n                              >\r\n                                Patient Dashboard\r\n                              </span>\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </Link>\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { TiArrowForward } from \"react-icons/ti\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HepatitisPatients = (props) => {\r\n  //   const [permissions, setPermissions] = useState(props.permissions);\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [enablePPI, setEnablePPI] = useState(true);\r\n  const tableRef = useRef(null);\r\n\r\n  const getHospitalNumber = (identifier) => {\r\n    const hospitalNumber = identifier.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n  const handleRemoteData = (query) =>\r\n    new Promise((resolve, reject) => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}hepatitis?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => response)\r\n        .then((result) => {\r\n          console.log(result.data);\r\n          if (result.data === \"\") {\r\n            resolve({\r\n              data: [],\r\n              page: 0,\r\n              totalCount: 0,\r\n            });\r\n          } else {\r\n            resolve({\r\n              data: result.data.map((row) => ({\r\n                name: [row?.firstName, row?.otherName, row?.surname]\r\n                  .filter(Boolean)\r\n                  .join(\", \"),\r\n                id: row?.hospitalNumber,\r\n                sex: row?.sex\r\n                  ? row.sex.toLowerCase().charAt(0).toUpperCase() +\r\n                    row.sex.slice(1).toLowerCase()\r\n                  : row.gender.toLowerCase().charAt(0).toUpperCase() +\r\n                    row.gender.slice(1).toLowerCase(),\r\n                dateOfBirth: row.dateOfBirth,\r\n                age:\r\n                  row.dateOfBirth === 0 ||\r\n                  row.dateOfBirth === undefined ||\r\n                  row.dateOfBirth === null ||\r\n                  row.dateOfBirth === \"\"\r\n                    ? 0\r\n                    : calculate_age(row.dateOfBirth),\r\n                actions: (\r\n                  <div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: {\r\n                          patientId: row.id,\r\n                          patientObj: row,\r\n                        },\r\n                      }}\r\n                    >\r\n                      <ButtonGroup\r\n                        variant=\"contained\"\r\n                        aria-label=\"split button\"\r\n                        style={{\r\n                          backgroundColor: \"rgb(153, 46, 98)\",\r\n                          height: \"30px\",\r\n                          width: \"215px\",\r\n                        }}\r\n                        size=\"large\"\r\n                      >\r\n                        <Button\r\n                          color=\"primary\"\r\n                          size=\"small\"\r\n                          aria-label=\"select merge strategy\"\r\n                          aria-haspopup=\"menu\"\r\n                          style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                        >\r\n                          <TiArrowForward />\r\n                        </Button>\r\n                        <Button style={{ backgroundColor: \"rgb(153, 46, 98)\" }}>\r\n                          <span\r\n                            style={{\r\n                              fontSize: \"12px\",\r\n                              color: \"#fff\",\r\n                              fontWeight: \"bolder\",\r\n                            }}\r\n                          >\r\n                            Patient Dashboard\r\n                          </span>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Link>\r\n\r\n                    {/* {permissions.includes(\"view_patient\") ||\r\n                    permissions.includes(\"all_permission\") ? (\r\n                      <SplitActionButton actions={actionItems(row)} />\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                  </div>\r\n                ),\r\n              })),\r\n              page: query.page,\r\n              totalCount: result.data.totalRecords,\r\n            });\r\n          }\r\n        });\r\n    });\r\n  const enablePPIColumns = () => {\r\n    setEnablePPI(!enablePPI);\r\n  };\r\n\r\n  const PPISelect = () => (\r\n    <div>\r\n      <div className=\"form-check custom-checkbox  float-left mt-4 mb-4 \">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"form-check-input\"\r\n          name=\"showPP!\"\r\n          id=\"showPP\"\r\n          value=\"showPP\"\r\n          checked={enablePPI === true ? false : true}\r\n          onChange={enablePPIColumns}\r\n          style={{\r\n            border: \"1px solid #014D88\",\r\n            borderRadius: \"0.25rem\",\r\n          }}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n          <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>SHOW PII</b>\r\n        </label>\r\n      </div>\r\n\r\n      {/* {permissions.includes(\"view_patient\") ||\r\n        permissions.includes(\"all_permission\") ? (\r\n          <FormGroup className=\" float-right mr-1\">\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  onChange={enablePPIColumns}\r\n                  checked={!enablePPI}\r\n                  style={{ color: \"#014d88\", fontWeight: \"bold\" }}\r\n                />\r\n              }\r\n              label=\"Show PII\"\r\n              style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n            />\r\n          </FormGroup>\r\n        ) : (\r\n          <h5 style={{ color: \"#3d4465\", fontWeight: \"bold\" }}>Patients</h5>\r\n        )} */}\r\n    </div>\r\n  );\r\n\r\n  const handleChangePage = (page) => {\r\n    setCurrentPage(page + 1);\r\n  };\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        tableRef={tableRef}\r\n        /*onSearchChange={(e) => {\r\n                    handleSearchChange(e);\r\n                }}*/\r\n        icons={tableIcons}\r\n        title={<PPISelect />}\r\n        columns={[\r\n          {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            filtering: false,\r\n            hidden: enablePPI,\r\n          },\r\n          { title: \"Hosp. Number\", field: \"id\", filtering: false },\r\n          { title: \"Sex\", field: \"sex\", filtering: false },\r\n          { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n          /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n          /*{ title: \"Status\", field: \"status\", filtering: false },*/\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={loading}\r\n        data={handleRemoteData}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n            fontSize: \"16px\",\r\n            padding: \"10px\",\r\n            fontWeight: \"bolder\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"50%\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n          sorting: true,\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        //localization={localization}\r\n      />\r\n      {/* <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n          },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          { title: \"Actions\", field: \"actions\", filtering: true },\r\n        ]}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data: result?.data?.records?.map?.((row) => ({\r\n                    name: row.firstName + \" \" + row.lastName,\r\n                    hospital_number: row.participantId,\r\n                    gender: row.gender !== null ? row.gender.display : \"\",\r\n                    age: calculate_age(row.dob),\r\n\r\n                    count: (\r\n                      <Label color=\"blue\" size=\"mini\">\r\n                        {row.vaccinationStatus}\r\n                      </Label>\r\n                    ),\r\n\r\n                    actions: (\r\n                      <div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/patient-history\",\r\n                            state: { patientObj: row },\r\n                          }}\r\n                        >\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            aria-label=\"split button\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(153, 46, 98)\",\r\n                              height: \"30px\",\r\n                              width: \"215px\",\r\n                            }}\r\n                            size=\"large\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <MdDashboard />\r\n                            </Button>\r\n                            <Button\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontSize: \"12px\",\r\n                                  color: \"#fff\",\r\n                                  fontWeight: \"bolder\",\r\n                                }}\r\n                              >\r\n                                Patient Dashboard\r\n                              </span>\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </Link>\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HepatitisPatients;\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst invalidTextPrompt = \"Invalid input type\";\r\nconst requiredTextPrompt = \"field is required\";\r\n\r\nexport const useValidateForm1ValuesHook = (onSubmit) => {\r\n  const form1InitialValues = {\r\n    stateId: \"\",\r\n    otherName: \"\",\r\n    countryId: \"\",\r\n    coreEntryPoint: \"\",\r\n    pregnancy: \"\",\r\n    weight: \"\",\r\n    height: \"\",\r\n    hepatitisB: \"\",\r\n    breastfeeding: \"\",\r\n    historyOfUsingAbusedSubstance: \"\",\r\n    dateOfFirstHepatitisBPositiveScreening: \"\",\r\n    hepatitisC: \"\",\r\n    surname: \"\",\r\n    firstName: \"\",\r\n    dateOfBirth: \"\",\r\n    maritalStatusId: \"\",\r\n    phone: \"\",\r\n    ninNumber: \"\",\r\n    isDateOfBirthEstimated: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    dateOfRegistration: \"\",\r\n  };\r\n\r\n  const Form1ValidationSchema = yup.object({\r\n    stateId: yup.number(),\r\n    countryId: yup.number(),\r\n    educationId: yup.number(),\r\n    employmentStatusId: yup.number(),\r\n    coreEntryPoint: yup.string(),\r\n    pregnancy: yup.string(),\r\n    weight: yup.number(),\r\n    height: yup.number(),\r\n    hepatitisB: yup.string(),\r\n    breastfeeding: yup.string(),\r\n    historyOfUsingAbusedSubstance: yup.string(),\r\n    dateOfFirstHepatitisBPositiveScreening: yup.date(),\r\n    hepatitisC: yup.string(),\r\n    surname: yup.string(),\r\n    firstName: yup.string(),\r\n    otherName: yup.string(),\r\n    dateOfBirth: yup.date(),\r\n    dateOfRegistration: yup.date(),\r\n    maritalStatusId: yup.number(),\r\n    sexId: yup.number(),\r\n    phone: yup.string(),\r\n    ninNumber: yup.string(),\r\n    isDateOfBirthEstimated: yup.boolean(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form1InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form1ValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n\r\nexport const useValidateForm2ValuesHook = (onSubmit) => {\r\n  const form2InitialValues = {\r\n    afp: \"\",\r\n    albumin: \"\",\r\n    alt: \"\",\r\n    altValue: \"\",\r\n    antiHDV: \"\",\r\n    apriScore: \"\",\r\n    ascites: \"\",\r\n    ast: \"\",\r\n    astValue: \"\",\r\n    childPughScore: \"\",\r\n    liverBiopsyStage: \"\",\r\n    comment: \"\",\r\n    commobidities: \"\",\r\n    creatinine: \"\",\r\n    ctScan: \"\",\r\n    dateHbvDnaResultReported: \"\",\r\n    dateHbvSampleCollected: \"\",\r\n    dateHbvSampleRequested: \"\",\r\n    dateHbvTestRequested: \"\",\r\n    dateHbvDnaTestRequested: \"\",\r\n    diagnosis_result: \"\",\r\n    fib4: \"\",\r\n    fibroscan: \"\",\r\n    gradeOfEncephalopathy: \"\",\r\n    hbeAg: \"\",\r\n    hbsAgQuantification: \"\",\r\n    hbvDna: \"\",\r\n    hvbDnaValue: \"\",\r\n    hcvRNA: \"\",\r\n    hcRnaValue: \"\",\r\n    hepatitisCoinfection: \"\",\r\n    stagingDateOfLiverBiopsy: \"\",\r\n    pst: \"\",\r\n    pstValue: \"\",\r\n    pmtctEligible: \"\",\r\n    prothrombinTimeNR: \"\",\r\n    severityOfAscites: \"\",\r\n    multipleInfection: \"\",\r\n    stagingDateForLiverBiopsy: \"\",\r\n    totalBiliRubin: \"\",\r\n    directBiliribin: \"\",\r\n    treatmentEligible: \"\",\r\n    ultrasoundScan: \"\",\r\n    urea: \"\",\r\n  };\r\n\r\n  const Form2ValidationSchema = yup.object({\r\n    afp: yup.string(),\r\n    albumin: yup.string(),\r\n    alt: yup.string(),\r\n    altValue: yup.string(),\r\n    antiHDV: yup.string(),\r\n    apriScore: yup.string(),\r\n    ascites: yup.string(),\r\n    ast: yup.string(),\r\n    astValue: yup.string(),\r\n    childPughScore: yup.string(),\r\n    liverBiopsyStage: yup.string(),\r\n    comment: yup.string(),\r\n    commobidities: yup.string(),\r\n    creatinine: yup.string(),\r\n    ctScan: yup.string(),\r\n    dateHbvDnaResultReported: yup.date(),\r\n    dateHbvSampleCollected: yup.date(),\r\n    dateHbvSampleRequested: yup.date(),\r\n    dateHbvTestRequested: yup.date(),\r\n    dateHbvDnaTestRequested: yup.date(),\r\n    diagnosis_result: yup.string(),\r\n    fib4: yup.string(),\r\n    fibroscan: yup.string(),\r\n    gradeOfEncephalopathy: yup.number(),\r\n    hbeAg: yup.string(),\r\n    hbsAgQuantification: yup.string(),\r\n    hbvDna: yup.string(),\r\n    hvbDnaValue: yup.string(),\r\n    hcvRNA: yup.string(),\r\n    hcRnaValue: yup.string(),\r\n    hepatitisCoinfection: yup.string(),\r\n    stagingDateOfLiverBiopsy: yup.string(),\r\n    pst: yup.string(),\r\n    pstValue: yup.string(),\r\n    pmtctEligible: yup.string(),\r\n    prothrombinTimeNR: yup.string(),\r\n    severityOfAscites: yup.string(),\r\n    multipleInfection: yup.string(),\r\n    stagingDateForLiverBiopsy: yup.date(),\r\n    totalBiliRubin: yup.string(),\r\n    directBiliribin: yup.string(),\r\n    treatmentEligible: yup.string(),\r\n    ultrasoundScan: yup.string(),\r\n    urea: yup.string(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form2InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form2ValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n\r\nexport const useValidateForm3ValuesHook = (onSubmit) => {\r\n  const form3InitialValues = {\r\n    hbvDateStarted: \"\",\r\n    hbvDateStopped: \"\",\r\n    hbvHistoryOfAdverseEffect: \"\",\r\n    hbvNewRegimen: \"\",\r\n    hbvPastTreatmentRegimen: \"\",\r\n    hbvReasonForTreatmentEligibility: \"\",\r\n    hbvReasonsForTreatmentComment: \"\",\r\n    hbvRegimeSwitchDateStarted: \"\",\r\n    hbvRegimeSwitchDateStopped: \"\",\r\n    hbvRegimeSwitchHistoryOfAdverseEffect: \"\",\r\n    hbvRegimeSwitchNewRegimen: \"\",\r\n    hbvRegimeSwitchReason: \"\",\r\n    hbvTreatmentExperience: \"\",\r\n    hcvAdverseEventReported: \"\",\r\n    hcvDateCompleted: \"\",\r\n    hcvDateStopped: \"\",\r\n    hcvDateStarted: \"\",\r\n    hcvHistoryOfAdverseEffect: \"\",\r\n    pastTreatmentExperience: \"\",\r\n    hbvPastTreatmentRegimen: \"\",\r\n    hcvPrescribedDuration: \"\",\r\n    hcvRegimeSwitchDateStarted: \"\",\r\n    hcvRegimeSwitchDateStopped: \"\",\r\n    hcvRegimeSwitchHistoryOfAdverseEffect: \"\",\r\n    hcvRetreatmentAdverseEffect: \"\",\r\n    hcvRetreatmentDateStarted: \"\",\r\n    hcvRetreatmentDateStopped: \"\",\r\n    hcvRetreatmentNewRegimen: \"\",\r\n    hcvRetreatmentNewRegime: \"\",\r\n    hcvRetreatmentPrescribedDuration: \"\",\r\n    hcvTreatmentExperience: \"\",\r\n    svr12RetreatmentDateTested: \"\",\r\n    svr12RetreatmentHcvRna: \"\",\r\n    svr12RetreatmentHcvRnaValue: \"\",\r\n    svr12TestingDateStarted: \"\",\r\n    svr12TestingHcvRna: \"\",\r\n    svr12TestingHcvRnaValue: \"\",\r\n  };\r\n\r\n  const Form3ValidationSchema = yup.object({\r\n    hbvDateStarted: yup.date(),\r\n    hbvDateStopped: yup.date(),\r\n    hbvHistoryOfAdverseEffect: yup.string(),\r\n    hbvNewRegimen: yup.string(),\r\n    hbvPastTreatmentRegimen: yup.string(),\r\n    hbvReasonForTreatmentEligibility: yup.string(),\r\n    hbvReasonsForTreatmentComment: yup.string(),\r\n    hbvRegimeSwitchDateStarted: yup.date(),\r\n    hbvRegimeSwitchDateStopped: yup.date(),\r\n    hbvRegimeSwitchHistoryOfAdverseEffect: yup.string(),\r\n    hbvRegimeSwitchNewRegimen: yup.string(),\r\n    hbvRegimeSwitchReason: yup.string(),\r\n    hbvTreatmentExperience: yup.string(),\r\n    hcvAdverseEventReported: yup.string(),\r\n    hcvDateCompleted: yup.date(),\r\n    hcvDateStopped: yup.date(),\r\n    hcvDateStarted: yup.date(),\r\n    hcvHistoryOfAdverseEffect: yup.string(),\r\n    pastTreatmentExperience: yup.string(),\r\n    hbvPastTreatmentRegimen: yup.string(),\r\n    hcvPrescribedDuration: yup.number(),\r\n    hcvRegimeSwitchDateStarted: yup.date(),\r\n    hcvRegimeSwitchDateStopped: yup.date(),\r\n    hcvRegimeSwitchHistoryOfAdverseEffect: yup.string(),\r\n    hcvRetreatmentAdverseEffect: yup.string(),\r\n    hcvRetreatmentDateStarted: yup.date(),\r\n    hcvRetreatmentDateStopped: yup.date(),\r\n    hcvRetreatmentNewRegimen: yup.string(),\r\n    hcvRetreatmentNewRegime: yup.string(),\r\n    hcvRetreatmentPrescribedDuration: yup.string(),\r\n    hcvTreatmentExperience: yup.string(),\r\n    svr12RetreatmentDateTested: yup.date(),\r\n    svr12RetreatmentHcvRna: yup.string(),\r\n    svr12RetreatmentHcvRnaValue: yup.string(),\r\n    svr12TestingDateStarted: yup.date(),\r\n    svr12TestingHcvRna: yup.string(),\r\n    svr12TestingHcvRnaValue: yup.string(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form3InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form3ValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n\r\nexport const useValidateFollowupFormValuesHook = (onSubmit) => {\r\n  const followupFormIntialValue = {\r\n    dateOfVisit: \"\",\r\n    weight: \"\",\r\n    height: \"\",\r\n    bmi: \"\",\r\n    bloodPressure: \"\",\r\n    hbsAgQuantification: \"\",\r\n    hbeAg: \"\",\r\n    hbvDna: \"\",\r\n\r\n    alt: \"\",\r\n    ast: \"\",\r\n    pst: \"\",\r\n    totalBiliRubin: \"\",\r\n    directBilirubin: \"\",\r\n    albumin: \"\",\r\n    apriScore: \"\",\r\n    fib4: \"\",\r\n    prothrombinTimeNR: \"\",\r\n    urea: \"\",\r\n    creatinine: \"\",\r\n    ultrasoundScan: \"\",\r\n    afp: \"\",\r\n    fibroscan: \"\",\r\n    ctScan: \"\",\r\n    ascites: \"\",\r\n    severityOfAscites: \"\",\r\n    gradeOfEncephalopathy: \"\",\r\n    childPughScore: \"\",\r\n    stagingDateOfLiverBiopsy: \"\",\r\n    stagingDateForLiverBiopsy: \"\",\r\n    diagnosis_result: \"\",\r\n    treatmentRegimen: \"\",\r\n    nextAppointment: \"\",\r\n    remark: \"\",\r\n  };\r\n\r\n  const FollowupFormValidationSchema = yup.object({\r\n    dateOfVisit: yup.string(),\r\n    weight: yup.string(),\r\n    height: yup.string(),\r\n    bmi: yup.string(),\r\n    bloodPressure: yup.string(),\r\n    hbsAgQuantification: yup.string(),\r\n    hbeAg: yup.string(),\r\n    hbvDna: yup.string(),\r\n\r\n    alt: yup.string(),\r\n    ast: yup.string(),\r\n    pst: yup.string(),\r\n    totalBiliRubin: yup.string(),\r\n    directBilirubin: yup.string(),\r\n    albumin: yup.string(),\r\n    apriScore: yup.string(),\r\n    fib4: yup.string(),\r\n    prothrombinTimeNR: yup.string(),\r\n    urea: yup.string(),\r\n    creatinine: yup.string(),\r\n    ultrasoundScan: yup.string(),\r\n    afp: yup.string(),\r\n    fibroscan: yup.string(),\r\n    ctScan: yup.string(),\r\n    ascites: yup.string(),\r\n    severityOfAscites: yup.string(),\r\n    gradeOfEncephalopathy: yup.string(),\r\n    childPughScore: yup.string(),\r\n    stagingDateOfLiverBiopsy: yup.string(),\r\n    stagingDateForLiverBiopsy: yup.string(),\r\n    diagnosis_result: yup.string(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: followupFormIntialValue,\r\n    onSubmit,\r\n    validationSchema: FollowupFormValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n","export function setCookie(name, value, daysToExpire) {\r\n    const expirationDate = new Date();\r\n    expirationDate.setDate(expirationDate.getDate() + daysToExpire);\r\n  \r\n    let cookieValue = encodeURIComponent(name) + \"=\";\r\n  \r\n    // If the value is not a string, stringify it as JSON\r\n    if (typeof value !== 'string') {\r\n      cookieValue += encodeURIComponent(JSON.stringify(value));\r\n    } else {\r\n      cookieValue += encodeURIComponent(value);\r\n    }\r\n  \r\n    cookieValue += \";expires=\" + expirationDate.toUTCString() + \";path=/\";\r\n  \r\n    document.cookie = cookieValue;\r\n}\r\n  \r\n  export function getCookie(name) {\r\n    const decodedCookie = decodeURIComponent(document.cookie);\r\n    const cookieArray = decodedCookie.split(';');\r\n  \r\n    for (let i = 0; i < cookieArray.length; i++) {\r\n      let cookie = cookieArray[i];\r\n      while (cookie.charAt(0) === ' ') {\r\n        cookie = cookie.substring(1);\r\n      }\r\n  \r\n      if (cookie.indexOf(name + \"=\") === 0) {\r\n        const cookieValue = cookie.substring(name.length + 1, cookie.length);\r\n        \r\n        // Check if the value is JSON and parse it if necessary\r\n        try {\r\n          return JSON.parse(decodeURIComponent(cookieValue));\r\n        } catch (error) {\r\n          // If it's not valid JSON, return the raw value\r\n          return decodeURIComponent(cookieValue);\r\n        }\r\n      }\r\n    }\r\n  \r\n    return null;\r\n}\r\n  \r\n","import React, { useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Form } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm1ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { ArrowForward } from \"@material-ui/icons\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { useCallback } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n// import { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm1 = ({ setStep, userStatus, patientObj }) => {\r\n  const [info, setInfo] = useState({\r\n    countryId: 1,\r\n    stateId: \"\",\r\n    dateOfBirth: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    district: \"\",\r\n    value: \"\",\r\n  });\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    bmi: \"\",\r\n    hepatitisB: \"\",\r\n    height: \"\",\r\n    // streetAddress: \"\",\r\n    // address: [],\r\n    careEntryPoint: \"\",\r\n    age: \"\",\r\n    phoneNumber: \"\",\r\n    altPhonenumber: \"\",\r\n    pregnancy: \"\",\r\n    breastfeeding: \"\",\r\n    historyOfUsingAbusedSubstance: \"\",\r\n    screening: {\r\n      dateOfFirstHepatitisBPositiveScreening: \"\",\r\n      hepatitisC: \"\",\r\n    },\r\n    personDto: {\r\n      active: true,\r\n      address: [\r\n        {\r\n          countryId: info.countryId,\r\n          stateId: info.stateId,\r\n          district: \"\",\r\n        },\r\n      ],\r\n      dateOfBirth: \"\",\r\n      dateOfRegistration: \"\",\r\n      educationId: \"\",\r\n      employmentStatusId: \"\",\r\n      firstName: \"\",\r\n      genderId: \"\",\r\n      identifier: [\r\n        {\r\n          assignerId: 0,\r\n          type: \"\",\r\n          value: \"\",\r\n        },\r\n      ],\r\n      isDateOfBirthEstimated: \"\",\r\n      maritalStatusId: \"\",\r\n      ninNumber: \"\",\r\n      organizationId: \"\",\r\n      otherName: \"\",\r\n      sexId: \"\",\r\n      surname: \"\",\r\n    },\r\n    weight: \"\",\r\n  });\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n\r\n  console.log();\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [hepatitisStatus, setHepatitisStatus] = useState([\r\n    { id: \"Reactive\", display: \" Reactive\" },\r\n    { id: \"Non-reactive\", display: \" Non-Reactive\" },\r\n  ]);\r\n  const [provinces, setProvinces] = useState([]);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  // const [isDateOfBirthEstimated, setIsDateOfBirthEstimated] = useState(false);\r\n\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n\r\n  const sexCodeset = async () => {\r\n    const response = await axios.get(`${apiUrl}application-codesets/v2/SEX`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    setGenders(response.data.sort());\r\n  };\r\n\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const CareEntryPoint = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/POINT_ENTRY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setCarePoints(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getHepatitisPoint = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setHepatitisStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/ENROLLMENT_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${apiUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data.sort());\r\n  }, []);\r\n\r\n  const loadOrganisationUnitsByParentId = async (parentId) => {\r\n    const response = await axios.get(\r\n      `${apiUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n\r\n    return age_now;\r\n  };\r\n  const phoneNumberFormatCheck = (phone) => {\r\n    //console.log(\"err\", phone);\r\n    if (\r\n      phone != undefined &&\r\n      typeof phone?.value !== null &&\r\n      typeof phone?.value !== \"undefined\" &&\r\n      phone?.value?.charAt(0) === \"0\"\r\n    ) {\r\n      phone.value = phone.value.replace(\"0\", \"234\");\r\n    }\r\n    return phone;\r\n  };\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${apiUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      if (e.target.value !== \"\" && e.target.value >= 60) {\r\n        toggle();\r\n      }\r\n      if (e.target.value <= 1) {\r\n        setDisabledAgeBaseOnAge(true);\r\n      } else {\r\n        setDisabledAgeBaseOnAge(false);\r\n      }\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n\r\n      basicInfo.personDto.dateOfBirth = moment(dobNew).format(\"YYYY-MM-DD\");\r\n\r\n      setInfo({ ...info, dateOfBirth: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: Math.abs(e.target.value) });\r\n  };\r\n\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: \"\" });\r\n    }\r\n    // setBasicInfo({\r\n    //   ...basicInfo,\r\n    //   personDto: {\r\n    //     ...basicInfo.personDto,\r\n    //     dateOfRegistration: e.target.value,\r\n    //   },\r\n    // });\r\n\r\n    // setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n    if (basicInfo.age !== \"\" && basicInfo.age >= 60) {\r\n      toggle();\r\n    }\r\n  };\r\n\r\n  //Get States from selected country\r\n  const getStates = () => {\r\n    const getCountryId = info?.countryId;\r\n    setStateByCountryId(1);\r\n    setInfo({ ...info, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId(id) {\r\n    axios\r\n      .get(`${apiUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setStates(response.data.sort());\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e?.target?.value;\r\n    // setBasicInfo({ ...basicInfo, stateId: e?.target?.value });\r\n    axios\r\n      .get(`${apiUrl}organisation-units/parent-organisation-units/${stateId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setProvinces(response.data.sort());\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const postDataWithToken = async (data, key) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}${key}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      // Handle the response if needed\r\n      console.log(\"Post successful:\", response.data);\r\n      toast.success(\"Enrolment submitted successfully\");\r\n\r\n      setCookie(\r\n        \"enrollmentIds\",\r\n        {\r\n          enrollmentId: response.data?.enrollmentId,\r\n          enrollmentUuid: response.data?.enrollmentUuid,\r\n        },\r\n        1\r\n      );\r\n      setStep(1);\r\n      return response.data;\r\n    } catch (error) {\r\n      // Handle any errors that occurred during the request\r\n      toast.error(\"Enrolment failed\");\r\n      console.error(\"Error posting data:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    const restructuredEnrolmentPayload = {\r\n      bmi: values.weight / values.height,\r\n      breastfeeding: values.breastfeeding,\r\n      coreEntryPoint: values.coreEntryPoint,\r\n      height: values.height,\r\n      hepatitisB: values.hepatitisB,\r\n      historyOfUsingAbusedSubstance: values.historyOfUsingAbusedSubstance,\r\n\r\n      personDto: {\r\n        active: true,\r\n        address: [\r\n          {\r\n            countryId: values.countryId,\r\n            stateId: values.stateId,\r\n          },\r\n        ],\r\n        dateOfBirth: values.dateOfBirth,\r\n        dateOfRegistration: values.dateOfRegistration,\r\n        educationId: values.educationId,\r\n        employmentStatusId: values.employmentStatusId,\r\n        firstName: values.firstName,\r\n        genderId: values.sexId,\r\n        identifier: [\r\n          {\r\n            assignerId: 0,\r\n            type: \"string\",\r\n            value: \"string\",\r\n          },\r\n        ],\r\n        isDateOfBirthEstimated:\r\n          values.isDateOfBirthEstimated === \"true\" ? true : false,\r\n        maritalStatusId: values.maritalStatusId,\r\n        ninNumber: values.ninNumber,\r\n        organizationId: 0,\r\n        otherName: values.otherName,\r\n        sexId: values.sexId,\r\n        surname: values.surname,\r\n      },\r\n      pregnancy: values.pregnancy,\r\n      screening: {\r\n        dateOfFirstHepatitisBPositiveScreening:\r\n          values.dateOfFirstHepatitisBPositiveScreening,\r\n        hepatitisC: values.hepatitisC,\r\n      },\r\n      weight: values.weight,\r\n    };\r\n\r\n    setCookie(\"hepatitis1\", values, 1);\r\n    setCookie(\"heaptitis1PayloadValue\", restructuredEnrolmentPayload, 1);\r\n    postDataWithToken(restructuredEnrolmentPayload, \"hepatitis/enrollment\");\r\n    // setStep(1);\r\n  };\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm1ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis1\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const calculateBMI = () => {\r\n    let mass = basicInfo.weight;\r\n    let heightSquare = basicInfo.height * basicInfo.height;\r\n\r\n    setBasicInfo({ ...basicInfo, bmi: mass / heightSquare });\r\n\r\n    console.log(mass / heightSquare);\r\n\r\n    return mass / heightSquare;\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          isDateOfBirthEstimated: false,\r\n        },\r\n      });\r\n    } else if (e.target.value == \"Estimated\") {\r\n      setAgeDisabled(false);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          isDateOfBirthEstimated: true,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // to capture the error\r\n  let temp = { ...errors };\r\n  const validate = () => {\r\n    if (userStatus === \"new\") {\r\n      //date of registration\r\n      temp.dateOfRegistration = info.dateOfRegistration\r\n        ? \"\"\r\n        : \"Date of Registration is required.\";\r\n\r\n      //hospital number\r\n      temp.hospitalNumber = info.value ? \"\" : \"Hospital Id is required\";\r\n\r\n      //Names\r\n\r\n      temp.surname = basicInfo.personDto.surname ? \"\" : \"Surname is required\";\r\n      temp.firstName = basicInfo.personDto.firstName\r\n        ? \"\"\r\n        : \"First name is required\";\r\n\r\n      //phone number\r\n      temp.phone = basicInfo.phone ? \"\" : \"Phone Number  is required.\";\r\n\r\n      //state and district\r\n\r\n      temp.stateId = info.stateId ? \"\" : \"State is required.\";\r\n      temp.district = info.district ? \"\" : \"Province/LGA is required.\";\r\n\r\n      //date of birth\r\n      temp.dateOfBirth = info.dateOfBirth ? \"\" : \"Date of Birth is required.\";\r\n\r\n      // Marital Status\r\n\r\n      temp.maritalStatusId = basicInfo.personDto.maritalStatusId\r\n        ? \"\"\r\n        : \"Marital Status is required\";\r\n\r\n      // Education\r\n      temp.educationId = info.educationId ? \"\" : \"Education is required\";\r\n\r\n      //Relationship\r\n      // temp.relationship = basicInfo.relationship\r\n      //   ? \"\"\r\n      //   : \"Relationship is required\";\r\n\r\n      //sex\r\n      temp.genderId = basicInfo.personDto.genderId ? \"\" : \"sex is required\";\r\n    }\r\n\r\n    temp.careEntryPoint = basicInfo.careEntryPoint\r\n      ? \"\"\r\n      : \"careEntryPoint is required\";\r\n    temp.pregnancy = basicInfo.pregnancy ? \"\" : \"pregnancy status is required\";\r\n    temp.weight = basicInfo.weight ? \"\" : \"Weight is required\";\r\n    temp.height = basicInfo.height ? \"\" : \"Height is required\";\r\n    temp.hepatitisB = basicInfo.hepatitisB ? \"\" : \"HepatitisB is required\";\r\n    temp.breastfeeding = basicInfo.breastfeeding\r\n      ? \"\"\r\n      : \"Breastfeeding status is required\";\r\n    temp.dateOfFirstHepatitisBPositiveScreening = basicInfo.screening\r\n      .dateOfFirstHepatitisBPositiveScreening\r\n      ? \"\"\r\n      : \"Date of first HepatitisB positive screening is required\";\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setBasicInfo({ ...basicInfo, [inputName]: e });\r\n  };\r\n\r\n  // handle input changes\r\n  const handleInputChangeBasic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    //manupulate inpute fields base on gender/sex\r\n    // if (e.target.name === \"sexId\" && e.target.value === \"377\") {\r\n    //   setfemaleStatus(true);\r\n    // }\r\n    if (e.target.name === \"firstName\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: name,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"genderId\") {\r\n      console.log(e.target.name);\r\n\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: e.target.value,\r\n          sexId: e.target.value,\r\n        },\r\n      });\r\n      // setBasicInfo({\r\n      //   ...basicInfo,\r\n      //   personDto: {\r\n      //     ...basicInfo.personDto,\r\n      //\r\n      //   },\r\n      // });\r\n    } else if (e.target.name === \"surname\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: name,\r\n        },\r\n      });\r\n    } else if (\r\n      e.target.name === \"dateOfFirstHepatitisBPositiveScreening\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        screening: {\r\n          ...basicInfo.screening,\r\n          dateOfFirstHepatitisBPositiveScreening: e.target.value,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"otherName\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: name,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"stateId\" && e.target.value !== \"\") {\r\n      getProvinces(e);\r\n    } else if (e.target.name === \"hepatitisC\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        screening: {\r\n          ...basicInfo.screening,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"maritalStatusId\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      });\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleInputChangesForInfo = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (e.target.name === \"hospitalNumber\") {\r\n      setInfo({ ...info, value: e.target.value });\r\n    } else {\r\n      setInfo({ ...info, [e.target.name]: e.target.value });\r\n    }\r\n    //manupulate inpute fields base on gender/sex\r\n    if (e.target.name === \"hospitalNumber\") {\r\n      if (e.target.value !== \"\") {\r\n        async function getHosiptalNumber() {\r\n          const hosiptalNumber = e.target.value;\r\n          const response = await axios.post(\r\n            `${apiUrl}patient/exist/hospital-number`,\r\n            hosiptalNumber,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"text/plain\",\r\n              },\r\n            }\r\n          );\r\n          if (response.data !== true) {\r\n            setHospitalNumStatus(false);\r\n            errors.hospitalNumber = \"\";\r\n          } else {\r\n            errors.hospitalNumber = \"\";\r\n            toast.error(\"Error! Hosiptal Number already exist\");\r\n            setHospitalNumStatus(true);\r\n          }\r\n        }\r\n        getHosiptalNumber();\r\n      }\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: e.target.value,\r\n            },\r\n          ],\r\n        },\r\n      });\r\n\r\n      getProvinces(e);\r\n    }\r\n    if (e.target.name === \"stateId\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          address: [\r\n            {\r\n              countryId: info.countryId,\r\n              stateId: e.target.value,\r\n              district: info.district,\r\n            },\r\n          ],\r\n        },\r\n      });\r\n\r\n      getProvinces(e);\r\n    }\r\n    if (e.target.name === \"district\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          address: [\r\n            {\r\n              countryId: info.countryId,\r\n              stateId: info.stateId,\r\n              district: e.target.value,\r\n            },\r\n          ],\r\n        },\r\n      });\r\n\r\n      // getProvinces(e);\r\n    }\r\n    if (e.target.name === \"dateOfBirth\" && e.target.value !== \"\") {\r\n      handleDobChange(e);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          dateOfBirth: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"dateOfRegistration\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          dateOfRegistration: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"educationId\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          educationId: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"employmentStatusId\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          employmentStatusId: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (\r\n      e.target.name === \"dateOfRdistrictegistration\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          address: [\r\n            {\r\n              countryId: info.countryId,\r\n              stateId: info.stateId,\r\n              district: e.target.value,\r\n            },\r\n          ],\r\n        },\r\n      });\r\n    }\r\n\r\n    // }\r\n    // if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n    //   const name = alphabetOnly(e.target.value);\r\n    //   setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    // }\r\n    // if (e.target.name === \"surname\" && e.target.value !== \"\") {\r\n    //   const name = alphabetOnly(e.target.value);\r\n    //   setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    // }\r\n    // if (e.target.name === \"otherName\" && e.target.value !== \"\") {\r\n    //   const name = alphabetOnly(e.target.value);\r\n    //   setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    // }\r\n\r\n    // if (e.target.name === \"stateId\" && e.target.value !== \"\") {\r\n    //   getProvinces(e);\r\n    // }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validating the input\r\n    window.scrollTo(0, 0);\r\n\r\n    if (validate()) {\r\n      if (userStatus === \"new\") {\r\n        postDataWithToken(basicInfo, \"hepatitis/enrollment\");\r\n      } else {\r\n        let userInfo = basicInfo;\r\n        delete userInfo.personDto;\r\n        delete userInfo.address;\r\n\r\n        let newUserInfo = {\r\n          ...userInfo,\r\n          personId: patientObj.id,\r\n        };\r\n        postDataWithToken(newUserInfo, \"hepatitis/enrollment\");\r\n\r\n        console.log(newUserInfo);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n    sexCodeset();\r\n    PregnancyStatus();\r\n    CareEntryPoint();\r\n    SourceReferral();\r\n    loadMaritalStatus();\r\n    loadTopLevelCountry();\r\n    loadRelationships();\r\n    loadOrganisationUnitsByParentId();\r\n    EnrollmentSetting();\r\n    loadEducation();\r\n    getProvinces();\r\n    setStateByCountryId();\r\n    loadOccupation();\r\n    getStates();\r\n    GetCountry();\r\n    // getHepatitisPoint();\r\n  }, []);\r\n  // calculate bmi when weight and height changes\r\n  useEffect(() => {\r\n    if (basicInfo.weight && basicInfo.height) {\r\n      calculateBMI();\r\n    }\r\n  }, [basicInfo.weight, basicInfo.height, info.stateId]); // Runs whenever 'data' changes\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n            {userStatus === \"new\" && (\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Demography\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of registration\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            value={info.dateOfRegistration}\r\n                            onChange={handleInputChangesForInfo}\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.dateOfRegistration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            Hospital Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={info.value}\r\n                            onChange={handleInputChangesForInfo}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hospitalNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {\"Hospital number already exist\"}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {hospitalNumStatus2 === true ? (\r\n                          <span className={classes.success}>\r\n                            {\"Hospital number is OK.\"}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"surname\">\r\n                            Surname <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"surname\"\r\n                            id=\"surname\"\r\n                            value={basicInfo.personDto.surname}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.surname !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.surname}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">\r\n                            Firstname <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.personDto.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.firstName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"otherName\">Other name </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"otherName\"\r\n                            id=\"otherName\"\r\n                            value={basicInfo.personDto.otherName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.otherName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Phone Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <PhoneInput\r\n                            containerStyle={{\r\n                              width: \"100%\",\r\n                              border: \"1px solid #014D88\",\r\n                            }}\r\n                            inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                            country={\"ng\"}\r\n                            placeholder=\"(234)7099999999\"\r\n                            maxLength={5}\r\n                            name=\"phoneNumber\"\r\n                            id=\"phoneNumber\"\r\n                            masks={{\r\n                              ng: \"...-...-....\",\r\n                              at: \"(....) ...-....\",\r\n                            }}\r\n                            value={basicInfo.phoneNumber}\r\n                            onChange={(e) => {\r\n                              setErrors({ ...errors, phone: \"\" });\r\n                              checkPhoneNumberBasic(e, \"phone\");\r\n                            }}\r\n                            //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                          />\r\n                          {errors.phone !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.phone}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      {/* <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"residentialAddress\">\r\n                            Residential Address{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"residentialAddress\"\r\n                            id=\"residentialAddress\"\r\n                            value={basicInfo.residentialAddress}\r\n                            onChange={handleInputChangeBasic}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.residentialAddress !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.residentialAddress}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div> */}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"countryId\">\r\n                            Country <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            // type=\"text\"\r\n                            name=\"countryId\"\r\n                            id=\"countryId\"\r\n                            value={info.countryId}\r\n                            onChange={handleInputChangesForInfo}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            disabled\r\n                          >\r\n                            {countries.map((item, index) => (\r\n                              <option value={Number(item.id)} key={index}>\r\n                                {item.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.countryId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.countryId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"stateId\">\r\n                            State <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"stateId\"\r\n                            id=\"stateId\"\r\n                            value={info.stateId}\r\n                            onChange={handleInputChangesForInfo}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {states.map((item, index) => (\r\n                              <option value={Number(item.id)} key={index}>\r\n                                {item.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.stateId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.stateId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Province/District/LGA{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"district\"\r\n                            id=\"district\"\r\n                            value={info.district}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            onChange={handleInputChangesForInfo}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {provinces.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.district !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.district}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"landmark\">Landmark </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"landmark\"\r\n                            id=\"landmark\"\r\n                            value={basicInfo.landmark}\r\n                            onChange={handleInputChangeBasic}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {/* {formik.errors.landmark !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.landmark}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      {/* new date of registration with actual/estimated date  */}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Date Of Birth</Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      {/* end of new date of reg with actual/estimated  date */}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfBirth\">\r\n                            Date of birth\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfBirth\"\r\n                            id=\"dateOfBirth\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            value={info.dateOfBirth}\r\n                            onChange={handleInputChangesForInfo}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.dateOfBirth !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfBirth}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            className=\"form-control\"\r\n                            id=\"age\"\r\n                            min=\"10\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                        {/* <p>\r\n                        <b style={{ color: \"red\" }}>\r\n                          {basicInfo.age !== \"\" && basicInfo.age < 10\r\n                            ? \"The minimum age is 10\"\r\n                            : \" \"}{\" \"}\r\n                        </b>\r\n                      </p> */}\r\n                      </div>\r\n\r\n                      {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"isDateOfBirthEstimated\">\r\n                          Is date Of estimated\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          // type=\"date\"\r\n                          name=\"isDateOfBirthEstimated\"\r\n                          id=\"isDateOfBirthEstimated\"\r\n                          value={basicInfo.isDateOfBirthEstimated}\r\n                          onChange={handleInputChangeBasic}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value={true}>Yes</option>\r\n                          <option value={false}>No</option>\r\n                        </select>\r\n                        {formik.errors.isDateOfBirthEstimated !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.isDateOfBirthEstimated}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div> */}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"employmentStatusId\">Occupation</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            value={info.employmentStatusId}\r\n                            onChange={handleInputChangesForInfo}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {occupationOptions.map((item, index) => (\r\n                              <option\r\n                                value={Number(item.id)}\r\n                                key={Number(item.id)}\r\n                              >\r\n                                {item.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {/* {errors.district !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"maritalStatusId\">\r\n                            Marital status\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            value={basicInfo.personDto.maritalStatusId}\r\n                            onChange={handleInputChangeBasic}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {maritalStatusOptions.map((item, index) => (\r\n                              <option value={Number(item.id)}>\r\n                                {item.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.maritalStatusId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.maritalStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"educationId\">\r\n                            Education <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            // type=\"text\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            value={info.educationId}\r\n                            onChange={handleInputChangesForInfo}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option>Select</option>\r\n                            {educationOptions.map((item, index) => (\r\n                              <option value={Number(item.id)}>\r\n                                {item.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      {/* <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"relationship\">\r\n                            Relationship{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"relationship\"\r\n                            id=\"relationship\"\r\n                            value={basicInfo.relationship}\r\n                            onChange={handleInputChangeBasic}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option>Select</option>\r\n                            {relationshipOptions.map((item, index) => (\r\n                              <option value={Number(item.id)}>\r\n                                {item.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.relationship !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.relationship}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div> */}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"sexId\">\r\n                            Sex <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"genderId\"\r\n                            id=\"genderId\"\r\n                            value={basicInfo.personDto.genderId}\r\n                            onChange={handleInputChangeBasic}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option>Select</option>\r\n                            {genders.map((item, index) => (\r\n                              <option value={Number(item.id)}>\r\n                                {item.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.genderId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.genderId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"ninNumber\">NIN number </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"ninNumber\"\r\n                            id=\"ninNumber\"\r\n                            value={basicInfo.ninNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {/* {formik.errors.ninNumber !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ninNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Enrolment\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"coreEntryPoint\">\r\n                        Care entry point\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"careEntryPoint\"\r\n                        id=\"careEntryPoint\"\r\n                        value={basicInfo.careEntryPoint}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        {carePoints.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.careEntryPoint !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.careEntryPoint}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"sex\">\r\n                          Sex <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"sex\"\r\n                          id=\"sex\"\r\n                          value={basicInfo.sex}\r\n                          onChange={handleInputChangeBasic}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"male\">Male</option>\r\n                          <option value=\"female\">Female</option>\r\n                        </select>\r\n                        {formik.errors.sex !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.sex}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div> */}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"pregnancy\">\r\n                        Pregnancy <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"pregnancy\"\r\n                        id=\"pregnancy\"\r\n                        value={basicInfo.pregnancy}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        <option value=\"NO\">No </option>\r\n                        <option value=\"YES\">Yes </option>\r\n                        {/* {pregnancyStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))} */}\r\n                      </select>\r\n                      {errors.pregnancy !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.pregnancy}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"weight\">\r\n                        Weight (in KG) <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        id=\"weight\"\r\n                        value={basicInfo.weight}\r\n                        onChange={handleInputChangeBasic}\r\n                        onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {errors.weight !== \"\" ? (\r\n                        <span className={classes.error}>{errors.weight}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"height\">\r\n                        Height (In M) <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        name=\"height\"\r\n                        id=\"height\"\r\n                        value={basicInfo.height}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {errors.height !== \"\" ? (\r\n                        <span className={classes.error}>{errors.height}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"bmi\">BMI </Label>\r\n\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        disabled\r\n                        name=\"bmi\"\r\n                        id=\"bmi\"\r\n                        value={basicInfo.bmi}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.bmi !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.bmi}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"hepatitisB\">\r\n                        Hepatitis B (HBsAg){\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"hepatitisB\"\r\n                        id=\"hepatitisB\"\r\n                        value={basicInfo.hepatitisB}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        {hepatitisStatus.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {/* <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"hepatitisB\"\r\n                        id=\"hepatitisB\"\r\n                        onChange={handleInputChangeBasic}\r\n                        onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      /> */}\r\n                      {errors.hepatitisB !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.hepatitisB}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"breastfeeding\">\r\n                        Breastfeeding <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"breastfeeding\"\r\n                        id=\"breastfeeding\"\r\n                        value={basicInfo.breastfeeding}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {errors.breastfeeding !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.breastfeeding}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"historyOfUsingAbusedSubstance\">\r\n                        History of using abused substance{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"historyOfUsingAbusedSubstance\"\r\n                        id=\"historyOfUsingAbusedSubstance\"\r\n                        value={basicInfo.historyOfUsingAbusedSubstance}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.historyOfUsingAbusedSubstance !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.historyOfUsingAbusedSubstance}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Screening\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"dateOfFirstHepatitisBPositiveScreening\">\r\n                        Date of first Hep. B positive screening{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        name=\"dateOfFirstHepatitisBPositiveScreening\"\r\n                        id=\"dateOfFirstHepatitisBPositiveScreening\"\r\n                        value={\r\n                          basicInfo.screening\r\n                            .dateOfFirstHepatitisBPositiveScreening\r\n                        }\r\n                        onChange={handleInputChangeBasic}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {errors.dateOfFirstHepatitisBPositiveScreening !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateOfFirstHepatitisBPositiveScreening}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"hepatitisC\">Hepatitis C (HCVAb) </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"hepatitisC\"\r\n                        id=\"hepatitisC\"\r\n                        value={basicInfo.screening.hepatitisC}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        {hepatitisStatus.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n\r\n                      {/* <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"hepatitisC\"\r\n                        id=\"hepatitisC\"\r\n                        value={basicInfo.hepatitisC}\r\n                        onChange={handleInputChangeBasic}\r\n                        onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      /> */}\r\n                      {/* {errors.pregnancy !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.pregnancy}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {false ? <Spinner /> : \"\"}\r\n\r\n            <br />\r\n            <div className=\"d-flex justify-content-end\">\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSubmit}\r\n                className={classes.button}\r\n                endIcon={<ArrowForward />}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n              </MatButton>\r\n            </div>\r\n            {/* </Form> */}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm1;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, FormGroup, Input } from \"reactstrap\";\r\n\r\nconst SummaryTypeSelect = ({\r\n  setFormValues,\r\n  formValues: { select1Value, select2Value, select3Value },\r\n}) => {\r\n  return (\r\n    <div style={{ maxWidth: \"400px\" }}>\r\n      <Row className=\"d-flex justify-content-between\">\r\n        <Col>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"summary-type\"\r\n              id=\"summary-type\"\r\n              value={select1Value}\r\n              onChange={(event) => setFormValues(prevState => {\r\n                return { ...prevState, select1Value: event.target.value, select2Value: \"\" }\r\n              })}\r\n            >\r\n              <option value=\"\">Summary type</option>\r\n              <option value=\"Hepatitis B\">Hepatitis B</option>\r\n              <option value=\"Hepatitis C\">Hepatitis C</option>\r\n              <option value=\"CoInfection\">CoInfection</option>\r\n            </Input>\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        {select1Value !== \"\" && (\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select2\"\r\n                id=\"select2\"\r\n                value={select2Value}\r\n                onChange={(event) => setFormValues(prevState => {\r\n                  return { ...prevState, select2Value: event.target.value, select3Value: \"\" }\r\n                })}\r\n                disabled={select1Value === \"\"}\r\n              >\r\n                <option value=\"\">select type for {select1Value}</option>\r\n\r\n                {select1Value === \"Hepatitis B\" && (\r\n                  <>\r\n                    <option value=\"Diagnosis\">Diagnosis</option>\r\n                    <option value=\"Complications\">Complications</option>\r\n                    <option value=\"Treatment\">Treatment</option>\r\n                    <option value=\"Monitoring\">Monitoring</option>\r\n                    <option value=\"Mortality\">Mortality</option>\r\n                  </>\r\n                )}\r\n                {select1Value === \"Hepatitis C\" && (\r\n                  <>\r\n                    <option value=\"Screening/Diagnosis\">\r\n                      Screening/Diagnosis\r\n                    </option>\r\n                    <option value=\"HCV Complications\">HCV Complications</option>\r\n                    <option value=\"HCV Treatment\">HCV Treatment</option>\r\n                    <option value=\"HCV Treatment Effectiveness\">\r\n                      HCV Treatment Effectiveness\r\n                    </option>\r\n                    <option value=\"HCV Re-treatment\">HCV Re-treatment</option>\r\n                    <option value=\"HCV Related Mortality\">\r\n                      HCV Related Mortality\r\n                    </option>\r\n                  </>\r\n                )}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        )}\r\n\r\n\r\n        {select2Value !== \"\" && select1Value !== \"\" && (\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select3\"\r\n                id=\"select3\"\r\n                value={select3Value}\r\n                onChange={(event) => setFormValues(prevState => {\r\n                  return { ...prevState, select3Value: event.target.value }\r\n                })}\r\n                disabled={select2Value === \"\"}\r\n              >\r\n                <option value=\"\">\r\n                  Select type for {select1Value} {select2Value}\r\n                </option>\r\n                {select2Value === \"Diagnosis\" && (\r\n                  <>\r\n                    <option value=\"Reactive\">Reactive</option>\r\n                    <option value=\"Non Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Complications\" && (\r\n                  <>\r\n                    <option value=\"Fibrosis\">Fibrosis</option>\r\n                    <option value=\"Cirrhosis\">Cirrhosis</option>\r\n                    <option value=\"Hepatocellular Carcinoma\">\r\n                      Hepatocellular Carcinoma\r\n                    </option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Monitoring\" && (\r\n                  <>\r\n                    <option value=\"Monitoring Reactive\">Reactive</option>\r\n                    <option value=\"Monitoring Non Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Mortality\" && (\r\n                  <>\r\n                    <option value=\"Mortality Reactive\">Reactive</option>\r\n                    <option value=\"Mortality Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Treatment\" && (\r\n                  <>\r\n                    <option value=\"HBV DNA <2000 IU/ml\">\r\n                      HBV DNA {\"<\"}2000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBV DNA >=2000 IU/ml\">\r\n                      HBV DNA {\">=\"}2000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBV DNA >=200000 IU/ml\">\r\n                      HBV DNA {\">=\"}200,000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBegAg +ve\">HBegAg +ve</option>\r\n                  </>\r\n                )}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SummaryTypeSelect\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useValidateSummaryValuesHook = (onSubmit) => {\r\n  const reactiveFormInitialValues = {\r\n   \"maleNineAndUnder\": \"\",\r\n   \"maleTen2Fourteen\": \"\",\r\n   \"maleFifteenAndAbove\": \"\",\r\n   \"maleTotal\" : \"\",\r\n   \"femaleNineAndUnder\": \"\",\r\n   \"femaleTen2Fourteen\": \"\",\r\n   \"femaleFifteenAndAbove\": \"\",\r\n   \"femaleTotal\" : \"\",\r\n   \"specialPopulationPWID\" : \"\",\r\n   \"specialPopulationPW\" : \"\",\r\n  };\r\n\r\n  const ReactiveFormSchema = yup.object({\r\n    \"maleNineAndUnder\": yup.string(),\r\n    \"maleTen2Fourteen\": yup.string(),\r\n    \"maleFifteenAndAbove\": yup.string(),\r\n    \"maleTotal\" : yup.string(),\r\n    \"femaleNineAndUnder\": yup.string(),\r\n    \"femaleTen2Fourteen\": yup.string(),\r\n    \"femaleFifteenAndAbove\": yup.string(),\r\n    \"femaleTotal\" : yup.string(),\r\n    \"specialPopulationPWID\" : yup.string(),\r\n    \"specialPopulationPW\" : yup.string(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: reactiveFormInitialValues,\r\n    onSubmit,\r\n    validationSchema: ReactiveFormSchema,\r\n  });\r\n   return { formik };;\r\n};","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Reactive = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Reactive\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reactive;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst NonReactive = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Non-Reactive\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NonReactive;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Fibrosis = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Fibrosis\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Fibrosis;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Cirrhosis = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Cirrhosis\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cirrhosis;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HepatocellularCarcinoma = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Hepatocellular Carcinoma\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HepatocellularCarcinoma;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType1 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\"<\"} 2000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType1;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType2 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\">=\"}2000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType2;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType3 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\">=\"}200000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType3;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType4 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBegAg +ve\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType4;\r\n","import React, { useState } from \"react\";\r\nimport SummaryTypeSelect from \"./SummaryTypeSelect/SummaryTypeSelect\";\r\nimport Reactive  from \"../Patient/ViralHepatitisSummaryForms/Reactive\";\r\nimport NonReactive from \"./ViralHepatitisSummaryForms/NonReactive\";\r\nimport Fibrosis from \"./ViralHepatitisSummaryForms/Fibrosis\";\r\nimport Cirrhosis from \"./ViralHepatitisSummaryForms/Cirrhosis\";\r\nimport HepatocellularCarcinoma from \"./ViralHepatitisSummaryForms/HepatocellularCarcinoma\";\r\nimport HbvType1 from \"./ViralHepatitisSummaryForms/HbvType1\";\r\nimport HbvType2 from \"./ViralHepatitisSummaryForms/HbvType2\";\r\nimport HbvType3 from \"./ViralHepatitisSummaryForms/HbvType3\";\r\nimport HbvType4 from \"./ViralHepatitisSummaryForms/HbvType4\";\r\n\r\nconst ViralHepatitisSummaryFormContainer = () => {\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    select1Value: \"\",\r\n    select2Value: \"\",\r\n    select3Value: \"\",\r\n});\r\n\r\nconst formMap = {\r\n    \"Reactive\" : <Reactive/>,\r\n    \"Non Reactive\" : <NonReactive/>,\r\n    \"Fibrosis\" : <Fibrosis/>,\r\n    \"Cirrhosis\" : <Cirrhosis/>,\r\n    \"Hepatocellular Carcinoma\" : <HepatocellularCarcinoma/>,\r\n    \"HBV DNA <2000 IU/ml\" : <HbvType1/>,\r\n    \"HBV DNA >=2000 IU/ml\" : <HbvType2/>,\r\n    \"HBV DNA >=200000 IU/ml\" : <HbvType3/>,\r\n    \"HBegAg +ve\" : <HbvType4/>,\r\n    \"Mortality Reactive\" : <div> Mortality Reactive</div>,\r\n    \"Mortality Reactive\" : <div> Mortality Reactive</div>,\r\n    \"Monitoring Reactive\" : <div>Monitoring Reactive</div>,\r\n    \"Monitoring Non Reactive\" : <div>Monitoring Non Reactive</div>,\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <SummaryTypeSelect formValues={formValues} setFormValues={setFormValues}/>\r\n      </div>\r\n\r\n      <div className=\"my-2\" style={{fontWeight: \"600\"}}>\r\n        <span>{formValues.select1Value && ` ${formValues.select1Value} `}</span>\r\n        <span>{formValues.select2Value && ` | ${formValues.select2Value } `}</span>\r\n        <span style={{color: \"#014d88\"}}>{formValues.select3Value && `| ${formValues.select3Value} `}</span>\r\n      </div>\r\n\r\n      <div>\r\n       {formMap[formValues.select3Value]}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisSummaryFormContainer;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport PatientList from \"./Patient/PatientList\";\r\nimport PatientVaccinatedLIst from \"./Patient/PatientVaccinatedLIst\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nimport HepatitisPatients from \"./Patient/HepatitisPatient\";\r\nimport ViralHepatitis from \"./Patient/ViralHepatitisForms/Form1\";\r\nimport ViralHepatitisSummaryFormContainer from \"./Patient/ViralHepatitisSummaryFormContainer\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState(\"home\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>Viral Hepatitis</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/register-patient\",\r\n          state: {\r\n            existingPatient: \"new\",\r\n          },\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mb-10\"\r\n          startIcon={<FaUserPlus size=\"10\" />}\r\n          style={{ backgroundColor: \"#014d88\" }}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n\r\n                  <Tab eventKey=\"visualization\" title=\"Hepatitis Patients\">\r\n                    <HepatitisPatients />\r\n                  </Tab>\r\n\r\n                  <Tab eventKey=\"vaccinated\" title=\"Summary\">\r\n                    {/* <PatientVaccinatedLIst /> */}\r\n                    <ViralHepatitisSummaryFormContainer />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CaptureBiometric from \"./CaptureBiometric\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj;\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj);\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  const get_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    {`${patientObj.firstName} ${\r\n                      patientObj.lastName\r\n                        ? patientObj.lastName\r\n                        : patientObj.surname\r\n                    }`}\r\n                  </b>\r\n                  <Link to={\"/\"}>\r\n                    <ButtonMui\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-end ms-2 mr-2 mt-2\"\r\n                      //startIcon={<FaUserPlus size=\"10\"/>}\r\n                      startIcon={<TiArrowBack />}\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                        color: \"#fff\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                    </ButtonMui>\r\n                  </Link>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Patient ID :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj.hospitalNumber}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>{patientObj.dateOfBirth}</b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Age : <b style={{ color: \"#0B72AA\" }}>{patientObj.age}</b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Gender :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>{patientObj.gender}</b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj.phone !== null ? patientObj.phone : \"\"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj.address !== null ? patientObj.address : \"\"}{\" \"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navItemText: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n  const classes = useStyles();\r\n  let gender = \"\";\r\n  const patientObjs = props.patientObj ? props.patientObj : {};\r\n  //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n  const [patientObj, setpatientObj] = useState(patientObjs);\r\n  const [genderType, setGenderType] = useState();\r\n  const [diagnosisActivities, setDiagnosisActivities] = useState(true);\r\n  const [treatmentActivities, setTreatmentActivities] = useState(true);\r\n\r\n  useEffect(() => {\r\n    Observation();\r\n\r\n    props.recentActivities.map((each) => {\r\n      if (each.activityName === \"Hepatitis Diagnosis\") {\r\n        setDiagnosisActivities(false);\r\n      }\r\n\r\n      if (each.activityName === \"Hepatitis Treatment\") {\r\n        setTreatmentActivities(false);\r\n      }\r\n    });\r\n  }, [props.patientObj, props.recentActivities]);\r\n  //Get list of RegimenLine\r\n  const Observation = () => {\r\n    axios\r\n      .get(`${baseUrl}observation/person/${props.patientObj.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        const observation = response.data;\r\n        const mental = observation.filter((x) => x.type === \"mental health\");\r\n        const evaluation = observation.filter(\r\n          (x) => x.type === \"initial evaluation\"\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const loadVaccination = (row) => {\r\n    props.setActiveContent({ ...props.activeContent, route: \"diagnosis\" });\r\n  };\r\n  const loadTreatment = (row) => {\r\n    props.setActiveContent({ ...props.activeContent, route: \"treatment\" });\r\n  };\r\n  const loadAddmission = (row) => {\r\n    props.setActiveContent({ ...props.activeContent, route: \"addmission\" });\r\n  };\r\n  const onClickDischarge = (row) => {\r\n    props.setActiveContent({ ...props.activeContent, route: \"discharge\" });\r\n  };\r\n  const onClickHome = (row) => {\r\n    props.setActiveContent({ ...props.activeContent, route: \"recent-history\" });\r\n  };\r\n  const loadPatientHistory = () => {\r\n    //setActiveItem('history')\r\n    props.setActivZContent({\r\n      ...props.activeContent,\r\n      route: \"patient-history\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Menu size=\"large\" color={\"black\"} inverted>\r\n        <Menu.Item onClick={() => onClickHome()}> Home</Menu.Item>\r\n        {diagnosisActivities && (\r\n          <Menu.Item onClick={() => loadVaccination()}>Diagnosis</Menu.Item>\r\n        )}\r\n\r\n        {treatmentActivities && (\r\n          <Menu.Item onClick={() => loadTreatment()}>Treatment</Menu.Item>\r\n        )}\r\n\r\n        {/* <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n// BS\r\nimport { Dropdown } from \"react-bootstrap\";\r\n/// Scroll\r\n//import { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n//import { Alert } from \"react-bootstrap\";\r\nimport { Card, Accordion } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst RecentHistory = (props) => {\r\n  let history = useHistory();\r\n  const [recentActivities, setRecentActivities] = useState([\r\n    {\r\n      activityName: \"Enrolment\",\r\n      path: \"Enrolment\",\r\n      activityDate: props.patientObj.dateOfRegistration,\r\n    },\r\n    {\r\n      activityName: \"Diagnosis\",\r\n      path: \"Diagnosis\",\r\n      activityDate: props.patientObj.dateOfRegistration,\r\n    },\r\n    {\r\n      activityName: \"Treatment\",\r\n      path: \"Treatment\",\r\n      activityDate: props.patientObj.dateOfRegistration,\r\n    },\r\n  ]);\r\n  const [infants, setInfants] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [record, setRecord] = useState(null);\r\n  const toggle = () => setOpen(!open);\r\n  let notToBeUpdated = [\"pmtct_infant_information\"];\r\n  const [summartChart, setSummaryChart] = useState({\r\n    motherVisit: 0,\r\n    childVisit: 1,\r\n    childAlive: 0,\r\n    childDead: 0,\r\n  });\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n\r\n  useEffect(() => {\r\n    setRecentActivities(props.allRecentActivities);\r\n  }, [props.patientObj.id, props.allRecentActivities]);\r\n  ///GET LIST OF Infants\r\n\r\n  const InfantInfo = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}pmtct/anc/get-infant-by-ancno/${props.patientObj.ancNo}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setInfants(response.data);\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  // const RecentActivities = () => {\r\n  //   axios\r\n  //     .get(`${baseUrl}pmtct/anc/activities/${props.patientObj.ancNo}`, {\r\n  //       headers: { Authorization: `Bearer ${token}` },\r\n  //     })\r\n  //     .then((response) => {\r\n  //       setRecentActivities(response.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n\r\n  //     });\r\n  // };\r\n  const SummaryChart = () => {\r\n    axios\r\n      .get(`${baseUrl}pmtct/anc/get-summary-chart/${props.patientObj.ancNo}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSummaryChart(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const ActivityName = (name) => {\r\n    if (name === \"pmtct-enrollment\") {\r\n      return \"PE\";\r\n    } else if (name === \"anc-enrollment\") {\r\n      return \"AE\";\r\n    } else if (name === \"anc-delivery\") {\r\n      return \"AD\";\r\n    } else if (name === \"anc-mother-visit\") {\r\n      return \"MV\";\r\n    } else if (name === \"pmtct_infant_visit\") {\r\n      return \"IV\";\r\n    } else if (name === \"pmtct_infant_information\") {\r\n      return \"II\";\r\n    } else {\r\n      return \"RA\";\r\n    }\r\n  };\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === \"Enrolment\") {\r\n      //props.setActiveContent({...props.activeContent, route:'anc-enrollment', id:row.id, actionType:action})\r\n      history.push({\r\n        pathname: \"/update-patient\",\r\n        state: {\r\n          id: row.recordId,\r\n          patientObj: props.patientObj,\r\n          actionType: action,\r\n          showForm: {\r\n            enrollment: true,\r\n            diagnosis: false,\r\n            treatment: false,\r\n          },\r\n        },\r\n      });\r\n    } else if (row.path === \"Diagnosis\") {\r\n      history.push({\r\n        pathname: \"/update-patient\",\r\n        state: {\r\n          id: row.recordId,\r\n          patientObj: props.patientObj,\r\n          actionType: action,\r\n          showForm: {\r\n            enrollment: false,\r\n            diagnosis: true,\r\n            treatment: false,\r\n          },\r\n        },\r\n      });\r\n    } else if (row.path === \"Treatment\") {\r\n      history.push({\r\n        pathname: \"/update-patient\",\r\n        state: {\r\n          id: row.recordId,\r\n          patientObj: props.patientObj,\r\n          actionType: action,\r\n          showForm: {\r\n            enrollment: false,\r\n            diagnosis: false,\r\n            treatment: true,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    if (row.path === \"anc-enrollment\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/anc/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          // RecentActivities();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"pmtct-enrollment\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/pmtct/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"anc-delivery\") {\r\n      setSaving(false);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/delivery/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          // RecentActivities();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"anc-mother-visit\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/delivery/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"pmtct_infant_visit\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/infantvisit/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"pmtct_infant_information\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/infantinfo/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n  const index = 0;\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\"> Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                  className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                  defaultActiveKey=\"0\"\r\n                >\r\n                  <>\r\n                    {recentActivities &&\r\n                      recentActivities.map((data, i) => (\r\n                        <div className=\"accordion-item\" key={i}>\r\n                          <Accordion.Toggle\r\n                            as={Card.Text}\r\n                            eventKey={`${i}`}\r\n                            className={`accordion-header ${\r\n                              activeAccordionHeaderShadow === 1\r\n                                ? \"\"\r\n                                : \"collapsed\"\r\n                            } accordion-header-info`}\r\n                            onClick={() =>\r\n                              setActiveAccordionHeaderShadow(\r\n                                activeAccordionHeaderShadow === 1 ? -1 : i\r\n                              )\r\n                            }\r\n                          >\r\n                            <span className=\"accordion-header-icon\"></span>\r\n                            <span className=\"accordion-header-text\">\r\n                              Visit Date :{\" \"}\r\n                              <span className=\"\">{data.activityName}</span>{\" \"}\r\n                            </span>\r\n                            <span className=\"accordion-header-indicator\"></span>\r\n                          </Accordion.Toggle>\r\n                          <Accordion.Collapse\r\n                            eventKey={`${i}`}\r\n                            className=\"accordion__body\"\r\n                          >\r\n                            <div className=\"accordion-body-text\">\r\n                              <ul className=\"timeline\">\r\n                                <li>\r\n                                  <div className=\"timeline-panel\">\r\n                                    <div\r\n                                      className={\r\n                                        i % 2 == 0\r\n                                          ? \"media me-2 media-info\"\r\n                                          : \"media me-2 media-success\"\r\n                                      }\r\n                                    >\r\n                                      {ActivityName(data.path)}\r\n                                    </div>\r\n                                    <div className=\"media-body\">\r\n                                      <h5 className=\"mb-1\">\r\n                                        {data.activityName}\r\n                                      </h5>\r\n                                      <small className=\"d-block\">\r\n                                        {data.activityDate}\r\n                                      </small>\r\n                                    </div>\r\n                                    {!notToBeUpdated.includes(data.path) ? (\r\n                                      <Dropdown className=\"dropdown\">\r\n                                        <Dropdown.Toggle\r\n                                          variant=\" light\"\r\n                                          className=\"i-false p-0 btn-info sharp\"\r\n                                        >\r\n                                          <svg\r\n                                            width=\"18px\"\r\n                                            height=\"18px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            version=\"1.1\"\r\n                                          >\r\n                                            <g\r\n                                              stroke=\"none\"\r\n                                              strokeWidth=\"1\"\r\n                                              fill=\"none\"\r\n                                              fillRule=\"evenodd\"\r\n                                            >\r\n                                              <rect\r\n                                                x=\"0\"\r\n                                                y=\"0\"\r\n                                                width=\"24\"\r\n                                                height=\"24\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"5\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"12\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"19\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                            </g>\r\n                                          </svg>\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(data, \"view\")\r\n                                            }\r\n                                          >\r\n                                            View\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(data, \"update\")\r\n                                            }\r\n                                          >\r\n                                            Update\r\n                                          </Dropdown.Item>\r\n                                          {/* <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadModal(data, \"delete\")\r\n                                            }\r\n                                          >\r\n                                            Delete\r\n                                          </Dropdown.Item> */}\r\n                                        </Dropdown.Menu>\r\n                                      </Dropdown>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </div>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </Accordion.Collapse>\r\n                        </div>\r\n                      ))}\r\n                  </>\r\n                </Accordion>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* {props.patientObj.dynamicHivStatus === \"Positive\" ||\r\n        props.patientObj.hivStatus === \"Positive\" ? (\r\n          <>\r\n            <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header border-0 pb-0\">\r\n                  <h4 className=\"card-title\">Patient Chart</h4>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"col-xl-12 col-xxl-12 col-sm-12\">\r\n                      <div className=\"card overflow-hidden\">\r\n                        <div className=\"social-graph-wrapper widget-facebook\">\r\n                          <span className=\"s-icon\">\r\n                            <span style={{ fontSize: \"16px\" }}>\r\n                              Total Clinic Visit\r\n                            </span>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6 border-right\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              <h4 className=\"m-1\">\r\n                                <span className=\"counter\">\r\n                                  <b>{summartChart.motherVisit}</b>\r\n                                </span>\r\n                              </h4>\r\n                              <p className=\"m-0\">\r\n                                <b>Mother Visit</b>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          {infants.length > 0 && (\r\n                            <div className=\"col-6\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summartChart.childVisit}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                <p className=\"m-0\">\r\n                                  <b>Infant's Visit</b>\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-xl-12 col-xxl-12 col-sm-12\">\r\n                      <div className=\"card overflow-hidden\">\r\n                        <div className=\"social-graph-wrapper widget-linkedin\">\r\n                          <span className=\"s-icon\">\r\n                            <span style={{ fontSize: \"16px\" }}>\r\n                              No. of Infants{\" \"}\r\n                              {infants.length > 0 ? \" : \" + infants.length : \"\"}\r\n                            </span>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          {infants.length > 0 ? (\r\n                            <>\r\n                              <div className=\"col-6 border-right\">\r\n                                <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summartChart.childAlive}\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Alive </b>\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-6\">\r\n                                <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summartChart.childDead}\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Dead </b>\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                            </>\r\n                          ) : (\r\n                            <p>No Record</p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <h3>Current Infant's Details</h3>\r\n                      {infants.length > 0 ? (\r\n                        <PerfectScrollbar\r\n                          style={{ height: \"370px\" }}\r\n                          id=\"DZ_W_TimeLine1\"\r\n                          className=\"widget-timeline dz-scroll style-1 height370 ps ps--active-y\"\r\n                        >\r\n                          <ul className=\"timeline\">\r\n                            {infants.map((obj) => (\r\n                              <li key={index}>\r\n                                <div\r\n                                  className={\r\n                                    index % 2 == 0\r\n                                      ? \"timeline-badge info\"\r\n                                      : \"timeline-badge success\"\r\n                                  }\r\n                                ></div>\r\n                                <span\r\n                                  className=\"timeline-panel text-muted\"\r\n                                  //onClick={()=>redirectLink()}\r\n                                  //to=\"\"\r\n                                >\r\n                                  <h6 className=\"mb-0\">\r\n                                    Infant Given Name\r\n                                    <br />\r\n                                    {obj.firstName}\r\n                                  </h6>\r\n                                  <strong className=\"text-teal\">\r\n                                    Infant DOB\r\n                                    <br />\r\n                                    {obj.dateOfDelivery}\r\n                                  </strong>\r\n                                  <br />\r\n                                  <strong className=\"text-warning\">\r\n                                    Gender\r\n                                    <br />\r\n                                    {obj.sex}\r\n                                  </strong>\r\n                                </span>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </PerfectScrollbar>\r\n                      ) : (\r\n                        <p>No Record</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n              <div className=\"card-body\">\r\n                <b>Patient has no HTS record. Please refer for testing...</b>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )} */}\r\n\r\n        <Modal\r\n          show={open}\r\n          toggle={toggle}\r\n          className=\"fade\"\r\n          size=\"md\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Notification!\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <h4>\r\n              Are you Sure you want to delete{\" \"}\r\n              <b>{record && record.activityName}</b>\r\n            </h4>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={() => LoadDeletePage(record)}\r\n              style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n              disabled={saving}\r\n            >\r\n              {saving === false ? \"Yes\" : \"Deleting...\"}\r\n            </Button>\r\n            <Button\r\n              onClick={toggle}\r\n              style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n              disabled={saving}\r\n            >\r\n              No\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    console.log(props.records)\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Dosage Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from \"semantic-ui-react\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Vaccination from \"./../Vaccination/AddViccination\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n  const [vacinationList, setVaccinationtList] = useState([]);\r\n  const patientObj = props && props.patientObj ? props.patientObj : [];\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [openDeleteModal, setOpenDeleteModal] = React.useState(false);\r\n  const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n  const [record, setRecord] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients Vaccinations\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setVaccinationtList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const loadVaccinationModal = (row) => {\r\n    setModal(!modal);\r\n  };\r\n  const LoadEditModal = (row) => {\r\n    setRecord(row);\r\n    toggle();\r\n  };\r\n  const LoadDeleteModal = (row) => {\r\n    toggleDeleteModal();\r\n    setRecord(row);\r\n  };\r\n  console.log(record);\r\n  const LoadDeletePage = () => {\r\n    setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}covid/vaccinations/${record.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        patients();\r\n        toggleDeleteModal();\r\n        setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end ms-2\"\r\n            startIcon={<FaUserPlus size=\"10\" />}\r\n            onClick={() => loadVaccinationModal()}\r\n            style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>\r\n              New Vaccination{\" \"}\r\n            </span>\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          <MaterialTable\r\n            icons={tableIcons}\r\n            title=\"Patient Vaccination History \"\r\n            columns={[\r\n              { title: \"Vaccine\", field: \"vaccine\", filtering: false },\r\n              {\r\n                title: \"Vaccine Date\",\r\n                field: \"vaccineDate\",\r\n              },\r\n\r\n              { title: \"Dose Number\", field: \"doseNumber\", filtering: false },\r\n              { title: \"Location\", field: \"location\", filtering: false },\r\n              { title: \"Batch Number\", field: \"batchNumber\", filtering: false },\r\n              {\r\n                title: \"Adverse Effect \",\r\n                field: \"adverseEffect\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"Vaccination Facility\",\r\n                field: \"vaccinationFacility\",\r\n                filtering: false,\r\n              },\r\n              { title: \"Actions\", field: \"actions\", filtering: false },\r\n            ]}\r\n            //   data={ vacinationList.map((row) => ({\r\n            //         vaccine: row.vaccineName,\r\n            //         vaccineDate: row.vaccineDate,\r\n            //         batchNumber: row.batchNumber,\r\n            //         doseNumber: row.doseNumber,\r\n            //         location: row.location,\r\n            //         vaccinationFacility: row.vaccinationFacility,\r\n            //         adverseEffect: row.adverseEffect,\r\n            //         actions:\r\n\r\n            //         <div>\r\n            //             <Menu.Menu position='right'  >\r\n            //             <Menu.Item >\r\n            //                 <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n            //                 <Dropdown item text='Action'>\r\n\r\n            //                 <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n            //                     <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n            //                     <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n            //                 </Dropdown.Menu>\r\n            //             </Dropdown>\r\n            //                 </Button>\r\n            //             </Menu.Item>\r\n            //             </Menu.Menu>\r\n            //         </div>\r\n\r\n            //       }))}\r\n\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n              },\r\n              searchFieldStyle: {\r\n                width: \"200%\",\r\n                margingLeft: \"250px\",\r\n              },\r\n              filtering: false,\r\n              exportButton: false,\r\n              searchFieldAlignment: \"left\",\r\n              pageSizeOptions: [10, 20, 100],\r\n              pageSize: 10,\r\n              debounceInterval: 400,\r\n            }}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <Vaccination\r\n        toggle={toggle}\r\n        showModal={modal}\r\n        patientObj={props.patientObj}\r\n        loadPatients={patients}\r\n        records={record}\r\n      />\r\n      <Modal\r\n        show={openDeleteModal}\r\n        toggle={toggleDeleteModal}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete -{\" \"}\r\n            <b>{record && record.batchNumber}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? \"Yes\" : \"Deleting...\"}\r\n          </Button>\r\n          <Button\r\n            onClick={toggleDeleteModal}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientVaccinationHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm2ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\n// hcRnaValue\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst DashboardForm2 = () => {\r\n  const [userId, setUserId] = useState(getCookie(\"enrollmentIds\"));\r\n  console.log(getCookie(\"enrollmentIds\"));\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    clinicalParameters: {\r\n      afp: \"\",\r\n      alt: \"\",\r\n      apriScore: \"\",\r\n      ascites: \"\",\r\n      ast: \"\",\r\n      astValue: \"\",\r\n      childPughScore: \"\",\r\n      creatinine: \"\",\r\n      diagnosis_result: \"\",\r\n      directBiliribin: \"\",\r\n      fib4: \"\",\r\n      fibroscan: \"\",\r\n      gradeOfEncephalopathy: \"\",\r\n      liverBiopsyStage: \"\",\r\n      prothrombinTimeNR: \"\",\r\n      pst: \"\",\r\n      severityOfAscites: \"MILD\",\r\n      totalBiliRubin: \"\",\r\n      ultrasoundScan: \"\",\r\n      urea: \"\",\r\n    },\r\n    enrollmentUuid: userId?.enrollmentUuid,\r\n    hepatitisBTest: {\r\n      albumin: \"\",\r\n      antiHDV: \"\",\r\n      comment: \"\",\r\n      ctScan: \"\",\r\n      dateHbvDnaTestRequested: \"\",\r\n      dateHbvSampleRequested: \"\",\r\n      dateHbvTestRequested: \"\",\r\n      hbeAG: \"\",\r\n      // attaching missing props\r\n      dateHbvDnaResultReported: \"\",\r\n      hbsAgQuantification: \"\",\r\n      hbvDna: \"DETECTED\",\r\n      hvbDnaValue: \"\",\r\n      pmtctEligible: \"\",\r\n      stagingDateOfLiverBiopsy: \"\",\r\n      treatmentEligible: \"\",\r\n    },\r\n    hepatitisCTest: {\r\n      commobidities: \"\",\r\n      hcRnaValue: \"\",\r\n      hcvRNA: \"\",\r\n      hepatitisCoinfection: \"\",\r\n      multipleInfection: \"\",\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // handle input changes\r\n  const handleInputChangeBasic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisBTest: {\r\n        ...basicInfo.hepatitisBTest,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n    //   if (e.target.name === \"dateHbvTestRequested\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n    //   if (e.target.name === \"dateHbvDnaResultReported\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n    //   if (e.target.name === \"stagingDateOfLiverBiopsy\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n    //   if (e.target.name === \"hbvDna\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n    //   if (e.target.name === \"hvbDnaValue\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n\r\n    //   if (e.target.name === \"hbsAgQuantification\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n\r\n    //   if (e.target.name === \"hbsAgQuantification\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n  };\r\n\r\n  const handleInputChangeBasicForHC = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisCTest: {\r\n        ...basicInfo.hepatitisCTest,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n  const handleInputChangeBasicForClinic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      clinicalParameters: {\r\n        ...basicInfo.clinicalParameters,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  // to capture the error\r\n  let temp = { ...errors };\r\n  const validate = () => {\r\n    temp.dateHbvDnaTestRequested = basicInfo.hepatitisBTest\r\n      .dateHbvDnaTestRequested\r\n      ? \"\"\r\n      : \"Date HBV DNA test requested is required \";\r\n    temp.dateHbvTestRequested = basicInfo.hepatitisBTest.dateHbvTestRequested\r\n      ? \"\"\r\n      : \"Date HBV test requested is required\";\r\n\r\n    temp.dateHbvSampleRequested = basicInfo.hepatitisBTest\r\n      .dateHbvSampleRequested\r\n      ? \"\"\r\n      : \"Date HBV Sample requested is required\";\r\n\r\n    // temp.hvbDnaValue =\r\n    //   basicInfo.hepatitisBTest.hvbDnaValue &&\r\n    //   basicInfo.hepatitisBTest.hbvDna === \"DETECTED\"\r\n    //     ? \"\"\r\n    //     : \" Input HBV DNA value is required\";\r\n\r\n    // temp.hcRnaValue =\r\n    //   basicInfo.hepatitisCTest.hcRnaValue &&\r\n    //   basicInfo.hepatitisCTest.hcvRNA === \"DETECTED\"\r\n    //     ? \"\"\r\n    //     : \" Input HCV RNA Value is required\";\r\n\r\n    temp.commobidities = basicInfo.hepatitisCTest.commobidities\r\n      ? \"\"\r\n      : \"Commobiditiesis required\";\r\n    temp.multipleInfection = basicInfo.hepatitisCTest.multipleInfection\r\n      ? \"\"\r\n      : \"Multiple Infection required\";\r\n\r\n    // temp.district = info.district ? \"\" : \"Province/LGA is required.\";\r\n    // temp.stateId = info.stateId ? \"\" : \"State is required.\";\r\n    // temp.dateOfBirth = info.dateOfBirth ? \"\" : \"Date of Birth is required.\";\r\n    // temp.dateOfRegistration = info.dateOfRegistration\r\n    //   ? \"\"\r\n    //   : \"Date of Registration is required.\";\r\n    // temp.maritalStatusId = basicInfo.maritalStatusId\r\n    //   ? \"\"\r\n    //   : \"Marital Status is required\";\r\n    // temp.educationId = info.educationId ? \"\" : \"Education is required\";\r\n    // temp.relationship = basicInfo.relationship\r\n    //   ? \"\"\r\n    //   : \"Relationship is required\";\r\n    // temp.genderId = basicInfo.personDto.genderId ? \"\" : \"sex is required\";\r\n    // temp.careEntryPoint = basicInfo.careEntryPoint\r\n    //   ? \"\"\r\n    //   : \"careEntryPoint is required\";\r\n    // temp.pregnancy = basicInfo.pregnancy ? \"\" : \"pregnancy status is required\";\r\n    // temp.weight = basicInfo.weight ? \"\" : \"Weight is required\";\r\n    // temp.height = basicInfo.height ? \"\" : \"Height is required\";\r\n    // temp.hepatitisB = basicInfo.hepatitisB ? \"\" : \"HepatitisB is required\";\r\n    // temp.breastfeeding = basicInfo.breastfeeding\r\n    //   ? \"\"\r\n    //   : \"Breastfeeding status is required\";\r\n    // temp.dateOfFirstHepatitisBPositiveScreening = basicInfo.screening\r\n    //   .dateOfFirstHepatitisBPositiveScreening\r\n    //   ? \"\"\r\n    //   : \"Date of first HepatitisB positive screening is required\";\r\n\r\n    //\r\n    console.log(temp);\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const postDataWithToken = async (data, key) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}${key}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      console.log(\"Post successful:\", response.data);\r\n      toast.success(\"Diagnosis submitted successfully\");\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(\"Diagnosis failed\");\r\n      console.error(\"Error posting data:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validating the input\r\n    window.scrollTo(0, 0);\r\n\r\n    console.log(basicInfo);\r\n    // console.log(errors);\r\n\r\n    if (validate()) {\r\n      console.log(\"good to go\", basicInfo);\r\n      postDataWithToken(basicInfo, \"hepatitis/diagnosis\");\r\n    }\r\n  };\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    const enrollmentIds = getCookie(\"enrollmentIds\");\r\n    const restructuredDiagnosisPayload = {\r\n      enrollmentUuid: enrollmentIds?.enrollmentUuid,\r\n      hepatitisBTest: {\r\n        dateHbvTestRequested: values.dateHbvTestRequested,\r\n        dateHbvSampleRequested: values.dateHbvSampleRequested,\r\n        dateHbvDnaTestRequested: values.dateHbvDnaTestRequested,\r\n        stagingDateOfLiverBiopsy: values.stagingDateOfLiverBiopsy,\r\n        hbvDna: values.hbvDna,\r\n        hvbDnaValue: values.hvbDnaValue,\r\n        hbsAgQuantification: values.hbsAgQuantification,\r\n        ctScan: values.ctScan,\r\n        albumin: values.albumin,\r\n        hbeAG: values.hbeAG,\r\n        antiHDV: values.antiHDV,\r\n        treatmentEligible: values.treatmentEligible,\r\n        pmtctEligible: values.pmtctEligible,\r\n        comment: values.comment,\r\n      },\r\n      hepatitisCTest: {\r\n        hcvRNA: values.hcvRNA,\r\n        hcRnaValue: values.hcRnaValue,\r\n        hepatitisCoinfection: values.hepatitisCoinfection,\r\n        commobidities: values.commobidities,\r\n        multipleInfection: values.multipleInfection,\r\n      },\r\n      clinicalParameters: {\r\n        ast: values.ast,\r\n        alt: values.alt,\r\n        pst: values.plt,\r\n        astValue: values.astValue,\r\n        totalBiliRubin: values.totalBiliRubin,\r\n        directBiliribin: values.directBiliribin,\r\n        apriScore: values.apriScore,\r\n        fib4: values.fib4,\r\n        prothrombinTimeNR: values.prothrombinTimeNR,\r\n        urea: values.urea,\r\n        creatinine: values.creatinine,\r\n        afp: values.afp,\r\n        fibroscan: values.fibroscan,\r\n        ultrasoundScan: values.ultrasoundScan,\r\n        ascites: values.ascites,\r\n        severityOfAscites: values.severityOfAscites,\r\n        gradeOfEncephalopathy: values.gradeOfEncephalopathy,\r\n        childPughScore: values.childPughScore,\r\n        liverBiopsyStage: values.liverBiopsyStage,\r\n        diagnosis_result: values.diagnosis_result,\r\n      },\r\n    };\r\n    setCookie(\"hepatitis2\", values, 1);\r\n    setCookie(\"heaptitis2PayloadValue\", restructuredDiagnosisPayload, 1);\r\n    postDataWithToken(restructuredDiagnosisPayload, \"hepatitis/diagnosis\");\r\n  };\r\n\r\n  const moveBack = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm2ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis2\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n  }, []);\r\n\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Diagnosis\r\n                </h5>\r\n              </div>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Hepatitis B\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvDnaTestRequested\">\r\n                              Date HBV DNA test requested{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvDnaTestRequested\"\r\n                              id=\"dateHbvDnaTestRequested\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.dateHbvDnaTestRequested\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.dateHbvDnaTestRequested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvDnaTestRequested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvTestRequested\">\r\n                              Date HBV test requested{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvTestRequested\"\r\n                              id=\"dateHbvTestRequested\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.dateHbvTestRequested\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.dateHbvTestRequested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvTestRequested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvSampleRequested\">\r\n                              Date HBV sample Requested{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvSampleRequested\"\r\n                              id=\"dateHbvSampleRequested\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.dateHbvSampleRequested\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.dateHbvSampleRequested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvSampleRequested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvDnaResultReported\">\r\n                              Date of HBV DNA result reported{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvDnaResultReported\"\r\n                              id=\"dateHbvDnaResultReported\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest\r\n                                  .dateHbvDnaResultReported\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* {errors.dateHbvDnaResultReported !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvDnaResultReported}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-2 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              HBV DNA(UI/ml){\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <div className=\"radio\">\r\n                              <label>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  value=\"DETECTED\"\r\n                                  name=\"hbvDna\"\r\n                                  checked={\r\n                                    basicInfo.hepatitisBTest.hbvDna ===\r\n                                    \"DETECTED\"\r\n                                  }\r\n                                  // onBlur={formik.handleBlur}\r\n                                  onChange={handleInputChangeBasic}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />{\" \"}\r\n                                Detected\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"radio\">\r\n                              <label>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  value=\"UNDETECTED\"\r\n                                  name=\"hbvDna\"\r\n                                  checked={\r\n                                    basicInfo.hepatitisBTest.hbvDna ===\r\n                                    \"UNDETECTED\"\r\n                                  }\r\n                                  // onBlur={formik.handleBlur}\r\n                                  onChange={handleInputChangeBasic}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />{\" \"}\r\n                                Undetected\r\n                              </label>\r\n                              {/* \r\n                              {errors.stagingDateOfLiverBiopsy !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.stagingDateOfLiverBiopsy}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </div>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {basicInfo.hepatitisBTest.hbvDna === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hvbDnaValue\">\r\n                                Input HBV DNA value{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hvbDnaValue\"\r\n                                id=\"hvbDnaValue\"\r\n                                value={basicInfo.hepatitisBTest.hvbDnaValue}\r\n                                onChange={handleInputChangeBasic}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {errors.hvbDnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.hvbDnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbsAgQuantification\">\r\n                              HBsAG Quantification (IU/ml)\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbsAgQuantification\"\r\n                              id=\"hbsAgQuantification\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.hbsAgQuantification\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* {errors.hbsAgQuantification !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbsAgQuantification}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbeAG\">HbeAG</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbeAG\"\r\n                              id=\"hbeAG\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.hbeAG}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"REACTIVE\"}>Reactive</option>\r\n                              <option value={\"NON_REACTIVE\"}>\r\n                                Non Reactive\r\n                              </option>\r\n                            </select>\r\n                            {/* {formik.errors.hbeAG !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbeAG}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"antiHDV\">Anti-HDV</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"antiHDV\"\r\n                              id=\"antiHDV\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.antiHDV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"REACTIVE\"}>Reactive</option>\r\n                              <option value={\"NON_REACTIVE\"}>\r\n                                Non Reactive\r\n                              </option>\r\n                              <option value={\"NOT_DONE\"}>Not Done</option>\r\n                            </select>\r\n                            {/* {formik.errors.antiHDV !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.antiHDV}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"treatmentEligible\">\r\n                              Treatment Eligible\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"treatmentEligible\"\r\n                              id=\"treatmentEligible\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.treatmentEligible}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {/* {formik.errors.treatmentEligible !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.treatmentEligible}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"pmtctEligible\">PMTCT Eligible</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"pmtctEligible\"\r\n                              id=\"pmtctEligible\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.pmtctEligible}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {/* {formik.errors.pmtctEligible !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.pmtctEligible}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4-12\">\r\n                          <FormGroup>\r\n                            <Label for=\"comment\">Comment</Label>\r\n                            <textarea\r\n                              className=\"form-control\"\r\n                              name=\"comment\"\r\n                              id=\"comment\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.comment}\r\n                              cols=\"50\"\r\n                              rows=\"30\"\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                                height: \"120px\",\r\n                              }}\r\n                            />\r\n                            {/* {formik.errors.comment !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.comment}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Hepatitis C\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRNA\">HCV RNA (IU/ml)</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRNA\"\r\n                              id=\"hcvRNA\"\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              // onBlur={formik.handleBlur}\r\n                              value={basicInfo.hepatitisCTest.hcvRNA}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>select</option>\r\n                              <option value={\"DETECTED\"}>Detected</option>\r\n                              <option value={\"UNDETECTED\"}>Undetected</option>\r\n                            </select>\r\n                            {/* {formik.errors.hcvRNA !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvRNA}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                        {basicInfo.hepatitisCTest.hcvRNA === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcRnaValue\">\r\n                                Input HCV RNA Value{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hcRnaValue\"\r\n                                id=\"hcRnaValue\"\r\n                                value={basicInfo.hepatitisCTest.hcRnaValue}\r\n                                onChange={handleInputChangeBasicForHC}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {/* {errors.hcRnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.hcRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hepatitisCoinfection\">\r\n                              Hepatitis Coinfection\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hepatitisCoinfection\"\r\n                              id=\"hepatitisCoinfection\"\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              value={\r\n                                basicInfo.hepatitisCTest.hepatitisCoinfection\r\n                              }\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"HBV_HCV\"}>HBV/HCV</option>\r\n                              <option value={\"HCV_HIV\"}>HCV/HIV</option>\r\n                              <option value={\"HBV_HDV\"}>HBV/HDV</option>\r\n                              <option value={\"HBV_HCD_HIV\"}>HBV/HCD/HIV</option>\r\n                            </select>\r\n                            {/* {formik.errors.hepatitisCoinfection !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hepatitisCoinfection}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"commobidities\">\r\n                              Commobidities{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"commobidities\"\r\n                              id=\"commobidities\"\r\n                              value={basicInfo.hepatitisCTest.commobidities}\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.commobidities !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.commobidities}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"multipleInfection\">\r\n                              Specify multiple infection{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"multipleInfection\"\r\n                              id=\"multipleInfection\"\r\n                              value={basicInfo.hepatitisCTest.multipleInfection}\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.multipleInfection !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.multipleInfection}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Clinical Parameters\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ast\">AST (IU/ml)</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"ast\"\r\n                        id=\"ast\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.ast}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.ast !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.ast}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"alt\">ALT (IU/ml)</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"alt\"\r\n                        id=\"alt\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.alt}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.alt !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.alt}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"pst\">PST (mm3)</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"pst\"\r\n                        id=\"pst\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.pst}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.pst !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.pst}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  {basicInfo.ast === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"astValue\">\r\n                          Input AST value{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"astValue\"\r\n                          id=\"astValue\"\r\n                          value={basicInfo.clinicalParameters.astValue}\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.astValue !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.astValue}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {basicInfo.alt === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"altValue\">\r\n                          Input ALT value{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"altValue\"\r\n                          id=\"altValue\"\r\n                          value={basicInfo.clinicalParameters.altValue}\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.altValue !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.altValue}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {basicInfo.plt === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pstValue\">\r\n                          Input PST value{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"pstValue\"\r\n                          id=\"pstValue\"\r\n                          value={basicInfo.clinicalParameters.pstValue}\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.pstValue !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pstValue}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"totalBiliRubin\">\r\n                        Total Bilirubin (μmol/L){\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"totalBiliRubin\"\r\n                        id=\"totalBiliRubin\"\r\n                        value={basicInfo.clinicalParameters.totalBiliRubin}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.totalBiliRubin !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.totalBiliRubin}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"directBiliribin\">\r\n                        Direct Bilirubin (μmol/L)\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"directBiliribin\"\r\n                        id=\"directBiliribin\"\r\n                        value={basicInfo.clinicalParameters.directBiliribin}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.directBiliribin !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.directBiliribin}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"albumin\">Albumin (g/dl)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"albumin\"\r\n                        id=\"albumin\"\r\n                        value={basicInfo.hepatitisBTest.albumin}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.albumin ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.albumin}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"apriScore\">APRI score </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"apriScore\"\r\n                        id=\"apriScore\"\r\n                        value={basicInfo.clinicalParameters.apriScore}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.apriScore !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.apriScore}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"fib4\">FIB-4</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"fib4\"\r\n                        id=\"fib4\"\r\n                        value={basicInfo.clinicalParameters.fib4}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.fib4 !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.fib4}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"prothrombinTimeNR\">\r\n                        Prothrombin time/INR\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"prothrombinTimeNR\"\r\n                        id=\"prothrombinTimeNR\"\r\n                        value={basicInfo.clinicalParameters.prothrombinTimeNR}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.prothrombinTimeNR !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.prothrombinTimeNR}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"urea\"\r\n                        id=\"urea\"\r\n                        value={basicInfo.clinicalParameters.urea}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.urea !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.urea}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"creatinine\"\r\n                        id=\"creatinine\"\r\n                        value={basicInfo.clinicalParameters.creatinine}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.creatinine !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.creatinine}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ultrasoundScan\">\r\n                        Ultrasound scan (μmol/L)\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"ultrasoundScan\"\r\n                        id=\"ultrasoundScan\"\r\n                        value={basicInfo.clinicalParameters.ultrasoundScan}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.ultrasoundScan !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.ultrasoundScan}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"afp\"\r\n                        id=\"afp\"\r\n                        value={basicInfo.clinicalParameters.afp}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.afp !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.afp}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"fibroscan\">Fibroscan (ng/ml)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"fibroscan\"\r\n                        id=\"fibroscan\"\r\n                        value={basicInfo.clinicalParameters.fibroscan}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.fibroscan !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.fibroscan}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ctScan\">CT scan</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"ctScan\"\r\n                        id=\"ctScan\"\r\n                        value={basicInfo.hepatitisBTest.ctScan}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.ctScan ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.ctScan}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ascites\">Acites</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"ascites\"\r\n                        id=\"ascites\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.ascites}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.ascites !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.ascites}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  {basicInfo.clinicalParameters.ascites === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"severityOfAscites\">\r\n                          Severity of ascites\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"severityOfAscites\"\r\n                          id=\"severityOfAscites\"\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          value={basicInfo.clinicalParameters.severityOfAscites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"MILD\"}>Mild</option>\r\n                          <option value={\"MODERATE\"}>Moderate</option>\r\n                          <option value={\"MASSIVE_OR_GROSS\"}>\r\n                            Massive/Gross\r\n                          </option>\r\n                        </select>\r\n                        {/* {formik.errors.severityOfAscites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.severityOfAscites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ascitesLevel\">Grade of Encephalopathy</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"gradeOfEncephalopathy\"\r\n                        id=\"gradeOfEncephalopathy\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={\r\n                          basicInfo.clinicalParameters.gradeOfEncephalopathy\r\n                        }\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={0}>0</option>\r\n                        <option value={1}>1</option>\r\n                        <option value={2}>2</option>\r\n                        <option value={3}>3</option>\r\n                        <option value={4}>4</option>\r\n                        <option value={5}>5</option>\r\n                      </select>\r\n                      {/* {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.gradeOfEncephalopathy}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"childPughScore\">Child pugh score</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"childPughScore\"\r\n                        id=\"childPughScore\"\r\n                        value={basicInfo.clinicalParameters.childPughScore}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.childPughScore !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.childPughScore}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"liverBiopsyStage\"\r\n                        id=\"liverBiopsyStage\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.liverBiopsyStage}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"FIBROSIS\"}> Fibrosis</option>\r\n                        <option value={\"CIRRHOSIS\"}>Cirrhosis</option>\r\n                        <option value={\"NO_FIBROSIS\"}> No Fibrosis</option>\r\n                        {/* <option value={\"CIRRHOSIS\"}>Cirrhosis</option> */}\r\n                        <option value={\"HIGH_CC\"}>High CC </option>\r\n                      </select>\r\n                      {/* {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.liverBiopsyStage}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"stagingDateOfLiverBiopsy\">\r\n                        Staging date of liver biopsy{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        name=\"stagingDateOfLiverBiopsy\"\r\n                        id=\"stagingDateOfLiverBiopsy\"\r\n                        value={\r\n                          basicInfo.hepatitisBTest.stagingDateOfLiverBiopsy\r\n                        }\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {errors.stagingDateOfLiverBiopsy !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.stagingDateOfLiverBiopsy}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"diagnosis_result\">Diagnosis</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"diagnosis_result\"\r\n                        id=\"diagnosis_result\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.diagnosis_result}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"NO_FIBROSIS\"}> No Fibrosis</option>\r\n                        <option value={\"FIBROSIS\"}>Fibrosis</option>\r\n                        <option value={\"CIRRHOSIS\"}>Cirrhosis</option>\r\n                        <option value={\"HIGH_CC\"}>HCC</option>\r\n                      </select>\r\n                      {/* {formik.errors.diagnosis_result !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.diagnosis_result}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {false ? <Spinner /> : \"\"}\r\n            <br />\r\n            <div className=\"d-flex justify-content-end\">\r\n              {/* <MatButton\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={moveBack}\r\n                className={classes.button}\r\n                startIcon={<ArrowBackIcon />}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n              </MatButton> */}\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                endIcon={<ArrowForward />}\r\n                onClick={handleSubmit}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n              </MatButton>\r\n            </div>\r\n            {/* </Form> */}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardForm2;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm3ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst DasboardTreatmentForm = ({}) => {\r\n  const [userId, setUserId] = useState(getCookie(\"enrollmentIds\"));\r\n\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    enrollmentUuid: userId?.enrollmentUuid,\r\n    hepatitisBTreatment: {\r\n      dateStarted: \"\",\r\n      dateStopped: \"\",\r\n      hbvPastTreatmentRegimen: \"\",\r\n      hepatitisBRegimenSwitch: {\r\n        adverseEffectReported: \"\",\r\n        dateStarted: \"\",\r\n        dateStopped: \"\",\r\n        newRegime: \"\",\r\n        reasonForSwitch: \"\",\r\n      },\r\n      historyOfAdverseEffect: \"\",\r\n      newRegimen: \"\",\r\n      reasonForHepatitisBTreatment: {\r\n        comment: \"\",\r\n        reasonsForTreatment: \"\",\r\n      },\r\n      treatmentExperience: \"\",\r\n    },\r\n    hepatitisCTreatment: {\r\n      adverseEffectReported: \"\",\r\n      dateCompleted: \"\",\r\n      dateStarted: \"\",\r\n      dateStopped: \"\",\r\n      hbvPastTreatmentRegimen: \"\",\r\n      hcvRetreatment: {\r\n        dateStarted: \"\",\r\n        dateStopped: \"\",\r\n        hbvPastTreatmentRegimen: \"\",\r\n        history_of_AdverseEffect: \"\",\r\n        newRegimen: \"\",\r\n        prescribedDuration: 0,\r\n        retreatmentAdverseEffect: \"\",\r\n      },\r\n      hepatitisSvr12Testing: {\r\n        dateTested: \"\",\r\n        hcvRNA: \"\",\r\n        hcvRNAValue: \"\",\r\n        retreatmentDateTested: \"\",\r\n        retreatmentHcvRNA: \"\",\r\n        retreatmentHcvRNAValue: \"\",\r\n      },\r\n      pastTreatmentExperience: \"\",\r\n      prescribedDuration: \"\",\r\n      treatmentExperience: \"\",\r\n    },\r\n  });\r\n  console.log(basicInfo.hepatitisBTreatment.hbvPastTreatmentRegimen);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  // handle input changes\r\n  const handleInputChangeBasicHB = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisBTreatment: {\r\n        ...basicInfo.hepatitisBTreatment,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleInputChangeBasicHBReason = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hbvReasonForTreatmentEligibility\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          reasonForHepatitisBTreatment: {\r\n            ...basicInfo.hepatitisBTreatment.reasonForHepatitisBTreatment,\r\n            reasonsForTreatment: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hbvReasonsForTreatmentComment\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          reasonForHepatitisBTreatment: {\r\n            ...basicInfo.hepatitisBTreatment.reasonForHepatitisBTreatment,\r\n            comment: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"treatmentExperienceB\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          treatmentExperience: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    // if (e.target.name === \"hbvRegimeSwitchDateStarted\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         dateStarted: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n    // if (e.target.name === \"hbvRegimeSwitchDateStopped\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         dateStopped: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n    // if (e.target.name === \"hbvAdverseEffectReported\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         adverseEffectReported: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n\r\n    // if (e.target.name === \"hbvRegimeSwitchReason\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         reasonForSwitch: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n  };\r\n  const handleInputChangeBasicHBRegSwitch = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hbvRegimeSwitchNewRegimen\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            newRegime: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hbvRegimeSwitchDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            dateStarted: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hbvRegimeSwitchDateStopped\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            dateStopped: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hbvAdverseEffectReported\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            adverseEffectReported: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hbvRegimeSwitchReason\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            reasonForSwitch: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeBasicHCGen = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisCTreatment: {\r\n        ...basicInfo.hepatitisCTreatment,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n  const handleInputChangeBasicHC = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (e.target.name === \"hcvAdverseEventReported\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          adverseEffectReported: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvTreatmentExperience\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          treatmentExperience: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          dateStarted: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvDateCompleted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          dateCompleted: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvDateStopped\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          dateStopped: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvPrescribedDuration\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          prescribedDuration: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hbvPastTreatmentRegimenForHcv\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hbvPastTreatmentRegimen: e.target.value,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeBasicHCSVR = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"svr12TestingDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            dateTested: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12TestingHcvRna\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            hcvRNA: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12TestingHcvRnaValue\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            hcvRNAValue: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12RetreatmentDateTested\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            retreatmentDateTested: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12RetreatmentHcvRna\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            retreatmentHcvRNA: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"svr12RetreatmentHcvRnaValue\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            retreatmentHcvRNAValue: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeBasicHHCV = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hcvRetreatmentNewRegimen\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            newRegimen: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvRetreatmentPrescribedDuration\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            prescribedDuration: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvRetreatmentDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            dateStarted: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvRetreatmentDateStopped\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            dateStopped: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvRetreatmentAdverseEffect\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            retreatmentAdverseEffect: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvRetreatmentHistoryOfAdverseEffect\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            history_of_AdverseEffect: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // to capture the error\r\n  let temp = { ...errors };\r\n  const validate = () => {\r\n    temp.treatmentExperienceB = basicInfo.hepatitisBTreatment\r\n      .treatmentExperience\r\n      ? \"\"\r\n      : \"Treatment experience is required\";\r\n\r\n    temp.hbvRegimeSwitchNewRegimen = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.newRegime\r\n      ? \"\"\r\n      : \"New Regime is required\";\r\n\r\n    temp.hbvRegimeSwitchDateStarted = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.dateStarted\r\n      ? \"\"\r\n      : \"Date Started is required\";\r\n\r\n    temp.hbvRegimeSwitchDateStopped = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.dateStopped\r\n      ? \"\"\r\n      : \"Date Stopped is required\";\r\n\r\n    temp.hbvRegimeSwitchReason = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.reasonForSwitch\r\n      ? \"\"\r\n      : \"Reason for switch is required\";\r\n\r\n    temp.hcvTreatmentExperience = basicInfo.hepatitisCTreatment\r\n      .treatmentExperience\r\n      ? \"\"\r\n      : \" Treatment experience is required\";\r\n\r\n    temp.pastTreatmentExperience = basicInfo.hepatitisCTreatment\r\n      .pastTreatmentExperience\r\n      ? \"\"\r\n      : \"Past Treatment experience is required\";\r\n\r\n    temp.hbvAdverseEffectReported = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.adverseEffectReported\r\n      ? \"\"\r\n      : \"Adverse effect is required\";\r\n\r\n    temp.historyOfAdverseEffect = basicInfo.hepatitisBTreatment\r\n      .historyOfAdverseEffect\r\n      ? \"\"\r\n      : \"History ofAdverse effect is required\";\r\n\r\n    temp.newRegimen = basicInfo.hepatitisBTreatment.newRegimen\r\n      ? \"\"\r\n      : \"New Regime is required\";\r\n\r\n    temp.hbvPastTreatmentRegimen = basicInfo.hepatitisBTreatment\r\n      .hbvPastTreatmentRegimen\r\n      ? \"\"\r\n      : \"Hbv Past treatment regimen is required\";\r\n\r\n    // temp.newRegimenB = basicInfo.hepatitisBTreatment.newRegimen\r\n    //   ? \"\"\r\n    //   : \"New Regime is required\";\r\n\r\n    temp.dateStarted = basicInfo.hepatitisBTreatment.dateStarted\r\n      ? \"\"\r\n      : \"Date started is required\";\r\n\r\n    temp.dateStopped = basicInfo.hepatitisBTreatment.dateStopped\r\n      ? \"\"\r\n      : \"Date Stopped is required\";\r\n\r\n    temp.hbvReasonForTreatmentEligibility = basicInfo.hepatitisBTreatment\r\n      .reasonForHepatitisBTreatment.reasonsForTreatment\r\n      ? \"\"\r\n      : \"Reason for Treatment is required\";\r\n\r\n    temp.hbvReasonsForTreatmentComment = basicInfo.hepatitisBTreatment\r\n      .reasonForHepatitisBTreatment.comment\r\n      ? \"\"\r\n      : \"Comment is required\";\r\n\r\n    temp.hcvAdverseEventReported = basicInfo.hepatitisCTreatment\r\n      .adverseEffectReported\r\n      ? \"\"\r\n      : \"Adverse Effect Reported is required\";\r\n\r\n    temp.hcvDateStarted = basicInfo.hepatitisCTreatment.dateStarted\r\n      ? \"\"\r\n      : \"Date started is required\";\r\n\r\n    temp.hcvDateCompleted = basicInfo.hepatitisCTreatment.dateCompleted\r\n      ? \"\"\r\n      : \"Date completed is required\";\r\n\r\n    temp.hcvDateStopped = basicInfo.hepatitisCTreatment.dateStopped\r\n      ? \"\"\r\n      : \"Date stopped is required\";\r\n\r\n    temp.hcvPrescribedDuration = basicInfo.hepatitisCTreatment\r\n      .prescribedDuration\r\n      ? \"\"\r\n      : \"Prescribed duration is required\";\r\n\r\n    temp.svr12TestingDateStarted = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.dateTested\r\n      ? \"\"\r\n      : \"Date tested is required\";\r\n\r\n    temp.svr12TestingHcvRna = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.hcvRNA\r\n      ? \"\"\r\n      : \"HCV RNA is required\";\r\n\r\n    temp.svr12RetreatmentDateTested = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.retreatmentDateTested\r\n      ? \"\"\r\n      : \"Retreatment date tested is required\";\r\n\r\n    temp.svr12RetreatmentHcvRna = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.retreatmentDateTested\r\n      ? \"\"\r\n      : \" Retreatment HCV RNA is required\";\r\n\r\n    temp.svr12RetreatmentHcvRna = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.retreatmentHcvRNA\r\n      ? \"\"\r\n      : \" Retreatment HCV RNA  is required\";\r\n\r\n    temp.hcvRetreatmentNewRegimen = basicInfo.hepatitisCTreatment.hcvRetreatment\r\n      .newRegimen\r\n      ? \"\"\r\n      : \" New regimen  is required\";\r\n\r\n    temp.hcvRetreatmentPrescribedDuration = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.prescribedDuration\r\n      ? \"\"\r\n      : \"Prescribed Duration is required\";\r\n\r\n    temp.hcvRetreatmentDateStarted = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.dateStarted\r\n      ? \"\"\r\n      : \"Date started is required\";\r\n\r\n    temp.hcvRetreatmentDateStopped = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.dateStarted\r\n      ? \"\"\r\n      : \"Date stopped is required\";\r\n\r\n    temp.hcvRetreatmentAdverseEffect = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.retreatmentAdverseEffect\r\n      ? \"\"\r\n      : \" Retreatment Adverse effect is required\";\r\n\r\n    temp.hcvRetreatmentHistoryOfAdverseEffect = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.history_of_AdverseEffect\r\n      ? \"\"\r\n      : \" History of adverse effect is required\";\r\n\r\n    // console.log(temp);\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  // submit form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validating the input\r\n    window.scrollTo(0, 0);\r\n\r\n    console.log(basicInfo);\r\n    // console.log(errors);\r\n\r\n    if (validate()) {\r\n      console.log(\"good to go\", basicInfo);\r\n      postDataWithToken(basicInfo, \"hepatitis/treatment\");\r\n    }\r\n  };\r\n  const onSubmitHandler = (values) => {\r\n    console.log(values.hbvDateStarted);\r\n    setCookie(\"hepatitis3\", values, 1);\r\n    const enrollmentIds = getCookie(\"enrollmentIds\");\r\n    const restructuredTreatmentPayload = {\r\n      enrollmentUuid: enrollmentIds?.enrollmentUuid,\r\n      hepatitisBTreatment: {\r\n        dateStarted: formatDate(values.hbvDateStarted),\r\n        dateStopped: formatDate(values.hbvDateStopped),\r\n        hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimen,\r\n        hepatitisBRegimenSwitch: {\r\n          adverseEffectReported: values.hbvAdverseEffectReported,\r\n          dateStarted: formatDate(values.hbvRegimeSwitchDateStarted),\r\n          dateStopped: formatDate(values.hbvRegimeSwitchDateStopped),\r\n          newRegime: values.hbvRegimeSwitchNewRegimen,\r\n          reasonForSwitch: values.hbvRegimeSwitchReason,\r\n        },\r\n        historyOfAdverseEffect: values.hbvHistoryOfAdverseEffect,\r\n        newRegimen: values.hbvNewRegimen,\r\n        reasonForHepatitisBTreatment: {\r\n          comment: values.hbvReasonsForTreatmentComment,\r\n          reasonsForTreatment: values.hbvReasonForTreatmentEligibility,\r\n        },\r\n        treatmentExperience: values.hbvTreatmentExperience,\r\n      },\r\n      hepatitisCTreatment: {\r\n        adverseEffectReported: values.hcvAdverseEventReported,\r\n        dateCompleted: formatDate(values.hcvDateCompleted),\r\n        dateStarted: formatDate(values.hcvDateStarted),\r\n        dateStopped: formatDate(values.hcvDateStopped),\r\n        hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimenForHcv,\r\n        hcvRetreatment: {\r\n          dateStarted: formatDate(values.hcvRetreatmentDateStarted),\r\n          dateStopped: formatDate(values.hcvRetreatmentDateStopped),\r\n          hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimenForHcv,\r\n          history_of_AdverseEffect: values.hcvRetreatmentHistoryOfAdverseEffect,\r\n          newRegimen: values.hcvRetreatmentNewRegimen,\r\n          prescribedDuration: values.hcvRetreatmentPrescribedDuration,\r\n          retreatmentAdverseEffect: values.hcvRetreatmentAdverseEffect,\r\n        },\r\n        hepatitisSvr12Testing: {\r\n          dateTested: formatDate(values.svr12TestingDateStarted),\r\n          hcvRNA: values.svr12TestingHcvRna,\r\n          hcvRNAValue: values.svr12TestingHcvRnaValue,\r\n          retreatmentDateTested: formatDate(values.svr12RetreatmentDateTested),\r\n          // retreatmentHcvRNA: \"string\",\r\n          // retreatmentHcvRNAValue: \"string\",\r\n        },\r\n        // pastTreatmentExperience: \"string\",\r\n        prescribedDuration: values.hcvRetreatmentPrescribedDuration,\r\n        treatmentExperience: values.hcvTreatmentExperience,\r\n      },\r\n    };\r\n\r\n    setCookie(\"heaptitis3PayloadValue\", restructuredTreatmentPayload, 1);\r\n    postDataWithToken(restructuredTreatmentPayload, \"hepatitis/treatment\");\r\n  };\r\n\r\n  const moveBack = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm3ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis3\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n  const postDataWithToken = async (data, key) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}${key}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      // Handle the response if needed\r\n      toast.success(\"Treatment submitted successfully\");\r\n      deleteCookie(\"heaptitis3PayloadValue\");\r\n      deleteCookie(\"hepatitis3\");\r\n      deleteCookie(\"enrollmentIds\");\r\n      deleteCookie(\"hepatitis2\");\r\n      deleteCookie(\"heaptitis2PayloadValue\");\r\n      deleteCookie(\"hepatitis1\");\r\n      deleteCookie(\"heaptitis1PayloadValue\");\r\n      return response.data;\r\n    } catch (error) {\r\n      // Handle any errors that occurred during the request\r\n      toast.error(\"Treatment failed\");\r\n      console.error(\"Error posting data:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  function deleteCookie(name) {\r\n    document.cookie =\r\n      name + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n  }\r\n\r\n  function convertStringBooleanValues(originalObj) {\r\n    const newObj = {};\r\n\r\n    for (const key in originalObj) {\r\n      if (originalObj.hasOwnProperty(key)) {\r\n        const value = originalObj[key];\r\n        if (typeof value === \"string\") {\r\n          newObj[key] =\r\n            value.toLowerCase() === \"yes\"\r\n              ? \"YES\"\r\n              : value.toLowerCase() === \"no\"\r\n              ? \"NO\"\r\n              : value;\r\n        } else {\r\n          newObj[key] = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    return newObj;\r\n  }\r\n\r\n  function formatDate(inputDate) {\r\n    // Split the input date string into an array\r\n    var dateArray = inputDate.split(\"-\");\r\n\r\n    // Check if the input date is in the correct format (yyyy-mm-dd)\r\n    if (dateArray.length !== 3) {\r\n      return \"Invalid date format\";\r\n    }\r\n\r\n    // Extract the year, month, and day from the array\r\n    var year = dateArray[0];\r\n    var month = dateArray[1];\r\n    var day = dateArray[2];\r\n\r\n    // Create a new date string in the \"dd-mm-yyyy\" format\r\n    var newDateFormat = day + \"-\" + month + \"-\" + year;\r\n\r\n    return newDateFormat;\r\n  }\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n  }, []);\r\n\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hbvTreatmentRegimenSwitch: true,\r\n    hbvTreatmentReasonforTreatment: true,\r\n    hcvTreatmentRegimenSwitch: true,\r\n    hcvTreatmentRegimenHcvRetreatment: true,\r\n    hcvTreatmentSvr12Testing: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Hepatitis B Treatment\r\n                </h5>\r\n              </div>\r\n              <div>\r\n                <div className=\"card-body\">\r\n                  <div\r\n                    className=\"basic-form\"\r\n                    style={{ padding: \"0 50px 0 50px\" }}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvTreatmentExperience\">\r\n                            Treatment experience\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"treatmentExperienceB\"\r\n                            id=\"treatmentExperience\"\r\n                            value={\r\n                              basicInfo.hepatitisBTreatment.treatmentExperience\r\n                            }\r\n                            onChange={handleInputChangeBasicHBReason}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.treatmentExperienceB !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.treatmentExperienceB}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      {/* {basicInfo.hbvTreatmentExperience && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvPastTreatmentRegimen\">\r\n                                Past treatment regime\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvPastTreatmentRegimen\"\r\n                                id=\"hbvPastTreatmentRegimen\"\r\n                                value={basicInfo.hbvPastTreatmentRegimen}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvPastTreatmentRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )} */}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvNewRegimen\">New regime</Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"newRegimen\"\r\n                            id=\"newRegimen\"\r\n                            value={basicInfo.hepatitisBTreatment.newRegimen}\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.newRegimen !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.newRegimen}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvPastTreatmentRegimen\">\r\n                            Hbv Past treatment regimen\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hbvPastTreatmentRegimen\"\r\n                            id=\"hbvPastTreatmentRegimen\"\r\n                            value={\r\n                              basicInfo.hepatitisBTreatment\r\n                                .hbvPastTreatmentRegimen\r\n                            }\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hbvPastTreatmentRegimen}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      {basicInfo.hbvPastTreatmentRegimen !== \"\" && (\r\n                        <>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvDateStarted\">Date started</Label>\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateStarted\"\r\n                                id=\"dateStarted\"\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                value={\r\n                                  basicInfo.hepatitisBTreatment.dateStarted\r\n                                }\r\n                                onChange={handleInputChangeBasicHB}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {errors.dateStarted !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.dateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvDateStopped\">Date stopped</Label>\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateStopped\"\r\n                                id=\"dateStopped\"\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                value={\r\n                                  basicInfo.hepatitisBTreatment.dateStopped\r\n                                }\r\n                                onChange={handleInputChangeBasicHB}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {errors.dateStopped !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.dateStopped}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvHistoryOfAdverseEffect\">\r\n                            History of adverse effect\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"historyOfAdverseEffect\"\r\n                            id=\"historyOfAdverseEffect\"\r\n                            value={\r\n                              basicInfo.hepatitisBTreatment\r\n                                .historyOfAdverseEffect\r\n                            }\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.historyOfAdverseEffect !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.historyOfAdverseEffect}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Regimen Switch\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hbvTreatmentRegimenSwitch:\r\n                            !prevState.hbvTreatmentRegimenSwitch,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hbvTreatmentRegimenSwitch}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchNewRegimen\">\r\n                              New Regimen\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbvRegimeSwitchNewRegimen\"\r\n                              id=\"hbvRegimeSwitchNewRegimen\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.newRegime\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchNewRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchNewRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchDateStarted\">\r\n                              Date Started{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hbvRegimeSwitchDateStarted\"\r\n                              id=\"hbvRegimeSwitchDateStarted\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.dateStarted\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchDateStopped\">\r\n                              Date Stopped{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hbvRegimeSwitchDateStopped\"\r\n                              id=\"hbvRegimeSwitchDateStopped\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.dateStopped\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchDateStopped !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchDateStopped}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvAdverseEffectReported\">\r\n                              Adverse effect reported{\" \"}\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvAdverseEffectReported\"\r\n                              id=\"hbvAdverseEffectReported\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.adverseEffectReported\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {errors.hbvAdverseEffectReported !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvAdverseEffectReported}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchReason\">\r\n                              Reason for switch\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbvRegimeSwitchReason\"\r\n                              id=\"hbvRegimeSwitchReason\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.reasonForSwitch\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchReason !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchReason}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Reason for treatment\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hbvTreatmentReasonforTreatment:\r\n                            !prevState.hbvTreatmentReasonforTreatment,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hbvTreatmentReasonforTreatment}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvReasonForTreatmentEligibility\">\r\n                              Reasons for treatment\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvReasonForTreatmentEligibility\"\r\n                              id=\"hbvReasonForTreatmentEligibility\"\r\n                              onChange={handleInputChangeBasicHBReason}\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .reasonForHepatitisBTreatment\r\n                                  .reasonsForTreatment\r\n                              }\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n\r\n                              <option value={\"treatment eligible\"}>\r\n                                Treatment Eligible\r\n                              </option>\r\n                              <option value={\"hbv pmtct\"}>HBV PMTCT</option>\r\n                            </select>\r\n                            {errors.hbvReasonForTreatmentEligibility !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvReasonForTreatmentEligibility}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvReasonsForTreatmentComment\">\r\n                              Comment\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            <textarea\r\n                              className=\"form-control\"\r\n                              name=\"hbvReasonsForTreatmentComment\"\r\n                              id=\"hbvReasonsForTreatmentComment\"\r\n                              onChange={handleInputChangeBasicHBReason}\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .reasonForHepatitisBTreatment.comment\r\n                              }\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                                height: \"80px\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvReasonsForTreatmentComment !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvReasonsForTreatmentComment}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Hepatitis C Treatment\r\n                </h5>\r\n              </div>\r\n\r\n              <div>\r\n                <div className=\"card-body\">\r\n                  <div\r\n                    className=\"basic-form\"\r\n                    style={{ padding: \"0 50px 0 50px\" }}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvAdverseEventReported\">\r\n                            Adverse Effect reported\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hcvAdverseEventReported\"\r\n                            id=\"hcvAdverseEventReported\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment\r\n                                .adverseEffectReported\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"YES\">Yes</option>\r\n                            <option value=\"NO\">No</option>\r\n                          </select>\r\n                          {errors.hcvAdverseEventReported !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvAdverseEventReported}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvTreatmentExperience\">\r\n                            Treatment experience\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvTreatmentExperience\"\r\n                            id=\"hcvTreatmentExperience\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment.treatmentExperience\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.hcvTreatmentExperience !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvTreatmentExperience}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvPastTreatmentRegimen\">\r\n                            HBV Past treatment regimen\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pastTreatmentExperience\"\r\n                            id=\"pastTreatmentExperience\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment\r\n                                .pastTreatmentExperience\r\n                            }\r\n                            onChange={handleInputChangeBasicHCGen}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.pastTreatmentExperience !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.pastTreatmentExperience}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvDateStarted\">Date started</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvDateStarted\"\r\n                            id=\"hcvDateStarted\"\r\n                            value={basicInfo.hepatitisCTreatment.dateStarted}\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hcvDateStarted !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvDateStarted}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvDateCompleted\">Date completed</Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvDateCompleted\"\r\n                            id=\"hcvDateCompleted\"\r\n                            value={basicInfo.hepatitisCTreatment.dateCompleted}\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hcvDateCompleted !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvDateCompleted}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvDateStopped\">Date stopped</Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvDateStopped\"\r\n                            id=\"hcvDateStopped\"\r\n                            value={basicInfo.hepatitisCTreatment.dateStopped}\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hcvDateStopped !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvDateStopped}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvPrescribedDuration\">\r\n                            Prescribed duration\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hcvPrescribedDuration\"\r\n                            id=\"hcvPrescribedDuration\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment.prescribedDuration\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={0}>Select</option>\r\n                            <option value={8}>8 weeks</option>\r\n                            <option value={12}>12 weeks</option>\r\n                            <option value={24}>24 weeks</option>\r\n                          </select>\r\n                          {errors.hcvPrescribedDuration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvPrescribedDuration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvPastTreatmentRegimenForHcv\">\r\n                            HBV past treatment regimen\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <select\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"hbvPastTreatmentRegimenForHcv\"\r\n                            id=\"hbvPastTreatmentRegimenForHcv\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment\r\n                                .hbvPastTreatmentRegimen\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.treatmentExperienceB !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.treatmentExperienceB}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    SVR 12 Testing\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hcvTreatmentSvr12Testing:\r\n                            !prevState.hcvTreatmentSvr12Testing,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hcvTreatmentSvr12Testing}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hcvTreatmentSvr12Testing}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12TestingDateStarted\">\r\n                              Date tested\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"svr12TestingDateStarted\"\r\n                              id=\"svr12TestingDateStarted\"\r\n                              type=\"date\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.dateTested\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.svr12TestingDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.svr12TestingDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12TestingHcvRna\">\r\n                              HCV RNA <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"svr12TestingHcvRna\"\r\n                              id=\"svr12TestingHcvRna\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.hcvRNA\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"DETECTED\">Detected</option>\r\n                              <option value=\"UNDETECTED\">Undetected</option>\r\n                            </select>\r\n                            {errors.svr12TestingHcvRna !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.svr12TestingHcvRna}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {basicInfo.hepatitisCTreatment.hepatitisSvr12Testing\r\n                          .hcvRNA === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRnaValue\">\r\n                                Input HCV RNA value\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRnaValue\"\r\n                                id=\"svr12TestingHcvRnaValue\"\r\n                                type=\"text\"\r\n                                value={\r\n                                  basicInfo.hepatitisCTreatment\r\n                                    .hepatitisSvr12Testing.hcvRNAValue\r\n                                }\r\n                                onChange={handleInputChangeBasicHCSVR}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        {/* <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRnaValue\">\r\n                                Input HCV RNA value\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRnaValue\"\r\n                                id=\"svr12TestingHcvRnaValue\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={basicInfo.svr12TestingHcvRnaValue}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.svr12TestingHcvRnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingHcvRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div> */}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12RetreatmentDateTested\">\r\n                              Retreatment date tested\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"svr12RetreatmentDateTested\"\r\n                              id=\"svr12RetreatmentDateTested\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.retreatmentDateTested\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              type=\"date\"\r\n                            />\r\n\r\n                            {errors.svr12RetreatmentDateTested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.svr12RetreatmentDateTested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12RetreatmentHcvRna\">\r\n                              Retreatment HCV RNA(IU/ml)\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"svr12RetreatmentHcvRna\"\r\n                              id=\"svr12RetreatmentHcvRna\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.retreatmentHcvRNA\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"DETECTED\">Detected</option>\r\n                              <option value=\"UNDETECTED\">Undetected</option>\r\n                            </select>\r\n\r\n                            {errors.svr12RetreatmentHcvRna !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.svr12RetreatmentHcvRna}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {basicInfo.hepatitisCTreatment.hepatitisSvr12Testing\r\n                          .retreatmentHcvRNA === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12RetreatmentHcvRnaValue\">\r\n                                Input Retreatment HCV RNA value(IU/ml)\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"svr12RetreatmentHcvRnaValue\"\r\n                                id=\"svr12RetreatmentHcvRnaValue\"\r\n                                value={\r\n                                  basicInfo.hepatitisCTreatment\r\n                                    .hepatitisSvr12Testing\r\n                                    .retreatmentHcvRNAValue\r\n                                }\r\n                                onChange={handleInputChangeBasicHCSVR}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {/* {errors.svr12TestingHcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.svr12TestingHcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    HCV Retreatment\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hcvTreatmentRegimenHcvRetreatment:\r\n                            !prevState.hcvTreatmentRegimenHcvRetreatment,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={\r\n                      isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment\r\n                    }\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse\r\n                    in={isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment}\r\n                  >\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentNewRegimen\">\r\n                              New regimen\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentNewRegimen\"\r\n                              id=\"hcvRetreatmentNewRegimen\"\r\n                              type=\"text\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .newRegimen\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hcvRetreatmentNewRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentNewRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentPrescribedDuration\">\r\n                              Prescribed Duration\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentPrescribedDuration\"\r\n                              id=\"hcvRetreatmentPrescribedDuration\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .prescribedDuration\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={0}>Select</option>\r\n                              <option value={8}>8 weeks</option>\r\n                              <option value={12}>12 weeks</option>\r\n                              <option value={24}>24 weeks</option>\r\n                            </select>\r\n                            {errors.hcvRetreatmentPrescribedDuration !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentPrescribedDuration}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentDateStarted\">\r\n                              Date started\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentDateStarted\"\r\n                              id=\"hcvRetreatmentDateStarted\"\r\n                              type=\"date\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .dateStarted\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n\r\n                            {errors.hcvRetreatmentDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentDateStopped\">\r\n                              Date stopped\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentDateStopped\"\r\n                              id=\"hcvRetreatmentDateStopped\"\r\n                              type=\"date\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .dateStopped\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hcvRetreatmentDateStopped !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentDateStopped}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentAdverseEffect\">\r\n                              Retreatment Adverse effect\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentAdverseEffect\"\r\n                              id=\"hcvRetreatmentAdverseEffect\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .retreatmentAdverseEffect\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {errors.hcvRetreatmentAdverseEffect !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentAdverseEffect}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentHistoryOfAdverseEffect\">\r\n                              History of adverse effect\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentHistoryOfAdverseEffect\"\r\n                              id=\"hcvRetreatmentHistoryOfAdverseEffect\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .history_of_AdverseEffect\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {errors.hcvRetreatmentHistoryOfAdverseEffect !==\r\n                            \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentHistoryOfAdverseEffect}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {false ? <Spinner /> : \"\"}\r\n            <br />\r\n            <div className=\"d-flex justify-content-end\">\r\n              {/* <MatButton\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<ArrowBackIcon />}\r\n                onClick={moveBack}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n              </MatButton> */}\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={handleSubmit}\r\n                // endIcon={<ArrowForward />}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n              </MatButton>\r\n            </div>\r\n            {/* </Form> */}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DasboardTreatmentForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport PatientCardDetail from \"./PatientCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport axios from \"axios\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport RecentHistory from \"./../History/RecentHistory\";\r\nimport PatientHistory from \"./../History/PatientHistory\";\r\nimport Biometrics from \"./Biometric\";\r\nimport AddmissionHome from \"./../Admission/AddmissionHome\";\r\nimport PatientVaccinationHistory from \"./../Vaccination/VaccinationHistory\";\r\nimport DashboardForm2 from \"./ViralHepatitisForms/DashboardForm2\";\r\nimport DasboardTreatmentForm from \"./ViralHepatitisForms/DashboardTreatmentForm\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [art, setArt] = useState(false);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: \"recent-history\",\r\n    id: \"\",\r\n    activeTab: \"home\",\r\n    actionType: \"create\",\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n  const patientObj =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const prepId =\r\n    history.location && history.location.state\r\n      ? history.location.state.prepId\r\n      : {};\r\n\r\n  const getRecentActivties = () => {\r\n    axios\r\n      .get(`${baseUrl}hepatitis/activities/${patientObj.personUuid}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setRecentActivities(response.data);\r\n        console.log(response.data);\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getRecentActivties();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>HEPATITIS /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <PatientCardDetail\r\n            patientObj={patientObj}\r\n            setArt={setArt}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <SubMenu\r\n            patientObj={patientObj}\r\n            art={art}\r\n            setActiveContent={setActiveContent}\r\n            recentActivities={recentActivities}\r\n          />\r\n          <br />\r\n          {activeContent.route === \"recent-history\" && (\r\n            <RecentHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              allRecentActivities={recentActivities}\r\n            />\r\n          )}\r\n          {activeContent.route === \"diagnosis\" && (\r\n            <DashboardForm2\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n          {activeContent.route === \"treatment\" && (\r\n            <DasboardTreatmentForm\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n\r\n          {/*  {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}          */}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport \"./patient.css\";\r\n// import Form from 'react-bootstrap/Form';\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst UserRegistration = (props) => {\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: \"\",\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: \"\",\r\n    genderId: \"\",\r\n    identifier: \"\",\r\n    otherName: \"\",\r\n    maritalStatusId: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    dateOfRegistration: \"\",\r\n    isDateOfBirthEstimated: null,\r\n    age: \"\",\r\n    phoneNumber: \"\",\r\n    altPhonenumber: \"\",\r\n    dob: \"\",\r\n    countryId: \"\",\r\n    stateId: \"\",\r\n    district: \"\",\r\n    landmark: \"\",\r\n    sexId: \"\",\r\n    ninNumber: \"\",\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: \"\",\r\n    phone: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    relationshipId: \"\",\r\n    lastName: \"\",\r\n    middleName: \"\",\r\n  });\r\n\r\n  const [today, setToday] = useState(\r\n    new Date().toISOString().substr(0, 10).replace(\"T\", \" \")\r\n  );\r\n  const [contacts, setContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  const [editRelative, setEditRelative] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: \"\",\r\n    hivEnrollment: \"\",\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //HIV INFORMATION\r\n  const [femaleStatus, setfemaleStatus] = useState(false);\r\n  //const [values, setValues] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    dateEnrolled: \"\",\r\n    dateOfLastHivNegativeTest: \"\",\r\n    dateReferredForPrep: \"\",\r\n    extra: {},\r\n    hivTestingPoint: \"\",\r\n    prepRiskType: \"\",\r\n    personDto: {},\r\n    personId: 0,\r\n    prepSupporter: \"\",\r\n    uniqueClientId: \"\",\r\n    ancUnique: \"\",\r\n  });\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [kP, setKP] = useState([]);\r\n  const [newSex, setNewSex] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  //set ro show the facility name field if is transfer in\r\n  const [transferIn, setTransferIn] = useState(false);\r\n  // display the OVC number if patient is enrolled into OVC\r\n  const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n  //Input fields to hidden base on some conditions\r\n  const [hideTargetGroup, setHideTargetGroup] = useState(\"false\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  let patientObj = {};\r\n  patientId = locationState ? locationState.patientId : null;\r\n  patientObj = locationState ? locationState.patientObj : {};\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    getSex();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    loadTopLevelCountry();\r\n    CareEntryPoint();\r\n    SourceReferral();\r\n    HivStatus();\r\n    EnrollmentSetting();\r\n    TBStatus();\r\n    KP();\r\n    PregnancyStatus();\r\n    GetCountry();\r\n    if (patientObj) {\r\n      const contacts =\r\n        patientObj && patientObj.contact ? patientObj.contact : [];\r\n      //setContacts(patientObj.contacts);\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts.contact &&\r\n        contacts.contact.length > 0 &&\r\n        contacts.contact.map((x) => {\r\n          const contactInfo = {\r\n            address: x.address.line[0],\r\n            phone: x.contactPoint.value,\r\n            firstName: x.firstName,\r\n            email: \"\",\r\n            relationshipId: x.relationshipId,\r\n            lastName: x.surname,\r\n            middleName: x.otherName,\r\n          };\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      setContacts(newConatctsInfo);\r\n      const identifiers = patientObj.identifier;\r\n      const address = patientObj.address;\r\n      const contactPoint = patientObj.contactPoint;\r\n      const hospitalNumber = identifiers?.identifier.find(\r\n        (obj) => obj.type === \"HospitalNumber\"\r\n      );\r\n      const phone = contactPoint?.contactPoint.find(\r\n        (obj) => obj.type === \"phone\"\r\n      );\r\n      const email = contactPoint?.contactPoint.find(\r\n        (obj) => obj.type === \"email\"\r\n      );\r\n      const altphone = contactPoint?.contactPoint.find(\r\n        (obj) => obj.type === \"altphone\"\r\n      );\r\n      const country =\r\n        address && address?.address && address?.address.length > 0\r\n          ? address?.address[0]\r\n          : null;\r\n      //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n      //console.log(newSex)\r\n      //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n      basicInfo.dob = patientObj.dateOfBirth;\r\n      basicInfo.firstName = patientObj.firstName;\r\n      basicInfo.dateOfRegistration = patientObj.dateOfRegistration;\r\n      basicInfo.middleName = patientObj.otherName;\r\n      basicInfo.lastName = patientObj.surname;\r\n      basicInfo.hospitalNumber =\r\n        hospitalNumber && hospitalNumber ? hospitalNumber.value : \"\";\r\n      setObjValues({\r\n        ...objValues,\r\n        uniqueId: hospitalNumber ? hospitalNumber.value : \"\",\r\n      });\r\n      basicInfo.maritalStatusId =\r\n        patientObj && patientObj.maritalStatus\r\n          ? patientObj.maritalStatus.id\r\n          : \"\";\r\n      basicInfo.employmentStatusId =\r\n        patientObj && patientObj.employmentStatus\r\n          ? patientObj.employmentStatus.id\r\n          : \"\";\r\n      basicInfo.genderId =\r\n        patientObj && patientObj.gender ? patientObj.gender.id : null;\r\n      //basicInfo.sexId=patientObj.sex\r\n      basicInfo.educationId =\r\n        patientObj && patientObj.education ? patientObj.education.id : \"\";\r\n      basicInfo.phoneNumber = phone && phone.value ? phone.value : \"\";\r\n      basicInfo.altPhonenumber =\r\n        altphone && altphone.value ? altphone.value : \"\";\r\n      basicInfo.email = email && email.value ? email.value : \"\";\r\n      basicInfo.address = country && country.city ? country.city : \"\";\r\n      basicInfo.landmark =\r\n        country.line && country.line.length > 0 ? country.line[0] : \"\";\r\n      basicInfo.countryId =\r\n        country && country.countryId ? country.countryId : \"\";\r\n      setStateByCountryId(country.countryId);\r\n      getProvincesId(country && country.stateId ? country.stateId : \"\");\r\n      basicInfo.stateId = country && country.stateId ? country.stateId : \"\";\r\n      basicInfo.district = country && country.district ? country.district : \"\";\r\n      const patientAge = calculate_age(\r\n        moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\")\r\n      );\r\n      basicInfo.age = patientAge;\r\n      setfemaleStatus(patientObj.sex === \"Female\" ? true : false);\r\n      if (patientObj.age <= 14) {\r\n        setOvcEnrolled(true);\r\n      }\r\n      basicInfo.ninNumber = patientObj.ninNumber;\r\n    }\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      alert(\"Date of registration can not be earlier than date of birth\");\r\n    }\r\n  }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n  //Get list of Source of Referral\r\n  const getSex = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        const getSexId = response.data.find(\r\n          (x) => x.display === patientObj.sex\r\n        ); //get patient sex ID by filtering the request\r\n        basicInfo.sexId = getSexId.display;\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data);\r\n  }, []);\r\n  const loadOrganisationUnitsByParentId = async (parentId) => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get States from selected country\r\n  const getStates = (e) => {\r\n    const getCountryId = e.target.value;\r\n\r\n    setStateByCountryId(getCountryId);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setStates(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //Calculate Date of birth\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 18) {\r\n        alert(\"The child is less than 18months\");\r\n        setDisabledAgeBaseOnAge(true);\r\n      } else {\r\n        setDisabledAgeBaseOnAge(false);\r\n      }\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: \"\" });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n    if (basicInfo.age !== \"\" && basicInfo.age >= 60) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      if (e.target.value !== \"\" && e.target.value >= 60) {\r\n        toggle();\r\n      }\r\n      if (e.target.value <= 1) {\r\n        setDisabledAgeBaseOnAge(true);\r\n      } else {\r\n        setDisabledAgeBaseOnAge(false);\r\n      }\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: Math.abs(e.target.value) });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\";\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? \"\"\r\n      : \"Hospital Number  is required.\";\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n    //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n    temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\";\r\n    temp.dateOfRegistration1 = basicInfo.dateOfRegistration\r\n      ? \"\"\r\n      : \"Date of Registration is required.\";\r\n    temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\";\r\n    temp.address = basicInfo.address ? \"\" : \"Address is required.\";\r\n    temp.phoneNumber = basicInfo.phoneNumber\r\n      ? \"\"\r\n      : \"Phone Number  is required.\";\r\n    temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\";\r\n    temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\";\r\n    temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\";\r\n    //HIV FORM VALIDATION\r\n    temp.uniqueClientId = objValues.uniqueClientId\r\n      ? \"\"\r\n      : \"Unique ID is required.\";\r\n    temp.dateEnrolled = objValues.dateEnrolled\r\n      ? \"\"\r\n      : \"Date enrolled is required.\";\r\n    temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest\r\n      ? \"\"\r\n      : \"date of last HIV test is required.\";\r\n    temp.dateReferredForPrep = objValues.dateReferredForPrep\r\n      ? \"\"\r\n      : \"Date referred is required.\";\r\n    temp.hivTestingPoint = objValues.hivTestingPoint\r\n      ? \"\"\r\n      : \"Hiv test point is required.\";\r\n    temp.prepRiskType = objValues.prepRiskType\r\n      ? \"\"\r\n      : \"PrEp risk type is required.\";\r\n    temp.prepSupporter = objValues.prepSupporter\r\n      ? \"\"\r\n      : \"PrEp supporter is required.\";\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  //Handle Input Change for Basic Infor\r\n  const handleInputChangeBasic = (e) => {\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    //manupulate inpute fields base on gender/sex\r\n    if (e.target.name === \"sexId\" && e.target.value === \"Female\") {\r\n      setfemaleStatus(true);\r\n    }\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"ninNumber\" && e.target.value !== \"\") {\r\n      const ninNumberValue = checkNINLimit(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: ninNumberValue });\r\n    }\r\n  };\r\n\r\n  const checkNINLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? \"\" : \"First Name is required\";\r\n    temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? \"\"\r\n      : \"Relationship Type is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = (e) => {\r\n    if (validateRelatives()) {\r\n      setContacts([...contacts, relatives]);\r\n    }\r\n  };\r\n  const handleDeleteRelative = (index) => {\r\n    contacts.splice(index, 1);\r\n    setContacts([...contacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    contacts.splice(index, 1);\r\n  };\r\n  const getRelationship = (relationshipId) => {\r\n    const relationship = relationshipOptions.find(\r\n      (obj) => obj.id == relationshipId\r\n    );\r\n    return relationship ? relationship.display : \"\";\r\n  };\r\n  const handleInputChangeRelatives = (e) => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n\r\n  const CareEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setCarePoints(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const HivStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setHivStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setKP(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const limit = 10;\r\n    setRelatives({ ...relatives, [inputName]: e.slice(0, limit) });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setErrors({ ...errors, [inputName]: \"\" });\r\n    setBasicInfo({ ...basicInfo, [inputName]: e.slice(0, limit) });\r\n  };\r\n  //Handle CheckBox\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setOvcEnrolled(true);\r\n    } else {\r\n      setOvcEnrolled(false);\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    history.push({ pathname: \"/\" });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const getSexId = genders.find((x) => x.display === basicInfo.sexId); //get patient sex ID by filtering the request\r\n    basicInfo.sexId = getSexId && getSexId.id ? getSexId.id : \"\";\r\n    let newConatctsInfo = [];\r\n    //Manipulate relatives contact  address:\"\",\r\n    const actualcontacts =\r\n      contacts &&\r\n      contacts.length > 0 &&\r\n      contacts.map((x) => {\r\n        const contactInfo = {\r\n          address: {\r\n            line: [x.address],\r\n          },\r\n          contactPoint: {\r\n            type: \"phone\",\r\n            value: x.phone,\r\n          },\r\n          firstName: x.firstName,\r\n          fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n          relationshipId: x.relationshipId,\r\n          surname: x.lastName,\r\n          otherName: x.middleName,\r\n        };\r\n\r\n        newConatctsInfo.push(contactInfo);\r\n      });\r\n    if (validate()) {\r\n      try {\r\n        const patientForm = {\r\n          id: \"\",\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.address,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: \"\",\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: newConatctsInfo,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.sexId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n        const phone = {\r\n          type: \"phone\",\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: \"email\",\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: \"altphone\",\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        patientForm.id = patientId;\r\n        //objValues.personDto=patientForm;\r\n        objValues.personId = patientId;\r\n        const response = await axios.post(`${baseUrl}prep`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        toast.success(\" Register save successful\");\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        let errorMessage =\r\n          error.response.data && error.response.data.apierror.message !== \"\"\r\n            ? error.response.data.apierror.message\r\n            : \"An error occured while registering a patient !\";\r\n        toast.error(errorMessage, {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>PrEP /</Link> Registration\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Link\r\n            to={{\r\n              pathname: \"/\",\r\n              state: \"users\",\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end ms-1\"\r\n              style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              startIcon={<TiArrowBack />}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                Back{\" \"}\r\n              </span>\r\n            </Button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    {userDetail === null\r\n                      ? \"Basic Information\"\r\n                      : \"Edit User Information\"}\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration*{\" \"}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfRegistration\"\r\n                            min=\"1983-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            id=\"dateOfRegistration\"\r\n                            value={basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            //disabled\r\n                          />\r\n                          {errors.dateOfRegistration1 !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration1}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">Hospital Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            //disabled\r\n                          />\r\n                          {errors.hospitalNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">EMR Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"emrNumber\"\r\n                            id=\"emrNumber\"\r\n                            disabled=\"true\"\r\n                            value={1094328}\r\n                            //onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">First Names *</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            //disabled\r\n                          />\r\n                          {errors.firstName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            //disabled\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Last Name *</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            //disabled\r\n                          />\r\n                          {errors.lastName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Sex *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.display}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== \"\" || errors.sexId !== null ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date Of Birth</Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                //disabled\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                //disabled\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dob\"\r\n                            id=\"dob\"\r\n                            min=\"1940-01-01\"\r\n                            max={basicInfo.dateOfRegistration}\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            id=\"age\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      {/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            //disabled\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Employment Status *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            //disabled\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Education Level *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            //disabled\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"ninNumber\">\r\n                            National Identity Number (NIN){\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"ninNumber\"\r\n                            id=\"ninNumber\"\r\n                            value={basicInfo.ninNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Contact Details\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className={\"row\"}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Phone Number *</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: \"100%\",\r\n                            border: \"1px solid #014D88\",\r\n                          }}\r\n                          inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                          country={\"ng\"}\r\n                          placeholder=\"(234)7099999999\"\r\n                          maxLength={5}\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          value={basicInfo.phoneNumber}\r\n                          onChange={(e) => {\r\n                            checkPhoneNumberBasic(e, \"phoneNumber\");\r\n                          }}\r\n                        />\r\n                        {errors.phoneNumber !== \"\" ||\r\n                        errors.phoneNumber !== null ? (\r\n                          <span className={classes.error}>\r\n                            {errors.phoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Alt. Phone Number</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: \"100%\",\r\n                            border: \"1px solid #014D88\",\r\n                          }}\r\n                          inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                          country={\"ng\"}\r\n                          placeholder=\"(234)7099999999\"\r\n                          value={basicInfo.altPhonenumber}\r\n                          onChange={(e) => {\r\n                            checkPhoneNumberBasic(e, \"altPhonenumber\");\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          onChange={handleInputChangeBasic}\r\n                          value={basicInfo.email}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Country *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"countryId\"\r\n                          id=\"countryId\"\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          value={basicInfo.countryId}\r\n                          onChange={getStates}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          {countries.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.countryId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.countryId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>State *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          value={basicInfo.stateId}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          onChange={getProvinces}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {states.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Province/District/LGA *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          value={basicInfo.district}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          onChange={handleInputChangeBasic}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.district !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className={\"row\"}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Street Address*</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          id=\"address\"\r\n                          value={basicInfo.address}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.address !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.address}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Landmark</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          id=\"landmark\"\r\n                          value={basicInfo.landmark}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    {contacts && contacts.length > 0 && (\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        <table style={{ width: \"100%\" }} className=\"mb-3\">\r\n                          <thead className=\"mb-3\">\r\n                            <tr>\r\n                              <th>Relationship Type</th>\r\n                              <th>Name</th>\r\n                              <th>Phone</th>\r\n                              <th>Address</th>\r\n                              <th>Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"mb-3\">\r\n                            {contacts.map((item, index) => {\r\n                              return (\r\n                                <tr key={item.index} className=\"mb-3\">\r\n                                  <td>\r\n                                    {getRelationship(item.relationshipId)}\r\n                                  </td>\r\n                                  <td>\r\n                                    {item.firstName +\r\n                                      \" \" +\r\n                                      item.middleName +\r\n                                      \" \" +\r\n                                      item.lastName}\r\n                                  </td>\r\n                                  <td>{item.phone}</td>\r\n                                  <td>{item.address}</td>\r\n                                  <td>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                      onClick={() =>\r\n                                        handleEditRelative(item, index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"edit\" />\r\n                                    </button>\r\n                                    &nbsp;&nbsp;\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-danger btn-sm removeRow\"\r\n                                      onClick={(e) =>\r\n                                        handleDeleteRelative(index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"trash\" />\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                      {showRelative && (\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"relationshipType\">\r\n                                    Relationship Type *\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"relationshipId\"\r\n                                    id=\"relationshipId\"\r\n                                    value={relatives.relationshipId}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  >\r\n                                    <option value={\"\"}>Select</option>\r\n                                    {relationshipOptions.map(\r\n                                      (relative, index) => (\r\n                                        <option\r\n                                          key={relative.id}\r\n                                          value={relative.id}\r\n                                        >\r\n                                          {relative.display}\r\n                                        </option>\r\n                                      )\r\n                                    )}\r\n                                  </select>\r\n                                  {errors.relationshipId !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.relationshipId}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"cfirstName\">First Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={relatives.firstName}\r\n                                    id=\"firstName\"\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {errors.firstName !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.firstName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Middle Name</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={relatives.middleName}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Last Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={relatives.lastName}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {errors.lastName !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.lastName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactPhoneNumber\">\r\n                                    Phone Number\r\n                                  </Label>\r\n                                  <PhoneInput\r\n                                    containerStyle={{\r\n                                      width: \"100%\",\r\n                                      border: \"1px solid #014D88\",\r\n                                    }}\r\n                                    inputStyle={{\r\n                                      width: \"100%\",\r\n                                      borderRadius: \"0px\",\r\n                                    }}\r\n                                    country={\"ng\"}\r\n                                    placeholder=\"(234)7099999999\"\r\n                                    name=\"phone\"\r\n                                    value={relatives.phone}\r\n                                    id=\"phone\"\r\n                                    onChange={(e) => {\r\n                                      checkPhoneNumber(e.slice(0, 10), \"phone\");\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactEmail\">Email</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={relatives.email}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactAddress\">Address</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={relatives.address}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleSaveRelationship}\r\n                                >\r\n                                  Add\r\n                                </MatButton>\r\n                              </div>\r\n\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"secondary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleCancelSaveRelationship}\r\n                                >\r\n                                  Cancel\r\n                                </MatButton>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\"></div>\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleAddRelative}\r\n                    style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                  >\r\n                    Add a Relative/Next Of Kin\r\n                  </MatButton>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Prep Enrollment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <h2>PrEP Registration </h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Unique Client's ID * </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"uniqueClientId\"\r\n                          id=\"uniqueClientId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.uniqueClientId}\r\n                          required\r\n                        />\r\n                        {errors.uniqueClientId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.uniqueClientId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"ancUnique\"\r\n                          id=\"ancUnique\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.ancUnique}\r\n                          required\r\n                        />\r\n                        {errors.ancUnique !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.ancUnique}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date enrolled in PrEP *</Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dateEnrolled\"\r\n                          id=\"dateEnrolled\"\r\n                          value={objValues.dateEnrolled}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateEnrolled !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateEnrolled}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"prepRiskType\"\r\n                          id=\"prepRiskType\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.prepRiskType}\r\n                          required\r\n                        >\r\n                          <option value=\"\"> </option>\r\n\r\n                          {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.prepRiskType !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.prepRiskType}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>HIV Testing Point </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"hivTestingPoint\"\r\n                          id=\"hivTestingPoint\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.hivTestingPoint}\r\n                          required\r\n                        >\r\n                          <option value=\"Select\"> </option>\r\n\r\n                          {hivStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.hivTestingPoint !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.hivTestingPoint}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date of last HIV Negative test*</Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dateOfLastHivNegativeTest\"\r\n                          id=\"dateOfLastHivNegativeTest\"\r\n                          value={objValues.dateOfLastHivNegativeTest}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateOfLastHivNegativeTest !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateOfLastHivNegativeTest}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date Referred for PrEP * </Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dateReferredForPrep\"\r\n                          id=\"dateReferredForPrep\"\r\n                          value={objValues.dateReferredForPrep}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateReferredForPrep !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateReferredForPrep}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>PrEP Supporter </Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prepSupporter\"\r\n                          id=\"prepSupporter\"\r\n                          value={objValues.prepSupporter}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.prepSupporter !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.prepSupporter}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* END OF HIV ENROLLEMENT FORM */}\r\n              {saving ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                disabled={disabledAgeBaseOnAge}\r\n                onClick={handleSubmit}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                onClick={handleCancel}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React, { useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Form } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm1ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { ArrowForward } from \"@material-ui/icons\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { useCallback } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n// import { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst EnrolmentSubmittedForm = ({\r\n  action,\r\n  setStep,\r\n  userStatus,\r\n  patientObj,\r\n  allPatientInfo,\r\n}) => {\r\n  const [patientInfo, setPatientInfo] = useState({ ...patientObj });\r\n\r\n  const [info, setInfo] = useState({\r\n    countryId: 1,\r\n    stateId: \"\",\r\n    dateOfBirth: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    district: \"\",\r\n    value: \"\",\r\n  });\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    bmi: \"\",\r\n    hepatitisB: \"\",\r\n    height: \"\",\r\n    // streetAddress: \"\",\r\n    // address: [],\r\n    careEntryPoint: \"\",\r\n    age: \"\",\r\n    phoneNumber: \"\",\r\n    altPhonenumber: \"\",\r\n    pregnancy: \"\",\r\n    breastfeeding: \"\",\r\n    historyOfUsingAbusedSubstance: \"\",\r\n    screening: {\r\n      dateOfFirstHepatitisBPositiveScreening: \"\",\r\n      hepatitisC: \"\",\r\n    },\r\n    personDto: {\r\n      active: true,\r\n      address: [\r\n        {\r\n          countryId: \"\",\r\n          stateId: \"\",\r\n          district: \"\",\r\n        },\r\n      ],\r\n      dateOfBirth: \"\",\r\n      dateOfRegistration: \"\",\r\n      educationId: \"\",\r\n      employmentStatusId: \"\",\r\n      firstName: \"\",\r\n      genderId: patientInfo?.gender.toLowerCase() === \"female\" ? 377 : 376,\r\n      identifier: [\r\n        {\r\n          assignerId: 0,\r\n          type: \"\",\r\n          value: \"\",\r\n        },\r\n      ],\r\n      isDateOfBirthEstimated: \"\",\r\n      maritalStatusId: \"\",\r\n      ninNumber: \"\",\r\n      organizationId: \"\",\r\n      otherName: \"\",\r\n      sexId: patientInfo?.gender.toLowerCase === \"female\" ? 377 : 376,\r\n      surname: \"\",\r\n    },\r\n    personId: \"\",\r\n    weight: \"\",\r\n  });\r\n\r\n  console.log(patientObj, patientObj?.careEntryPoint);\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [genders, setGenders] = useState([]);\r\n\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [hepatitisStatus, setHepatitisStatus] = useState([\r\n    { id: \"Reactive\", display: \" Reactive\" },\r\n    { id: \"Non-reactive\", display: \" Non-Reactive\" },\r\n  ]);\r\n  const [provinces, setProvinces] = useState([]);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  // const [isDateOfBirthEstimated, setIsDateOfBirthEstimated] = useState(false);\r\n\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n\r\n  const sexCodeset = async () => {\r\n    const response = await axios.get(`${apiUrl}application-codesets/v2/SEX`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    setGenders(response.data.sort());\r\n  };\r\n\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const CareEntryPoint = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/POINT_ENTRY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setCarePoints(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getHepatitisPoint = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setHepatitisStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/ENROLLMENT_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${apiUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data.sort());\r\n  }, []);\r\n\r\n  const loadOrganisationUnitsByParentId = async (parentId) => {\r\n    const response = await axios.get(\r\n      `${apiUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n\r\n    return age_now;\r\n  };\r\n  const phoneNumberFormatCheck = (phone) => {\r\n    //console.log(\"err\", phone);\r\n    if (\r\n      phone != undefined &&\r\n      typeof phone?.value !== null &&\r\n      typeof phone?.value !== \"undefined\" &&\r\n      phone?.value?.charAt(0) === \"0\"\r\n    ) {\r\n      phone.value = phone.value.replace(\"0\", \"234\");\r\n    }\r\n    return phone;\r\n  };\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${apiUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      if (e.target.value !== \"\" && e.target.value >= 60) {\r\n        toggle();\r\n      }\r\n      if (e.target.value <= 1) {\r\n        setDisabledAgeBaseOnAge(true);\r\n      } else {\r\n        setDisabledAgeBaseOnAge(false);\r\n      }\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, \"years\");\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n\r\n      basicInfo.personDto.dateOfBirth = moment(dobNew).format(\"YYYY-MM-DD\");\r\n\r\n      setInfo({ ...info, dateOfBirth: moment(dobNew).format(\"YYYY-MM-DD\") });\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: Math.abs(e.target.value) });\r\n  };\r\n\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: \"\" });\r\n    }\r\n    // setBasicInfo({\r\n    //   ...basicInfo,\r\n    //   personDto: {\r\n    //     ...basicInfo.personDto,\r\n    //     dateOfRegistration: e.target.value,\r\n    //   },\r\n    // });\r\n\r\n    // setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n    if (basicInfo.age !== \"\" && basicInfo.age >= 60) {\r\n      toggle();\r\n    }\r\n  };\r\n\r\n  //Get States from selected country\r\n  const getStates = () => {\r\n    const getCountryId = info?.countryId;\r\n    setStateByCountryId(1);\r\n    setInfo({ ...info, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId(id) {\r\n    axios\r\n      .get(`${apiUrl}organisation-units/parent-organisation-units/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setStates(response.data.sort());\r\n        // console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e?.target?.value;\r\n    // setBasicInfo({ ...basicInfo, stateId: e?.target?.value });\r\n    axios\r\n      .get(`${apiUrl}organisation-units/parent-organisation-units/${stateId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setProvinces(response.data.sort());\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const postDataWithToken = async (data) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${apiUrl}hepatitis/update-hepatitis-enrollment/${patientObj.enrollmentId}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      // Handle the response if needed\r\n      console.log(\"Post successful:\", response.data);\r\n      toast.success(\"Enrolment submitted successfully\");\r\n\r\n      setCookie(\r\n        \"enrollmentIds\",\r\n        {\r\n          enrollmentId: response.data?.enrollmentId,\r\n          enrollmentUuid: response.data?.enrollmentUuid,\r\n        },\r\n        1\r\n      );\r\n      //   setStep(1);\r\n      return response.data;\r\n    } catch (error) {\r\n      // Handle any errors that occurred during the request\r\n      toast.error(\"Enrolment failed\");\r\n      console.error(\"Error posting data:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    const restructuredEnrolmentPayload = {\r\n      bmi: values.weight / values.height,\r\n      breastfeeding: values.breastfeeding,\r\n      coreEntryPoint: values.coreEntryPoint,\r\n      height: values.height,\r\n      hepatitisB: values.hepatitisB,\r\n      historyOfUsingAbusedSubstance: values.historyOfUsingAbusedSubstance,\r\n\r\n      personDto: {\r\n        active: true,\r\n        address: [\r\n          {\r\n            countryId: values.countryId,\r\n            stateId: values.stateId,\r\n          },\r\n        ],\r\n        dateOfBirth: values.dateOfBirth,\r\n        dateOfRegistration: values.dateOfRegistration,\r\n        educationId: values.educationId,\r\n        employmentStatusId: values.employmentStatusId,\r\n        firstName: values.firstName,\r\n        genderId: values.sexId,\r\n        identifier: [\r\n          {\r\n            assignerId: 0,\r\n            type: \"string\",\r\n            value: \"string\",\r\n          },\r\n        ],\r\n        isDateOfBirthEstimated:\r\n          values.isDateOfBirthEstimated === \"true\" ? true : false,\r\n        maritalStatusId: values.maritalStatusId,\r\n        ninNumber: values.ninNumber,\r\n        organizationId: 0,\r\n        otherName: values.otherName,\r\n        sexId: values.sexId,\r\n        surname: values.surname,\r\n      },\r\n      pregnancy: values.pregnancy,\r\n      screening: {\r\n        dateOfFirstHepatitisBPositiveScreening:\r\n          values.dateOfFirstHepatitisBPositiveScreening,\r\n        hepatitisC: values.hepatitisC,\r\n      },\r\n      weight: values.weight,\r\n    };\r\n\r\n    setCookie(\"hepatitis1\", values, 1);\r\n    setCookie(\"heaptitis1PayloadValue\", restructuredEnrolmentPayload, 1);\r\n    postDataWithToken(restructuredEnrolmentPayload, \"hepatitis/enrollment\");\r\n    // setStep(1);\r\n  };\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm1ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis1\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${apiUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const calculateBMI = () => {\r\n    let mass = basicInfo.weight;\r\n    let heightSquare = basicInfo.height * basicInfo.height;\r\n\r\n    setBasicInfo({ ...basicInfo, bmi: mass / heightSquare });\r\n\r\n    console.log(mass / heightSquare);\r\n\r\n    return mass / heightSquare;\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          isDateOfBirthEstimated: false,\r\n        },\r\n      });\r\n    } else if (e.target.value == \"Estimated\") {\r\n      setAgeDisabled(false);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          isDateOfBirthEstimated: true,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // to capture the error\r\n  let temp = { ...errors };\r\n  const validate = () => {\r\n    if (userStatus === \"new\") {\r\n      //date of registration\r\n      temp.dateOfRegistration = info.dateOfRegistration\r\n        ? \"\"\r\n        : \"Date of Registration is required.\";\r\n\r\n      //hospital number\r\n      temp.hospitalNumber = info.value ? \"\" : \"Hospital Id is required\";\r\n\r\n      //Names\r\n\r\n      temp.surname = basicInfo.personDto.surname ? \"\" : \"Surname is required\";\r\n      temp.firstName = basicInfo.personDto.firstName\r\n        ? \"\"\r\n        : \"First name is required\";\r\n\r\n      //phone number\r\n      temp.phone = basicInfo.phone ? \"\" : \"Phone Number  is required.\";\r\n\r\n      //state and district\r\n\r\n      temp.stateId = info.stateId ? \"\" : \"State is required.\";\r\n      temp.district = info.district ? \"\" : \"Province/LGA is required.\";\r\n\r\n      //date of birth\r\n      temp.dateOfBirth = info.dateOfBirth ? \"\" : \"Date of Birth is required.\";\r\n\r\n      // Marital Status\r\n\r\n      temp.maritalStatusId = basicInfo.maritalStatusId\r\n        ? \"\"\r\n        : \"Marital Status is required\";\r\n\r\n      // Education\r\n      temp.educationId = info.educationId ? \"\" : \"Education is required\";\r\n\r\n      //Relationship\r\n      temp.relationship = basicInfo.relationship\r\n        ? \"\"\r\n        : \"Relationship is required\";\r\n\r\n      //sex\r\n      temp.genderId = basicInfo.personDto.genderId ? \"\" : \"sex is required\";\r\n    }\r\n\r\n    temp.careEntryPoint = basicInfo.careEntryPoint\r\n      ? \"\"\r\n      : \"careEntryPoint is required\";\r\n    temp.pregnancy = basicInfo.pregnancy ? \"\" : \"pregnancy status is required\";\r\n    temp.weight = basicInfo.weight ? \"\" : \"Weight is required\";\r\n    temp.height = basicInfo.height ? \"\" : \"Height is required\";\r\n    temp.hepatitisB = basicInfo.hepatitisB ? \"\" : \"HepatitisB is required\";\r\n    temp.breastfeeding = basicInfo.breastfeeding\r\n      ? \"\"\r\n      : \"Breastfeeding status is required\";\r\n    temp.dateOfFirstHepatitisBPositiveScreening = basicInfo.screening\r\n      .dateOfFirstHepatitisBPositiveScreening\r\n      ? \"\"\r\n      : \"Date of first HepatitisB positive screening is required\";\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setBasicInfo({ ...basicInfo, [inputName]: e });\r\n  };\r\n\r\n  // handle input changes\r\n  const handleInputChangeBasic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    //manupulate inpute fields base on gender/sex\r\n    // if (e.target.name === \"sexId\" && e.target.value === \"377\") {\r\n    //   setfemaleStatus(true);\r\n    // }\r\n    if (e.target.name === \"firstName\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: name,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"genderId\" && e.target.value !== \"\") {\r\n      console.log(e.target.name);\r\n\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"surname\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: name,\r\n        },\r\n      });\r\n    } else if (\r\n      e.target.name === \"dateOfFirstHepatitisBPositiveScreening\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        screening: {\r\n          ...basicInfo.screening,\r\n          dateOfFirstHepatitisBPositiveScreening: e.target.value,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"otherName\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: name,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"stateId\" && e.target.value !== \"\") {\r\n      getProvinces(e);\r\n    } else if (e.target.name === \"hepatitisC\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        screening: {\r\n          ...basicInfo.screening,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      });\r\n    } else if (e.target.name === \"maritalStatusId\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      });\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleInputChangesForInfo = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (e.target.name === \"hospitalNumber\") {\r\n      setInfo({ ...info, value: e.target.value });\r\n    } else {\r\n      setInfo({ ...info, [e.target.name]: e.target.value });\r\n    }\r\n    //manupulate inpute fields base on gender/sex\r\n    if (e.target.name === \"hospitalNumber\") {\r\n      if (e.target.value !== \"\") {\r\n        async function getHosiptalNumber() {\r\n          const hosiptalNumber = e.target.value;\r\n          const response = await axios.post(\r\n            `${apiUrl}patient/exist/hospital-number`,\r\n            hosiptalNumber,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"text/plain\",\r\n              },\r\n            }\r\n          );\r\n          if (response.data !== true) {\r\n            setHospitalNumStatus(false);\r\n            errors.hospitalNumber = \"\";\r\n          } else {\r\n            errors.hospitalNumber = \"\";\r\n            toast.error(\"Error! Hosiptal Number already exist\");\r\n            setHospitalNumStatus(true);\r\n          }\r\n        }\r\n        getHosiptalNumber();\r\n      }\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: e.target.value,\r\n            },\r\n          ],\r\n        },\r\n      });\r\n\r\n      getProvinces(e);\r\n    }\r\n    if (e.target.name === \"stateId\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          address: [\r\n            {\r\n              countryId: info.countryId,\r\n              stateId: e.target.value,\r\n              district: info.district,\r\n            },\r\n          ],\r\n        },\r\n      });\r\n\r\n      getProvinces(e);\r\n    }\r\n    if (e.target.name === \"district\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          address: [\r\n            {\r\n              countryId: info.countryId,\r\n              stateId: info.stateId,\r\n              district: e.target.value,\r\n            },\r\n          ],\r\n        },\r\n      });\r\n\r\n      // getProvinces(e);\r\n    }\r\n    if (e.target.name === \"dateOfBirth\" && e.target.value !== \"\") {\r\n      handleDobChange(e);\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          dateOfBirth: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"dateOfRegistration\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          dateOfRegistration: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"educationId\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          educationId: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"employmentStatusId\" && e.target.value !== \"\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          employmentStatusId: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (\r\n      e.target.name === \"dateOfRdistrictegistration\" &&\r\n      e.target.value !== \"\"\r\n    ) {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        personDto: {\r\n          ...basicInfo.personDto,\r\n          address: [\r\n            {\r\n              countryId: info.countryId,\r\n              stateId: info.stateId,\r\n              district: e.target.value,\r\n            },\r\n          ],\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validating the input\r\n    window.scrollTo(0, 0);\r\n\r\n    if (validate()) {\r\n      postDataWithToken(basicInfo);\r\n    }\r\n  };\r\n\r\n  //   fetch view hepatitis\r\n\r\n  const viewHepatitisEnrollment = (value) => {\r\n    axios\r\n      .get(\r\n        `${apiUrl}hepatitis/view-hepatitis-enrollment/${patientObj.personUuid}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setPatientInfo({ ...patientInfo, ...response.data });\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  console.log(\"this is the person object\", patientInfo);\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n    sexCodeset();\r\n    PregnancyStatus();\r\n    CareEntryPoint();\r\n    SourceReferral();\r\n    loadMaritalStatus();\r\n    loadTopLevelCountry();\r\n    loadRelationships();\r\n    loadOrganisationUnitsByParentId();\r\n    EnrollmentSetting();\r\n    loadEducation();\r\n    getProvinces();\r\n    setStateByCountryId();\r\n    loadOccupation();\r\n    getStates();\r\n    GetCountry();\r\n    // getHepatitisPoint();\r\n    // if (action === \"view\") {\r\n    viewHepatitisEnrollment();\r\n    // }\r\n  }, []);\r\n\r\n  //   runs when never there is change in patient form\r\n  useEffect(() => {\r\n    setInfo({\r\n      countryId: 1,\r\n      stateId: allPatientInfo?.address?.address[0]?.stateId,\r\n      dateOfBirth: patientInfo?.dateOfBirth,\r\n      educationId: patientInfo?.educationId,\r\n      employmentStatusId: patientInfo?.employmentStatusId,\r\n      district: allPatientInfo?.address?.address[0]?.district,\r\n      value: patientInfo?.hospitalNumber,\r\n    });\r\n\r\n    setBasicInfo({\r\n      bmi: \"\",\r\n      hepatitisB: patientInfo?.hepatitisB,\r\n      height: patientInfo?.height,\r\n      // streetAddress: \"\",\r\n      // address: [],\r\n      careEntryPoint: patientInfo?.careEntryPoint,\r\n      age: patientInfo?.age,\r\n      phoneNumber: patientInfo?.phoneNumber,\r\n      altPhonenumber: patientInfo?.altPhonenumber,\r\n      pregnancy: patientInfo?.pregnancy,\r\n      breastfeeding: patientInfo?.breastfeeding,\r\n      historyOfUsingAbusedSubstance: patientInfo?.historyOfUsingAbusedSubstance,\r\n      screening: {\r\n        dateOfFirstHepatitisBPositiveScreening: `${\r\n          patientInfo?.screening?.dateOfFirstHepatitisBPositiveScreening.year\r\n        }-${\r\n          patientInfo?.screening?.dateOfFirstHepatitisBPositiveScreening\r\n            .monthValue\r\n        }-${\r\n          patientInfo?.screening?.dateOfFirstHepatitisBPositiveScreening.dayOfMonth.toString()\r\n            .length > 1\r\n            ? patientInfo?.screening?.dateOfFirstHepatitisBPositiveScreening\r\n                .dayOfMonth\r\n            : \"0\" +\r\n              patientInfo?.screening?.dateOfFirstHepatitisBPositiveScreening\r\n                .dayOfMonth\r\n        }`,\r\n        hepatitisC: patientInfo?.screening?.hepatitisC,\r\n      },\r\n      personDto: {\r\n        active: true,\r\n        address: [\r\n          {\r\n            countryId: info.countryId,\r\n            stateId: info.stateId,\r\n            district: info.district,\r\n          },\r\n        ],\r\n        dateOfBirth: patientInfo.dateOfBirth,\r\n        dateOfRegistration: patientInfo?.dateOfRegistration,\r\n        educationId: patientInfo?.educationId,\r\n        employmentStatusId: patientInfo?.employmentStatusId,\r\n        firstName: patientInfo?.firstName,\r\n        genderId: patientInfo?.gender.toLowerCase() === \"female\" ? 377 : 376,\r\n        identifier: [\r\n          {\r\n            assignerId: 0,\r\n            type: \"\",\r\n            value: \"\",\r\n          },\r\n        ],\r\n        isDateOfBirthEstimated: patientInfo?.isDateOfBirthEstimated,\r\n        maritalStatusId: patientInfo?.maritalStatusId,\r\n        ninNumber: patientInfo?.ninNumber,\r\n        organizationId: patientInfo?.organizationId,\r\n        otherName: patientInfo?.otherName,\r\n        sexId: patientInfo?.gender.toLowerCase === \"female\" ? 377 : 376,\r\n        surname: patientInfo?.surname,\r\n      },\r\n      personId: patientInfo?.id,\r\n      weight: patientInfo?.weight,\r\n    });\r\n  }, [patientInfo, allPatientInfo]);\r\n\r\n  // calculate bmi when weight and height changes\r\n  useEffect(() => {\r\n    if (basicInfo.weight && basicInfo.height) {\r\n      calculateBMI();\r\n    }\r\n  }, [basicInfo.weight, basicInfo.height, info.stateId]); // Runs whenever 'data' changes\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Demography\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfRegistration\">\r\n                          Date of registration\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          name=\"dateOfRegistration\"\r\n                          id=\"dateOfRegistration\"\r\n                          value={basicInfo?.personDto.dateOfRegistration}\r\n                          onChange={handleInputChangesForInfo}\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.dateOfRegistration !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateOfRegistration}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"patientId\">\r\n                          Hospital Number{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          name=\"hospitalNumber\"\r\n                          id=\"hospitalNumber\"\r\n                          // value={info.value}\r\n                          value={info.value}\r\n                          onChange={handleInputChangesForInfo}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.hospitalNumber !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.hospitalNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                        {hospitalNumStatus === true ? (\r\n                          <span className={classes.error}>\r\n                            {\"Hospital number already exist\"}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                        {/* {hospitalNumStatus2 === true ? (\r\n                          <span className={classes.success}>\r\n                            {\"Hospital number is OK.\"}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"surname\">\r\n                          Surname <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"surname\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          id=\"surname\"\r\n                          // value={basicInfo.personDto.surname}\r\n                          value={basicInfo.personDto.surname}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.surname !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.surname}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"firstName\">\r\n                          Firstname <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          id=\"firstName\"\r\n                          // value={basicInfo.personDto.firstName}\r\n                          value={basicInfo.personDto.firstName}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.firstName !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.firstName}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"otherName\">Other name </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"otherName\"\r\n                          id=\"otherName\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          // value={basicInfo.personDto.otherName}\r\n                          value={basicInfo.personDto.otherName}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.otherName !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.otherName}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Phone Number <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: \"100%\",\r\n                            border: \"1px solid #014D88\",\r\n                            // backgroundColor: \"#e9ecef !important\",\r\n                          }}\r\n                          disabled={action === \"view\" ? true : false}\r\n                          inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                          country={\"ng\"}\r\n                          placeholder=\"(234)7099999999\"\r\n                          maxLength={5}\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          masks={{\r\n                            ng: \"...-...-....\",\r\n                            at: \"(....) ...-....\",\r\n                          }}\r\n                          // value={basicInfo.phoneNumber}\r\n\r\n                          value={basicInfo?.phoneNumber}\r\n                          onChange={(e) => {\r\n                            setErrors({ ...errors, phone: \"\" });\r\n                            checkPhoneNumberBasic(e, \"phone\");\r\n                          }}\r\n                          //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                        />\r\n                        {errors.phone !== \"\" ? (\r\n                          <span className={classes.error}>{errors.phone}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                        {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {/* <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"residentialAddress\">\r\n                            Residential Address{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"residentialAddress\"\r\n                            id=\"residentialAddress\"\r\n                            value={basicInfo.residentialAddress}\r\n                            onChange={handleInputChangeBasic}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.residentialAddress !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.residentialAddress}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div> */}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"countryId\">\r\n                          Country <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          // type=\"text\"\r\n                          name=\"countryId\"\r\n                          id=\"countryId\"\r\n                          value={info.countryId}\r\n                          // disabled={action === \"view\" ? true : false}\r\n                          onChange={handleInputChangesForInfo}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          disabled\r\n                        >\r\n                          {countries.map((item, index) => (\r\n                            <option value={Number(item.id)} key={index}>\r\n                              {item.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.countryId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.countryId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"stateId\">\r\n                          State <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          // value={info.stateId}\r\n                          value={info.stateId}\r\n                          onChange={handleInputChangesForInfo}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n\r\n                          {states.map((item, index) => (\r\n                            <option value={Number(item.id)} key={index}>\r\n                              {item.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      {console.log(info.district)}\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Province/District/LGA{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          value={info.district}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          onChange={handleInputChangesForInfo}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.district !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"landmark\">Landmark </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          id=\"landmark\"\r\n                          // value={basicInfo.landmark}\r\n                          value={basicInfo.landmark}\r\n                          onChange={handleInputChangeBasic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.landmark !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.landmark}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {/* new date of registration with actual/estimated date  */}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Date Of Birth</Label>\r\n                        <div className=\"radio\">\r\n                          <label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              value=\"Actual\"\r\n                              name=\"dateOfBirth\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              defaultChecked={\r\n                                action === \"view\" &&\r\n                                !patientInfo?.isDobEstimated\r\n                                  ? true\r\n                                  : patientInfo?.isDobEstimated\r\n                                  ? false\r\n                                  : true\r\n                              }\r\n                              onChange={(e) => handleDateOfBirthChange(e)}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />{\" \"}\r\n                            Actual\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                          <label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              value=\"Estimated\"\r\n                              name=\"dateOfBirth\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              onChange={(e) => handleDateOfBirthChange(e)}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              defaultChecked={\r\n                                action === \"view\" && patientInfo?.isDobEstimated\r\n                                  ? true\r\n                                  : patientInfo?.isDobEstimated\r\n                                  ? true\r\n                                  : false\r\n                              }\r\n                            />{\" \"}\r\n                            Estimated\r\n                          </label>\r\n                        </div>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {/* end of new date of reg with actual/estimated  date */}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfBirth\">\r\n                          Date of birth\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dateOfBirth\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          id=\"dateOfBirth\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          // value={info.dateOfBirth}\r\n                          value={info.dateOfBirth}\r\n                          onChange={handleInputChangesForInfo}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.dateOfBirth !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateOfBirth}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Age</Label>\r\n                        <input\r\n                          type=\"number\"\r\n                          name=\"age\"\r\n                          className=\"form-control\"\r\n                          id=\"age\"\r\n                          min=\"10\"\r\n                          // value={basicInfo.age}\r\n                          value={basicInfo.age}\r\n                          disabled={ageDisabled}\r\n                          onChange={handleAgeChange}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      {/* <p>\r\n                        <b style={{ color: \"red\" }}>\r\n                          {basicInfo.age !== \"\" && basicInfo.age < 10\r\n                            ? \"The minimum age is 10\"\r\n                            : \" \"}{\" \"}\r\n                        </b>\r\n                      </p> */}\r\n                    </div>\r\n\r\n                    {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"isDateOfBirthEstimated\">\r\n                          Is date Of estimated\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          // type=\"date\"\r\n                          name=\"isDateOfBirthEstimated\"\r\n                          id=\"isDateOfBirthEstimated\"\r\n                          value={basicInfo.isDateOfBirthEstimated}\r\n                          onChange={handleInputChangeBasic}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value={true}>Yes</option>\r\n                          <option value={false}>No</option>\r\n                        </select>\r\n                        {formik.errors.isDateOfBirthEstimated !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.isDateOfBirthEstimated}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div> */}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"employmentStatusId\">Occupation</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"employmentStatusId\"\r\n                          id=\"employmentStatusId\"\r\n                          // value={info.employmentStatusId}\r\n                          value={info.employmentStatusId}\r\n                          onChange={handleInputChangesForInfo}\r\n                          disabled={action === \"view\" ? true : false}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {occupationOptions.map((item, index) => (\r\n                            <option\r\n                              value={Number(item.id)}\r\n                              key={Number(item.id)}\r\n                            >\r\n                              {item.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {/* {errors.district !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"maritalStatusId\">\r\n                          Marital status\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"maritalStatusId\"\r\n                          id=\"maritalStatusId\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          value={basicInfo.maritalStatusId}\r\n                          onChange={handleInputChangeBasic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {maritalStatusOptions.map((item, index) => (\r\n                            <option value={Number(item.id)}>\r\n                              {item.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.maritalStatusId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.maritalStatusId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"educationId\">\r\n                          Education <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          // type=\"text\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          name=\"educationId\"\r\n                          id=\"educationId\"\r\n                          value={info.educationId}\r\n                          onChange={handleInputChangesForInfo}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option>Select</option>\r\n                          {educationOptions.map((item, index) => (\r\n                            <option value={Number(item.id)}>\r\n                              {item.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.educationId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.educationId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"relationship\">\r\n                          Relationship <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"relationship\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          id=\"relationship\"\r\n                          value={basicInfo.relationship}\r\n                          onChange={handleInputChangeBasic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option>Select</option>\r\n                          {relationshipOptions.map((item, index) => (\r\n                            <option value={Number(item.id)}>\r\n                              {item.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.relationship !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.relationship}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"sexId\">\r\n                          Sex <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"genderId\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          id=\"genderId\"\r\n                          value={basicInfo.personDto.genderId}\r\n                          onChange={handleInputChangeBasic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option>Select</option>\r\n                          {genders.map((item, index) => (\r\n                            <option value={Number(item.id)}>\r\n                              {item.display}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.genderId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.genderId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ninNumber\">NIN number </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ninNumber\"\r\n                          id=\"ninNumber\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          value={basicInfo.ninNumber}\r\n                          onChange={handleInputChangeBasic}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.ninNumber !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ninNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Enrolment\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"coreEntryPoint\">\r\n                        Care entry point\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"careEntryPoint\"\r\n                        id=\"careEntryPoint\"\r\n                        // value={basicInfo.careEntryPoint}\r\n                        disabled={action === \"view\" ? true : false}\r\n                        value={basicInfo.careEntryPoint}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        {console.log(basicInfo.careEntryPoint)}\r\n                        <option value=\"\">Select </option>\r\n                        {carePoints.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.careEntryPoint !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.careEntryPoint}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"sex\">\r\n                          Sex <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"sex\"\r\n                          id=\"sex\"\r\n                          value={basicInfo.sex}\r\n                          onChange={handleInputChangeBasic}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"male\">Male</option>\r\n                          <option value=\"female\">Female</option>\r\n                        </select>\r\n                        {formik.errors.sex !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.sex}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div> */}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"pregnancy\">\r\n                        Pregnancy <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"pregnancy\"\r\n                        id=\"pregnancy\"\r\n                        value={basicInfo.pregnancy}\r\n                        onChange={handleInputChangeBasic}\r\n                        disabled={action === \"view\" ? true : false}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        <option value=\"NO\">No </option>\r\n                        <option value=\"YES\">Yes </option>\r\n                      </select>\r\n                      {errors.pregnancy !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.pregnancy}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"weight\">\r\n                        Weight (in KG) <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        id=\"weight\"\r\n                        value={basicInfo.weight}\r\n                        onChange={handleInputChangeBasic}\r\n                        onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {errors.weight !== \"\" ? (\r\n                        <span className={classes.error}>{errors.weight}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"height\">\r\n                        Height (In M) <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        type=\"number\"\r\n                        name=\"height\"\r\n                        id=\"height\"\r\n                        value={basicInfo.height}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {errors.height !== \"\" ? (\r\n                        <span className={classes.error}>{errors.height}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  {/* <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"bmi\">BMI </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"bmi\"\r\n                          id=\"bmi\"\r\n                          value={basicInfo.bmi}\r\n                          onChange={handleInputChangeBasic}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.bmi !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.bmi}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div> */}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"hepatitisB\">\r\n                        Hepatitis B (HBsAg){\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"hepatitisB\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        id=\"hepatitisB\"\r\n                        value={basicInfo.hepatitisB}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        {hepatitisStatus.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {/* <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"hepatitisB\"\r\n                        id=\"hepatitisB\"\r\n                        onChange={handleInputChangeBasic}\r\n                        onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      /> */}\r\n                      {errors.hepatitisB !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.hepatitisB}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"breastfeeding\">\r\n                        Breastfeeding <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"breastfeeding\"\r\n                        id=\"breastfeeding\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        value={basicInfo.breastfeeding}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {errors.breastfeeding !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.breastfeeding}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"historyOfUsingAbusedSubstance\">\r\n                        History of using abused substance{\" \"}\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"historyOfUsingAbusedSubstance\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        id=\"historyOfUsingAbusedSubstance\"\r\n                        value={basicInfo.historyOfUsingAbusedSubstance}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.historyOfUsingAbusedSubstance !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.historyOfUsingAbusedSubstance}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Screening\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"dateOfFirstHepatitisBPositiveScreening\">\r\n                        Date of first Hep. B positive screening{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        name=\"dateOfFirstHepatitisBPositiveScreening\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        id=\"dateOfFirstHepatitisBPositiveScreening\"\r\n                        value={\r\n                          basicInfo.screening\r\n                            .dateOfFirstHepatitisBPositiveScreening\r\n                        }\r\n                        onChange={handleInputChangeBasic}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {errors.dateOfFirstHepatitisBPositiveScreening !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateOfFirstHepatitisBPositiveScreening}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"hepatitisC\">Hepatitis C (HCVAb) </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"hepatitisC\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        id=\"hepatitisC\"\r\n                        value={basicInfo.screening.hepatitisC}\r\n                        // value={\r\n                        //   action === \"view\"\r\n                        //     ? patientInfo?.screening?.hepatitisC\r\n                        //     : basicInfo.screening.hepatitisC\r\n                        // }\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        {hepatitisStatus.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n\r\n                      {/* <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"hepatitisC\"\r\n                        id=\"hepatitisC\"\r\n                        value={basicInfo.hepatitisC}\r\n                        onChange={handleInputChangeBasic}\r\n                        onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      /> */}\r\n                      {/* {errors.pregnancy !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.pregnancy}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {false ? <Spinner /> : \"\"}\r\n\r\n            <br />\r\n            {action === \"update\" && (\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSubmit}\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                </MatButton>\r\n              </div>\r\n            )}\r\n            {/* </Form> */}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnrolmentSubmittedForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm2ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\n// hcRnaValue\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst DiagnosisSubmitedForm = ({\r\n  action,\r\n  setStep,\r\n  userStatus,\r\n  patientObj,\r\n  diagnosisInfo,\r\n  enrollmentUuid,\r\n}) => {\r\n  const [userId, setUserId] = useState(getCookie(\"enrollmentIds\"));\r\n\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    clinicalParameters: {\r\n      afp: \"\",\r\n      alt: \"\",\r\n      apriScore: \"\",\r\n      ascites: \"\",\r\n      ast: \"\",\r\n      astValue: \"\",\r\n      childPughScore: \"\",\r\n      creatinine: \"\",\r\n      diagnosis_result: \"\",\r\n      directBiliribin: \"\",\r\n      fib4: \"\",\r\n      fibroscan: \"\",\r\n      gradeOfEncephalopathy: \"\",\r\n      liverBiopsyStage: \"\",\r\n      prothrombinTimeNR: \"\",\r\n      pst: \"\",\r\n      severityOfAscites: \"MILD\",\r\n      totalBiliRubin: \"\",\r\n      ultrasoundScan: \"\",\r\n      urea: \"\",\r\n    },\r\n    enrollmentUuid: enrollmentUuid,\r\n    hepatitisBTest: {\r\n      albumin: \"\",\r\n      antiHDV: \"\",\r\n      comment: \"\",\r\n      ctScan: \"\",\r\n      dateHbvDnaTestRequested: `${diagnosisInfo?.hepatitisBTest?.dateHbvDnaTestRequested.year}-${diagnosisInfo?.hepatitisBTest?.dateHbvDnaTestRequested.monthValue}-${diagnosisInfo?.hepatitisBTest?.dateHbvDnaTestRequested.dayOfMonth}`,\r\n      dateHbvSampleRequested: `${diagnosisInfo?.hepatitisBTest?.dateHbvSampleRequested.year}-${diagnosisInfo?.hepatitisBTest?.dateHbvSampleRequested.monthValue}-${diagnosisInfo?.hepatitisBTest?.dateHbvSampleRequested.dayOfMonth}`,\r\n      dateHbvTestRequested: `${diagnosisInfo?.hepatitisBTest?.dateHbvTestRequested.year}-${diagnosisInfo?.hepatitisBTest?.dateHbvTestRequested.monthValue}-${diagnosisInfo?.hepatitisBTest?.dateHbvTestRequested.dayOfMonth}`,\r\n      hbeAG: \"\",\r\n      // attaching missing props\r\n      dateHbvDnaResultReported: \"\",\r\n      hbsAgQuantification: \"\",\r\n      hbvDna: \"DETECTED\",\r\n      hvbDnaValue: \"\",\r\n      pmtctEligible: \"\",\r\n      stagingDateOfLiverBiopsy: \"\",\r\n      treatmentEligible: \"\",\r\n    },\r\n    hepatitisCTest: {\r\n      commobidities: \"\",\r\n      hcRnaValue: \"\",\r\n      hcvRNA: \"\",\r\n      hepatitisCoinfection: \"\",\r\n      multipleInfection: \"\",\r\n    },\r\n  });\r\n  //   console.log(diagnosisInfo?.hepatitisBTest?.dateHbvDnaTestRequested);\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // handle input changes\r\n  const handleInputChangeBasic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisBTest: {\r\n        ...basicInfo.hepatitisBTest,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleInputChangeBasicForHC = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisCTest: {\r\n        ...basicInfo.hepatitisCTest,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n  const handleInputChangeBasicForClinic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      clinicalParameters: {\r\n        ...basicInfo.clinicalParameters,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  // to capture the error\r\n  let temp = { ...errors };\r\n  const validate = () => {\r\n    temp.dateHbvDnaTestRequested = basicInfo.hepatitisBTest\r\n      .dateHbvDnaTestRequested\r\n      ? \"\"\r\n      : \"Date HBV DNA test requested is required \";\r\n    temp.dateHbvTestRequested = basicInfo.hepatitisBTest.dateHbvTestRequested\r\n      ? \"\"\r\n      : \"Date HBV test requested is required\";\r\n\r\n    temp.dateHbvSampleRequested = basicInfo.hepatitisBTest\r\n      .dateHbvSampleRequested\r\n      ? \"\"\r\n      : \"Date HBV Sample requested is required\";\r\n\r\n    // temp.hvbDnaValue =\r\n    //   basicInfo.hepatitisBTest.hvbDnaValue &&\r\n    //   basicInfo.hepatitisBTest.hbvDna === \"DETECTED\"\r\n    //     ? \"\"\r\n    //     : \" Input HBV DNA value is required\";\r\n\r\n    temp.commobidities = basicInfo.hepatitisCTest.commobidities\r\n      ? \"\"\r\n      : \"Commobiditiesis required\";\r\n    temp.multipleInfection = basicInfo.hepatitisCTest.multipleInfection\r\n      ? \"\"\r\n      : \"Multiple Infection required\";\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const postDataWithToken = async (data) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${apiUrl}hepatitis/update-hepatitis-diagnosis/${enrollmentUuid}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      // Handle the response if needed\r\n      console.log(\"Post successful:\", response.data);\r\n      toast.success(\"Enrolment submitted successfully\");\r\n\r\n      setCookie(\r\n        \"enrollmentIds\",\r\n        {\r\n          enrollmentId: response.data?.enrollmentId,\r\n          enrollmentUuid: response.data?.enrollmentUuid,\r\n        },\r\n        1\r\n      );\r\n      //   setStep(1);\r\n      return response.data;\r\n    } catch (error) {\r\n      // Handle any errors that occurred during the request\r\n      toast.error(\"Enrolment failed\");\r\n      console.error(\"Error posting data:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validating the input\r\n    // window.scrollTo(0, 0);\r\n\r\n    console.log(basicInfo);\r\n    // console.log(errors);\r\n\r\n    if (validate()) {\r\n      console.log(\"good to go\", basicInfo);\r\n      postDataWithToken(basicInfo, \"hepatitis/diagnosis\");\r\n    }\r\n  };\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    const enrollmentIds = getCookie(\"enrollmentIds\");\r\n    const restructuredDiagnosisPayload = {\r\n      enrollmentUuid: enrollmentIds?.enrollmentUuid,\r\n      hepatitisBTest: {\r\n        dateHbvTestRequested: values.dateHbvTestRequested,\r\n        dateHbvSampleRequested: values.dateHbvSampleRequested,\r\n        dateHbvDnaTestRequested: values.dateHbvDnaTestRequested,\r\n        stagingDateOfLiverBiopsy: values.stagingDateOfLiverBiopsy,\r\n        hbvDna: values.hbvDna,\r\n        hvbDnaValue: values.hvbDnaValue,\r\n        hbsAgQuantification: values.hbsAgQuantification,\r\n        ctScan: values.ctScan,\r\n        albumin: values.albumin,\r\n        hbeAG: values.hbeAG,\r\n        antiHDV: values.antiHDV,\r\n        treatmentEligible: values.treatmentEligible,\r\n        pmtctEligible: values.pmtctEligible,\r\n        comment: values.comment,\r\n      },\r\n      hepatitisCTest: {\r\n        hcvRNA: values.hcvRNA,\r\n        hcRnaValue: values.hcRnaValue,\r\n        hepatitisCoinfection: values.hepatitisCoinfection,\r\n        commobidities: values.commobidities,\r\n        multipleInfection: values.multipleInfection,\r\n      },\r\n      clinicalParameters: {\r\n        ast: values.ast,\r\n        alt: values.alt,\r\n        pst: values.plt,\r\n        astValue: values.astValue,\r\n        totalBiliRubin: values.totalBiliRubin,\r\n        directBiliribin: values.directBiliribin,\r\n        apriScore: values.apriScore,\r\n        fib4: values.fib4,\r\n        prothrombinTimeNR: values.prothrombinTimeNR,\r\n        urea: values.urea,\r\n        creatinine: values.creatinine,\r\n        afp: values.afp,\r\n        fibroscan: values.fibroscan,\r\n        ultrasoundScan: values.ultrasoundScan,\r\n        ascites: values.ascites,\r\n        severityOfAscites: values.severityOfAscites,\r\n        gradeOfEncephalopathy: values.gradeOfEncephalopathy,\r\n        childPughScore: values.childPughScore,\r\n        liverBiopsyStage: values.liverBiopsyStage,\r\n        diagnosis_result: values.diagnosis_result,\r\n      },\r\n    };\r\n    setCookie(\"hepatitis2\", values, 1);\r\n    setCookie(\"heaptitis2PayloadValue\", restructuredDiagnosisPayload, 1);\r\n    postDataWithToken(restructuredDiagnosisPayload, \"hepatitis/diagnosis\");\r\n  };\r\n\r\n  const moveBack = () => {\r\n    window.scrollTo(0, 0);\r\n    setStep(0);\r\n  };\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm2ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis2\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  console.log(\" userId?.enrollmentUuid\", enrollmentUuid);\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n    setBasicInfo({\r\n      clinicalParameters: {\r\n        afp: diagnosisInfo?.clinicalParameters?.afp,\r\n        alt: diagnosisInfo?.clinicalParameters?.alt,\r\n        apriScore: diagnosisInfo?.clinicalParameters?.apriScore,\r\n        ascites: diagnosisInfo?.clinicalParameters?.ascites,\r\n        ast: diagnosisInfo?.clinicalParameters?.ast,\r\n        astValue: diagnosisInfo?.clinicalParameters?.astValue,\r\n        childPughScore: diagnosisInfo?.clinicalParameters?.childPughScore,\r\n        creatinine: diagnosisInfo?.clinicalParameters?.creatinine,\r\n        diagnosis_result: diagnosisInfo?.clinicalParameters?.diagnosis_result,\r\n        directBiliribin: diagnosisInfo?.clinicalParameters?.directBiliribin,\r\n        fib4: diagnosisInfo?.clinicalParameters?.fib4,\r\n        fibroscan: diagnosisInfo?.clinicalParameters?.fibroscan,\r\n        gradeOfEncephalopathy:\r\n          diagnosisInfo?.clinicalParameters?.gradeOfEncephalopathy,\r\n        liverBiopsyStage: diagnosisInfo?.clinicalParameters?.liverBiopsyStage,\r\n        prothrombinTimeNR: diagnosisInfo?.clinicalParameters?.prothrombinTimeNR,\r\n        pst: diagnosisInfo?.clinicalParameters?.pst,\r\n        severityOfAscites: diagnosisInfo?.clinicalParameters?.severityOfAscites,\r\n        totalBiliRubin: diagnosisInfo?.clinicalParameters?.totalBiliRubin,\r\n        ultrasoundScan: diagnosisInfo?.clinicalParameters?.ultrasoundScan,\r\n        urea: diagnosisInfo?.clinicalParameters?.urea,\r\n      },\r\n      enrollmentUuid: enrollmentUuid,\r\n      hepatitisBTest: {\r\n        albumin: diagnosisInfo?.hepatitisBTest?.albumin,\r\n        antiHDV: diagnosisInfo?.hepatitisBTest?.antiHDV,\r\n        comment: diagnosisInfo?.hepatitisBTest?.comment,\r\n        ctScan: diagnosisInfo?.hepatitisBTest?.ctScan,\r\n        dateHbvDnaTestRequested: `${\r\n          diagnosisInfo?.hepatitisBTest?.dateHbvDnaTestRequested.year\r\n        }-${\r\n          diagnosisInfo?.hepatitisBTest?.dateHbvDnaTestRequested.monthValue\r\n        }-${\r\n          diagnosisInfo?.hepatitisBTest?.dateHbvDnaTestRequested.dayOfMonth.toString()\r\n            .length > 1\r\n            ? diagnosisInfo?.hepatitisBTest?.dateHbvDnaTestRequested.dayOfMonth\r\n            : \"0\" +\r\n              diagnosisInfo?.hepatitisBTest?.dateHbvDnaTestRequested.dayOfMonth\r\n        }`,\r\n        dateHbvSampleRequested: `${\r\n          diagnosisInfo?.hepatitisBTest?.dateHbvSampleRequested.year\r\n        }-${diagnosisInfo?.hepatitisBTest?.dateHbvSampleRequested.monthValue}-${\r\n          diagnosisInfo?.hepatitisBTest?.dateHbvSampleRequested.dayOfMonth.toString()\r\n            .length > 1\r\n            ? diagnosisInfo?.hepatitisBTest?.dateHbvSampleRequested.dayOfMonth\r\n            : \"0\" +\r\n              diagnosisInfo?.hepatitisBTest?.dateHbvSampleRequested.dayOfMonth\r\n        }`,\r\n        dateHbvTestRequested: `${\r\n          diagnosisInfo?.hepatitisBTest?.dateHbvTestRequested.year\r\n        }-${diagnosisInfo?.hepatitisBTest?.dateHbvTestRequested.monthValue}-${\r\n          diagnosisInfo?.hepatitisBTest?.dateHbvTestRequested.dayOfMonth.toString()\r\n            .length > 1\r\n            ? diagnosisInfo?.hepatitisBTest?.dateHbvTestRequested.dayOfMonth\r\n            : \"0\" +\r\n              diagnosisInfo?.hepatitisBTest?.dateHbvTestRequested.dayOfMonth\r\n        }`,\r\n        hbeAG: diagnosisInfo?.hepatitisBTest?.hbeAG,\r\n        // attaching missing props\r\n        dateHbvDnaResultReported: `${\r\n          diagnosisInfo?.hepatitisBTest?.dateHbvDnaResultReported.year\r\n        }-${\r\n          diagnosisInfo?.hepatitisBTest?.dateHbvDnaResultReported.monthValue\r\n        }-${\r\n          diagnosisInfo?.hepatitisBTest?.dateHbvDnaResultReported.dayOfMonth.toString()\r\n            .length > 1\r\n            ? diagnosisInfo?.hepatitisBTest?.dateHbvDnaResultReported.dayOfMonth\r\n            : \"0\" +\r\n              diagnosisInfo?.hepatitisBTest?.dateHbvDnaResultReported.dayOfMonth\r\n        }`,\r\n        hbsAgQuantification: diagnosisInfo?.hepatitisBTest?.hbsAgQuantification,\r\n        hbvDna: diagnosisInfo?.hepatitisBTest?.hbvDna,\r\n        hvbDnaValue: diagnosisInfo?.hepatitisBTest?.hvbDnaValue,\r\n        pmtctEligible: diagnosisInfo?.hepatitisBTest?.pmtctEligible,\r\n        stagingDateOfLiverBiopsy: `${\r\n          diagnosisInfo?.hepatitisBTest?.stagingDateOfLiverBiopsy.year\r\n        }-${\r\n          diagnosisInfo?.hepatitisBTest?.stagingDateOfLiverBiopsy.monthValue\r\n        }-${\r\n          diagnosisInfo?.hepatitisBTest?.stagingDateOfLiverBiopsy.dayOfMonth.toString()\r\n            .length > 1\r\n            ? diagnosisInfo?.hepatitisBTest?.stagingDateOfLiverBiopsy.dayOfMonth\r\n            : \"0\" +\r\n              diagnosisInfo?.hepatitisBTest?.stagingDateOfLiverBiopsy.dayOfMonth\r\n        }`,\r\n        treatmentEligible: diagnosisInfo?.hepatitisBTest?.treatmentEligible,\r\n      },\r\n      hepatitisCTest: {\r\n        commobidities: diagnosisInfo?.hepatitisCTest?.commobidities,\r\n        hcRnaValue: diagnosisInfo?.hepatitisCTest?.hcRnaValue,\r\n        hcvRNA: diagnosisInfo?.hepatitisCTest?.hcvRNA,\r\n        hepatitisCoinfection:\r\n          diagnosisInfo?.hepatitisCTest?.hepatitisCoinfection,\r\n        multipleInfection: diagnosisInfo?.hepatitisCTest?.multipleInfection,\r\n      },\r\n    });\r\n  }, [diagnosisInfo, enrollmentUuid]);\r\n\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Diagnosis\r\n                </h5>\r\n              </div>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Hepatitis B\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvDnaTestRequested\">\r\n                              Date HBV DNA test requested{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvDnaTestRequested\"\r\n                              id=\"dateHbvDnaTestRequested\"\r\n                              //   value={\r\n                              //     basicInfo.hepatitisBTest.dateHbvDnaTestRequested\r\n                              //   }\r\n                              value={\r\n                                basicInfo.hepatitisBTest.dateHbvDnaTestRequested\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              disabled={action === \"view\" ? true : false}\r\n                            />\r\n\r\n                            {errors.dateHbvDnaTestRequested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvDnaTestRequested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvTestRequested\">\r\n                              Date HBV test requested{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvTestRequested\"\r\n                              id=\"dateHbvTestRequested\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.dateHbvTestRequested\r\n                              }\r\n                              disabled={action === \"view\" ? true : false}\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.dateHbvTestRequested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvTestRequested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvSampleRequested\">\r\n                              Date HBV sample Requested{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvSampleRequested\"\r\n                              id=\"dateHbvSampleRequested\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.dateHbvSampleRequested\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              disabled={action === \"view\" ? true : false}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n\r\n                            {errors.dateHbvSampleRequested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvSampleRequested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvDnaResultReported\">\r\n                              Date of HBV DNA result reported{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvDnaResultReported\"\r\n                              id=\"dateHbvDnaResultReported\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest\r\n                                  .dateHbvDnaResultReported\r\n                              }\r\n                              disabled={action === \"view\" ? true : false}\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* {errors.dateHbvDnaResultReported !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvDnaResultReported}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-2 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              HBV DNA(UI/ml){\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <div className=\"radio\">\r\n                              <label>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  value=\"DETECTED\"\r\n                                  name=\"hbvDna\"\r\n                                  disabled={action === \"view\" ? true : false}\r\n                                  checked={\r\n                                    basicInfo.hepatitisBTest.hbvDna ===\r\n                                    \"DETECTED\"\r\n                                  }\r\n                                  // onBlur={formik.handleBlur}\r\n                                  onChange={handleInputChangeBasic}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />{\" \"}\r\n                                Detected\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"radio\">\r\n                              <label>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  value=\"UNDETECTED\"\r\n                                  name=\"hbvDna\"\r\n                                  disabled={action === \"view\" ? true : false}\r\n                                  checked={\r\n                                    basicInfo.hepatitisBTest.hbvDna ===\r\n                                    \"UNDETECTED\"\r\n                                  }\r\n                                  // onBlur={formik.handleBlur}\r\n                                  onChange={handleInputChangeBasic}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />{\" \"}\r\n                                Undetected\r\n                              </label>\r\n                              {/* \r\n                              {errors.stagingDateOfLiverBiopsy !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.stagingDateOfLiverBiopsy}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </div>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {basicInfo.hepatitisBTest.hbvDna === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hvbDnaValue\">\r\n                                Input HBV DNA value{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hvbDnaValue\"\r\n                                disabled={action === \"view\" ? true : false}\r\n                                id=\"hvbDnaValue\"\r\n                                value={basicInfo.hepatitisBTest.hvbDnaValue}\r\n                                onChange={handleInputChangeBasic}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbsAgQuantification\">\r\n                              HBsAG Quantification (IU/ml)\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbsAgQuantification\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              id=\"hbsAgQuantification\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.hbsAgQuantification\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* {errors.hbsAgQuantification !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbsAgQuantification}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbeAG\">HbeAG</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbeAG\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              id=\"hbeAG\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.hbeAG}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"REACTIVE\"}>Reactive</option>\r\n                              <option value={\"NON_REACTIVE\"}>\r\n                                Non Reactive\r\n                              </option>\r\n                            </select>\r\n                            {/* {formik.errors.hbeAG !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbeAG}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"antiHDV\">Anti-HDV</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"antiHDV\"\r\n                              id=\"antiHDV\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.antiHDV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"REACTIVE\"}>Reactive</option>\r\n                              <option value={\"NON_REACTIVE\"}>\r\n                                Non Reactive\r\n                              </option>\r\n                              <option value={\"NOT_DONE\"}>Not Done</option>\r\n                            </select>\r\n                            {/* {formik.errors.antiHDV !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.antiHDV}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"treatmentEligible\">\r\n                              Treatment Eligible\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"treatmentEligible\"\r\n                              id=\"treatmentEligible\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.treatmentEligible}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {/* {formik.errors.treatmentEligible !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.treatmentEligible}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"pmtctEligible\">PMTCT Eligible</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"pmtctEligible\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              id=\"pmtctEligible\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.pmtctEligible}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {/* {formik.errors.pmtctEligible !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.pmtctEligible}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-4-12\">\r\n                          <FormGroup>\r\n                            <Label for=\"comment\">Comment</Label>\r\n                            <textarea\r\n                              className=\"form-control\"\r\n                              name=\"comment\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              id=\"comment\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.comment}\r\n                              cols=\"50\"\r\n                              rows=\"30\"\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                                height: \"120px\",\r\n                              }}\r\n                            />\r\n                            {/* {formik.errors.comment !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.comment}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {/* testttttttting */}\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"stagingDateOfLiverBiopsy\">\r\n                              Staging date of liver biopsy{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"stagingDateOfLiverBiopsy\"\r\n                              id=\"stagingDateOfLiverBiopsy\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              value={\r\n                                basicInfo.hepatitisBTest\r\n                                  .stagingDateOfLiverBiopsy\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Hepatitis C\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRNA\">HCV RNA (IU/ml)</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRNA\"\r\n                              id=\"hcvRNA\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              // onBlur={formik.handleBlur}\r\n                              value={basicInfo.hepatitisCTest.hcvRNA}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>select</option>\r\n                              <option value={\"DETECTED\"}>Detected</option>\r\n                              <option value={\"UNDETECTED\"}>Undetected</option>\r\n                            </select>\r\n                            {/* {formik.errors.hcvRNA !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvRNA}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                        {basicInfo.hepatitisCTest.hcvRNA === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcRnaValue\">\r\n                                Input HCV RNA Value{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hcRnaValue\"\r\n                                id=\"hcRnaValue\"\r\n                                disabled={action === \"view\" ? true : false}\r\n                                value={basicInfo.hepatitisCTest.hcRnaValue}\r\n                                onChange={handleInputChangeBasicForHC}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {/* {errors.hcRnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.hcRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hepatitisCoinfection\">\r\n                              Hepatitis Coinfection\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hepatitisCoinfection\"\r\n                              id=\"hepatitisCoinfection\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              value={\r\n                                basicInfo.hepatitisCTest.hepatitisCoinfection\r\n                              }\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"HBV_HCV\"}>HBV/HCV</option>\r\n                              <option value={\"HCV_HIV\"}>HCV/HIV</option>\r\n                              <option value={\"HBV_HDV\"}>HBV/HDV</option>\r\n                              <option value={\"HBV_HCD_HIV\"}>HBV/HCD/HIV</option>\r\n                            </select>\r\n                            {/* {formik.errors.hepatitisCoinfection !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hepatitisCoinfection}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"commobidities\">\r\n                              Commobidities{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"commobidities\"\r\n                              id=\"commobidities\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              value={basicInfo.hepatitisCTest.commobidities}\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.commobidities !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.commobidities}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"multipleInfection\">\r\n                              Specify multiple infection{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"multipleInfection\"\r\n                              id=\"multipleInfection\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              value={basicInfo.hepatitisCTest.multipleInfection}\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.multipleInfection !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.multipleInfection}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Clinical Parameters\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ast\">AST (IU/ml)</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"ast\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        id=\"ast\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.ast}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.ast !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.ast}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"alt\">ALT (IU/ml)</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"alt\"\r\n                        id=\"alt\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.alt}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.alt !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.alt}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"pst\">PST(mm3)</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"pst\"\r\n                        id=\"pst\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.pst}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.pst !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.pst}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  {basicInfo.ast === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"astValue\">\r\n                          Input AST value{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"astValue\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          id=\"astValue\"\r\n                          value={basicInfo.clinicalParameters.astValue}\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.astValue !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.astValue}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {basicInfo.alt === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"altValue\">\r\n                          Input ALT value{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"altValue\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          id=\"altValue\"\r\n                          value={basicInfo.clinicalParameters.altValue}\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.altValue !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.altValue}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {basicInfo.plt === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pstValue\">\r\n                          Input PST value{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"pstValue\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          id=\"pstValue\"\r\n                          value={basicInfo.clinicalParameters.pstValue}\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.pstValue !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pstValue}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"totalBiliRubin\">\r\n                        Total Bilirubin (μmol/L){\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"totalBiliRubin\"\r\n                        id=\"totalBiliRubin\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        value={basicInfo.clinicalParameters.totalBiliRubin}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.totalBiliRubin !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.totalBiliRubin}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"directBiliribin\">\r\n                        Direct Bilirubin (μmol/L)\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"directBiliribin\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        id=\"directBiliribin\"\r\n                        value={basicInfo.clinicalParameters.directBiliribin}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.directBiliribin !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.directBiliribin}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"albumin\">Albumin (g/dl)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"albumin\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        id=\"albumin\"\r\n                        value={basicInfo.hepatitisBTest.albumin}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.albumin ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.albumin}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"apriScore\">APRI score </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"apriScore\"\r\n                        id=\"apriScore\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        value={basicInfo.clinicalParameters.apriScore}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.apriScore !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.apriScore}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"fib4\">FIB-4</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"fib4\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        id=\"fib4\"\r\n                        value={basicInfo.clinicalParameters.fib4}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.fib4 !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.fib4}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"prothrombinTimeNR\">\r\n                        Prothrombin time/INR\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"prothrombinTimeNR\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        id=\"prothrombinTimeNR\"\r\n                        value={basicInfo.clinicalParameters.prothrombinTimeNR}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.prothrombinTimeNR !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.prothrombinTimeNR}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"urea\"\r\n                        id=\"urea\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        value={basicInfo.clinicalParameters.urea}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.urea !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.urea}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"creatinine\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        id=\"creatinine\"\r\n                        value={basicInfo.clinicalParameters.creatinine}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.creatinine !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.creatinine}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ultrasoundScan\">\r\n                        Ultrasound scan (μmol/L)\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"ultrasoundScan\"\r\n                        id=\"ultrasoundScan\"\r\n                        disabled={action === \"view\" ? true : false}\r\n                        value={basicInfo.clinicalParameters.ultrasoundScan}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.ultrasoundScan !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.ultrasoundScan}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"afp\"\r\n                        id=\"afp\"\r\n                        value={basicInfo.clinicalParameters.afp}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        disabled={action === \"view\" ? true : false}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.afp !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.afp}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"fibroscan\">Fibroscan (ng/ml)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"fibroscan\"\r\n                        id=\"fibroscan\"\r\n                        value={basicInfo.clinicalParameters.fibroscan}\r\n                        disabled={action === \"view\" ? true : false}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.fibroscan !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.fibroscan}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ctScan\">CT scan</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"ctScan\"\r\n                        id=\"ctScan\"\r\n                        value={basicInfo.hepatitisBTest.ctScan}\r\n                        disabled={action === \"view\" ? true : false}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.ctScan ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.ctScan}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ascites\">Ascites</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"ascites\"\r\n                        id=\"ascites\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.ascites}\r\n                        disabled={action === \"view\" ? true : false}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.ascites !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.ascites}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  {basicInfo.clinicalParameters.ascites === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"severityOfAscites\">\r\n                          Severity of ascites\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"severityOfAscites\"\r\n                          disabled={action === \"view\" ? true : false}\r\n                          id=\"severityOfAscites\"\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          value={basicInfo.clinicalParameters.severityOfAscites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"MILD\"}>Mild</option>\r\n                          <option value={\"MODERATE\"}>Moderate</option>\r\n                          <option value={\"MASSIVE_OR_GROSS\"}>\r\n                            Massive/Gross\r\n                          </option>\r\n                        </select>\r\n                        {/* {formik.errors.severityOfAscites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.severityOfAscites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ascitesLevel\">Grade of Encephalopathy</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"gradeOfEncephalopathy\"\r\n                        id=\"gradeOfEncephalopathy\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={\r\n                          basicInfo.clinicalParameters.gradeOfEncephalopathy\r\n                        }\r\n                        disabled={action === \"view\" ? true : false}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={0}>0</option>\r\n                        <option value={1}>1</option>\r\n                        <option value={2}>2</option>\r\n                        <option value={3}>3</option>\r\n                        <option value={4}>4</option>\r\n                        <option value={5}>5</option>\r\n                      </select>\r\n                      {/* {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.gradeOfEncephalopathy}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"childPughScore\">Child pugh score</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"childPughScore\"\r\n                        id=\"childPughScore\"\r\n                        value={basicInfo.clinicalParameters.childPughScore}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        disabled={action === \"view\" ? true : false}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.childPughScore !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.childPughScore}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"liverBiopsyStage\"\r\n                        id=\"liverBiopsyStage\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        disabled={action === \"view\" ? true : false}\r\n                        value={basicInfo.clinicalParameters.liverBiopsyStage}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"FIBROSIS\"}> Fibrosis</option>\r\n                        <option value={\"CIRRHOSIS\"}>Cirrhosis</option>\r\n                        <option value={\"NO_FIBROSIS\"}> No Fibrosis</option>\r\n                        {/* <option value={\"CIRRHOSIS\"}>Cirrhosis</option> */}\r\n                        <option value={\"HIGH_CC\"}>High CC </option>\r\n                      </select>\r\n                      {/* {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.liverBiopsyStage}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"diagnosis_result\">Diagnosis</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"diagnosis_result\"\r\n                        id=\"diagnosis_result\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        disabled={action === \"view\" ? true : false}\r\n                        value={basicInfo.clinicalParameters.diagnosis_result}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"NO_FIBROSIS\"}> No Fibrosis</option>\r\n                        <option value={\"FIBROSIS\"}>Fibrosis</option>\r\n                        <option value={\"CIRRHOSIS\"}>Cirrhosis</option>\r\n                        <option value={\"HIGH_CC\"}>HCC</option>\r\n                      </select>\r\n                      {/* {formik.errors.diagnosis_result !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.diagnosis_result}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {false ? <Spinner /> : \"\"}\r\n            <br />\r\n            {action === \"update\" && (\r\n              <div className=\"d-flex justify-content-end\">\r\n                {/* <MatButton\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={moveBack}\r\n                className={classes.button}\r\n                startIcon={<ArrowBackIcon />}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n              </MatButton> */}\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  onClick={handleSubmit}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                </MatButton>\r\n              </div>\r\n            )}\r\n            {/* </Form> */}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisSubmitedForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm3ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst TreatmentSubmittedForm = ({\r\n  setStep,\r\n  treatmentInfo,\r\n  action,\r\n  patientObj,\r\n  enrollmentUuid,\r\n}) => {\r\n  console.log(treatmentInfo);\r\n\r\n  const [userId, setUserId] = useState(getCookie(\"enrollmentIds\"));\r\n\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    enrollmentUuid: userId?.enrollmentUuid,\r\n    hepatitisBTreatment: {\r\n      dateStarted: \"\",\r\n      dateStopped: \"\",\r\n      hbvPastTreatmentRegimen: \"\",\r\n      hepatitisBRegimenSwitch: {\r\n        adverseEffectReported: \"\",\r\n        dateStarted: \"\",\r\n        dateStopped: \"\",\r\n        newRegime: \"\",\r\n        reasonForSwitch: \"\",\r\n      },\r\n      historyOfAdverseEffect: \"\",\r\n      newRegimen: \"\",\r\n      reasonForHepatitisBTreatment: {\r\n        comment: \"\",\r\n        reasonsForTreatment: \"\",\r\n      },\r\n      treatmentExperience: \"\",\r\n    },\r\n    hepatitisCTreatment: {\r\n      adverseEffectReported: \"\",\r\n      dateCompleted: \"\",\r\n      dateStarted: \"\",\r\n      dateStopped: \"\",\r\n      hbvPastTreatmentRegimen: \"\",\r\n      hcvRetreatment: {\r\n        dateStarted: \"\",\r\n        dateStopped: \"\",\r\n        hbvPastTreatmentRegimen: \"\",\r\n        history_of_AdverseEffect: \"YES\",\r\n        newRegimen: \"\",\r\n        prescribedDuration: 0,\r\n        retreatmentAdverseEffect: \"\",\r\n      },\r\n      hepatitisSvr12Testing: {\r\n        dateTested: \"\",\r\n        hcvRNA: \"DETECTED\",\r\n        hcvRNAValue: \"\",\r\n        retreatmentDateTested: \"\",\r\n        retreatmentHcvRNA: \"\",\r\n        retreatmentHcvRNAValue: \"\",\r\n      },\r\n      pastTreatmentExperience: \"\",\r\n      prescribedDuration: \"\",\r\n      treatmentExperience: \"\",\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  // handle input changes\r\n  const handleInputChangeBasicHB = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisBTreatment: {\r\n        ...basicInfo.hepatitisBTreatment,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleInputChangeBasicHBReason = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hbvReasonForTreatmentEligibility\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          reasonForHepatitisBTreatment: {\r\n            ...basicInfo.hepatitisBTreatment.reasonForHepatitisBTreatment,\r\n            reasonsForTreatment: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hbvReasonsForTreatmentComment\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          reasonForHepatitisBTreatment: {\r\n            ...basicInfo.hepatitisBTreatment.reasonForHepatitisBTreatment,\r\n            comment: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"treatmentExperienceB\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          treatmentExperience: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    // if (e.target.name === \"hbvRegimeSwitchDateStarted\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         dateStarted: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n    // if (e.target.name === \"hbvRegimeSwitchDateStopped\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         dateStopped: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n    // if (e.target.name === \"hbvAdverseEffectReported\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         adverseEffectReported: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n\r\n    // if (e.target.name === \"hbvRegimeSwitchReason\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         reasonForSwitch: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n  };\r\n  const handleInputChangeBasicHBRegSwitch = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hbvRegimeSwitchNewRegimen\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            newRegime: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hbvRegimeSwitchDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            dateStarted: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hbvRegimeSwitchDateStopped\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            dateStopped: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hbvAdverseEffectReported\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            adverseEffectReported: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hbvRegimeSwitchReason\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            reasonForSwitch: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeBasicHCGen = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisCTreatment: {\r\n        ...basicInfo.hepatitisCTreatment,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n  const handleInputChangeBasicHC = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (e.target.name === \"hcvAdverseEventReported\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          adverseEffectReported: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvTreatmentExperience\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          treatmentExperience: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          dateStarted: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvDateCompleted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          dateCompleted: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvDateStopped\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          dateStopped: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvPrescribedDuration\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          prescribedDuration: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hbvPastTreatmentRegimenForHcv\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hbvPastTreatmentRegimen: e.target.value,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeBasicHCSVR = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"svr12TestingDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            dateTested: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12TestingHcvRna\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            hcvRNA: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12TestingHcvRnaValue\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            hcvRNAValue: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12RetreatmentDateTested\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            retreatmentDateTested: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12RetreatmentHcvRna\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            retreatmentHcvRNA: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"svr12RetreatmentHcvRnaValue\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            retreatmentHcvRNAValue: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeBasicHHCV = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hcvRetreatmentNewRegimen\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            newRegimen: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvRetreatmentPrescribedDuration\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            prescribedDuration: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvRetreatmentDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            dateStarted: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvRetreatmentDateStopped\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            dateStopped: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvRetreatmentAdverseEffect\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            retreatmentAdverseEffect: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvRetreatmentHistoryOfAdverseEffect\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            history_of_AdverseEffect: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // to capture the error\r\n  let temp = { ...errors };\r\n  const validate = () => {\r\n    temp.treatmentExperienceB = basicInfo.hepatitisBTreatment\r\n      .treatmentExperience\r\n      ? \"\"\r\n      : \"Treatment experience is required\";\r\n\r\n    temp.hbvRegimeSwitchNewRegimen = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.newRegime\r\n      ? \"\"\r\n      : \"New Regime is required\";\r\n\r\n    temp.hbvRegimeSwitchDateStarted = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.dateStarted\r\n      ? \"\"\r\n      : \"Date Started is required\";\r\n\r\n    temp.hbvRegimeSwitchDateStopped = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.dateStopped\r\n      ? \"\"\r\n      : \"Date Stopped is required\";\r\n\r\n    temp.hbvRegimeSwitchReason = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.reasonForSwitch\r\n      ? \"\"\r\n      : \"Reason for switch is required\";\r\n\r\n    temp.hcvTreatmentExperience = basicInfo.hepatitisCTreatment\r\n      .treatmentExperience\r\n      ? \"\"\r\n      : \" Treatment experience is required\";\r\n\r\n    temp.pastTreatmentExperience = basicInfo.hepatitisCTreatment\r\n      .pastTreatmentExperience\r\n      ? \"\"\r\n      : \"Past Treatment experience is required\";\r\n\r\n    temp.hbvAdverseEffectReported = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.adverseEffectReported\r\n      ? \"\"\r\n      : \"Adverse effect is required\";\r\n\r\n    temp.historyOfAdverseEffect = basicInfo.hepatitisBTreatment\r\n      .historyOfAdverseEffect\r\n      ? \"\"\r\n      : \"History ofAdverse effect is required\";\r\n\r\n    temp.newRegimen = basicInfo.hepatitisBTreatment.newRegimen\r\n      ? \"\"\r\n      : \"New Regime is required\";\r\n\r\n    temp.hbvPastTreatmentRegimen = basicInfo.hepatitisBTreatment\r\n      .hbvPastTreatmentRegimen\r\n      ? \"\"\r\n      : \"Hbv Past treatment regimen is required\";\r\n\r\n    // temp.newRegimenB = basicInfo.hepatitisBTreatment.newRegimen\r\n    //   ? \"\"\r\n    //   : \"New Regime is required\";\r\n\r\n    temp.dateStarted = basicInfo.hepatitisBTreatment.dateStarted\r\n      ? \"\"\r\n      : \"Date started is required\";\r\n\r\n    temp.dateStopped = basicInfo.hepatitisBTreatment.dateStopped\r\n      ? \"\"\r\n      : \"Date Stopped is required\";\r\n\r\n    temp.hbvReasonForTreatmentEligibility = basicInfo.hepatitisBTreatment\r\n      .reasonForHepatitisBTreatment.reasonsForTreatment\r\n      ? \"\"\r\n      : \"Reason for Treatment is required\";\r\n\r\n    temp.hbvReasonsForTreatmentComment = basicInfo.hepatitisBTreatment\r\n      .reasonForHepatitisBTreatment.comment\r\n      ? \"\"\r\n      : \"Comment is required\";\r\n\r\n    temp.hcvAdverseEventReported = basicInfo.hepatitisCTreatment\r\n      .adverseEffectReported\r\n      ? \"\"\r\n      : \"Adverse Effect Reported is required\";\r\n\r\n    temp.hcvDateStarted = basicInfo.hepatitisCTreatment.dateStarted\r\n      ? \"\"\r\n      : \"Date started is required\";\r\n\r\n    temp.hcvDateCompleted = basicInfo.hepatitisCTreatment.dateCompleted\r\n      ? \"\"\r\n      : \"Date completed is required\";\r\n\r\n    temp.hcvDateStopped = basicInfo.hepatitisCTreatment.dateStopped\r\n      ? \"\"\r\n      : \"Date stopped is required\";\r\n\r\n    temp.hcvPrescribedDuration = basicInfo.hepatitisCTreatment\r\n      .prescribedDuration\r\n      ? \"\"\r\n      : \"Prescribed duration is required\";\r\n\r\n    temp.svr12TestingDateStarted = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.dateTested\r\n      ? \"\"\r\n      : \"Date tested is required\";\r\n\r\n    temp.svr12TestingHcvRna = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.hcvRNA\r\n      ? \"\"\r\n      : \"HCV RNA is required\";\r\n\r\n    temp.svr12RetreatmentDateTested = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.retreatmentDateTested\r\n      ? \"\"\r\n      : \"Retreatment date tested is required\";\r\n\r\n    temp.svr12RetreatmentHcvRna = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.retreatmentDateTested\r\n      ? \"\"\r\n      : \" Retreatment HCV RNA is required\";\r\n\r\n    temp.svr12RetreatmentHcvRna = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.retreatmentHcvRNA\r\n      ? \"\"\r\n      : \" Retreatment HCV RNA  is required\";\r\n\r\n    temp.hcvRetreatmentNewRegimen = basicInfo.hepatitisCTreatment.hcvRetreatment\r\n      .newRegimen\r\n      ? \"\"\r\n      : \" New regimen  is required\";\r\n\r\n    temp.hcvRetreatmentPrescribedDuration = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.prescribedDuration\r\n      ? \"\"\r\n      : \"Prescribed Duration is required\";\r\n\r\n    temp.hcvRetreatmentDateStarted = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.dateStarted\r\n      ? \"\"\r\n      : \"Date started is required\";\r\n\r\n    temp.hcvRetreatmentDateStopped = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.dateStarted\r\n      ? \"\"\r\n      : \"Date stopped is required\";\r\n\r\n    temp.hcvRetreatmentAdverseEffect = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.retreatmentAdverseEffect\r\n      ? \"\"\r\n      : \" Retreatment Adverse effect is required\";\r\n\r\n    temp.hcvRetreatmentHistoryOfAdverseEffect = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.history_of_AdverseEffect\r\n      ? \"\"\r\n      : \" History of adverse effect is required\";\r\n\r\n    // console.log(temp);\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  // submit form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validating the input\r\n    // window.scrollTo(0, 0);\r\n\r\n    console.log(basicInfo);\r\n    // console.log(errors);\r\n\r\n    if (validate()) {\r\n      console.log(\"good to go\", basicInfo);\r\n      postDataWithToken(basicInfo, \"hepatitis/treatment\");\r\n    }\r\n  };\r\n  const onSubmitHandler = (values) => {\r\n    console.log(values.hbvDateStarted);\r\n    setCookie(\"hepatitis3\", values, 1);\r\n    const enrollmentIds = getCookie(\"enrollmentIds\");\r\n    const restructuredTreatmentPayload = {\r\n      enrollmentUuid: enrollmentIds?.enrollmentUuid,\r\n      hepatitisBTreatment: {\r\n        dateStarted: formatDate(values.hbvDateStarted),\r\n        dateStopped: formatDate(values.hbvDateStopped),\r\n        hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimen,\r\n        hepatitisBRegimenSwitch: {\r\n          adverseEffectReported: values.hbvAdverseEffectReported,\r\n          dateStarted: formatDate(values.hbvRegimeSwitchDateStarted),\r\n          dateStopped: formatDate(values.hbvRegimeSwitchDateStopped),\r\n          newRegime: values.hbvRegimeSwitchNewRegimen,\r\n          reasonForSwitch: values.hbvRegimeSwitchReason,\r\n        },\r\n        historyOfAdverseEffect: values.hbvHistoryOfAdverseEffect,\r\n        newRegimen: values.hbvNewRegimen,\r\n        reasonForHepatitisBTreatment: {\r\n          comment: values.hbvReasonsForTreatmentComment,\r\n          reasonsForTreatment: values.hbvReasonForTreatmentEligibility,\r\n        },\r\n        treatmentExperience: values.hbvTreatmentExperience,\r\n      },\r\n      hepatitisCTreatment: {\r\n        adverseEffectReported: values.hcvAdverseEventReported,\r\n        dateCompleted: formatDate(values.hcvDateCompleted),\r\n        dateStarted: formatDate(values.hcvDateStarted),\r\n        dateStopped: formatDate(values.hcvDateStopped),\r\n        hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimenForHcv,\r\n        hcvRetreatment: {\r\n          dateStarted: formatDate(values.hcvRetreatmentDateStarted),\r\n          dateStopped: formatDate(values.hcvRetreatmentDateStopped),\r\n          hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimenForHcv,\r\n          history_of_AdverseEffect: values.hcvRetreatmentHistoryOfAdverseEffect,\r\n          newRegimen: values.hcvRetreatmentNewRegimen,\r\n          prescribedDuration: values.hcvRetreatmentPrescribedDuration,\r\n          retreatmentAdverseEffect: values.hcvRetreatmentAdverseEffect,\r\n        },\r\n        hepatitisSvr12Testing: {\r\n          dateTested: formatDate(values.svr12TestingDateStarted),\r\n          hcvRNA: values.svr12TestingHcvRna,\r\n          hcvRNAValue: values.svr12TestingHcvRnaValue,\r\n          retreatmentDateTested: formatDate(values.svr12RetreatmentDateTested),\r\n          // retreatmentHcvRNA: \"string\",\r\n          // retreatmentHcvRNAValue: \"string\",\r\n        },\r\n        // pastTreatmentExperience: \"string\",\r\n        prescribedDuration: values.hcvRetreatmentPrescribedDuration,\r\n        treatmentExperience: values.hcvTreatmentExperience,\r\n      },\r\n    };\r\n\r\n    setCookie(\"heaptitis3PayloadValue\", restructuredTreatmentPayload, 1);\r\n    postDataWithToken(restructuredTreatmentPayload, \"hepatitis/treatment\");\r\n  };\r\n\r\n  const moveBack = () => {\r\n    window.scrollTo(0, 0);\r\n    setStep(1);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm3ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis3\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n  const postDataWithToken = async (data) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${apiUrl}hepatitis/update-hepatitis-treatment/${enrollmentUuid}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      // Handle the response if needed\r\n      console.log(\"Post successful:\", response.data);\r\n      toast.success(\"Enrolment submitted successfully\");\r\n\r\n      setCookie(\r\n        \"enrollmentIds\",\r\n        {\r\n          enrollmentId: response.data?.enrollmentId,\r\n          enrollmentUuid: response.data?.enrollmentUuid,\r\n        },\r\n        1\r\n      );\r\n      //   setStep(1);\r\n      return response.data;\r\n    } catch (error) {\r\n      // Handle any errors that occurred during the request\r\n      toast.error(\"Enrolment failed\");\r\n      console.error(\"Error posting data:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  function deleteCookie(name) {\r\n    document.cookie =\r\n      name + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n  }\r\n\r\n  function convertStringBooleanValues(originalObj) {\r\n    const newObj = {};\r\n\r\n    for (const key in originalObj) {\r\n      if (originalObj.hasOwnProperty(key)) {\r\n        const value = originalObj[key];\r\n        if (typeof value === \"string\") {\r\n          newObj[key] =\r\n            value.toLowerCase() === \"yes\"\r\n              ? \"YES\"\r\n              : value.toLowerCase() === \"no\"\r\n              ? \"NO\"\r\n              : value;\r\n        } else {\r\n          newObj[key] = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    return newObj;\r\n  }\r\n\r\n  function formatDate(inputDate) {\r\n    // Split the input date string into an array\r\n    var dateArray = inputDate.split(\"-\");\r\n\r\n    // Check if the input date is in the correct format (yyyy-mm-dd)\r\n    if (dateArray.length !== 3) {\r\n      return \"Invalid date format\";\r\n    }\r\n\r\n    // Extract the year, month, and day from the array\r\n    var year = dateArray[0];\r\n    var month = dateArray[1];\r\n    var day = dateArray[2];\r\n\r\n    // Create a new date string in the \"dd-mm-yyyy\" format\r\n    var newDateFormat = day + \"-\" + month + \"-\" + year;\r\n\r\n    return newDateFormat;\r\n  }\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n    setBasicInfo({\r\n      enrollmentUuid: enrollmentUuid,\r\n      hepatitisBTreatment: {\r\n        dateStarted: `${\r\n          treatmentInfo?.hepatitisBTreatmentDto?.dateStarted.year\r\n        }-${treatmentInfo?.hepatitisBTreatmentDto?.dateStarted.monthValue}-${\r\n          treatmentInfo?.hepatitisBTreatmentDto?.dateStarted.dayOfMonth.toString()\r\n            .length > 1\r\n            ? treatmentInfo?.hepatitisBTreatmentDto?.dateStarted.dayOfMonth\r\n            : \"0\" +\r\n              treatmentInfo?.hepatitisBTreatmentDto?.dateStarted.dayOfMonth\r\n        }`,\r\n        dateStopped: `${\r\n          treatmentInfo?.hepatitisBTreatmentDto?.dateStopped.year\r\n        }-${treatmentInfo?.hepatitisBTreatmentDto?.dateStopped.monthValue}-${\r\n          treatmentInfo?.hepatitisBTreatmentDto?.dateStopped.dayOfMonth.toString()\r\n            .length > 1\r\n            ? treatmentInfo?.hepatitisBTreatmentDto?.dateStopped.dayOfMonth\r\n            : \"0\" +\r\n              treatmentInfo?.hepatitisBTreatmentDto?.dateStopped.dayOfMonth\r\n        }`,\r\n        hbvPastTreatmentRegimen:\r\n          treatmentInfo?.hepatitisBTreatmentDto?.hbvPastTreatmentRegimen,\r\n        hepatitisBRegimenSwitch: {\r\n          adverseEffectReported:\r\n            treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch\r\n              .adverseEffectReported,\r\n          dateStarted: `${\r\n            treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch\r\n              .dateStarted.year\r\n          }-${\r\n            treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch\r\n              .dateStarted.monthValue\r\n          }-${\r\n            treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch.dateStarted.dayOfMonth.toString()\r\n              .length > 1\r\n              ? treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch\r\n                  .dateStarted.dayOfMonth\r\n              : \"0\" +\r\n                treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch\r\n                  .dateStarted.dayOfMonth\r\n          }`,\r\n          dateStopped: `${\r\n            treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch\r\n              .dateStopped.year\r\n          }-${\r\n            treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch\r\n              .dateStopped.monthValue\r\n          }-${\r\n            treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch.dateStopped.dayOfMonth.toString()\r\n              .length > 1\r\n              ? treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch\r\n                  .dateStopped.dayOfMonth\r\n              : \"0\" +\r\n                treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch\r\n                  .dateStopped.dayOfMonth\r\n          }`,\r\n          newRegime:\r\n            treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch\r\n              .newRegime,\r\n          reasonForSwitch:\r\n            treatmentInfo?.hepatitisBTreatmentDto?.hepatitisBRegimenSwitch\r\n              .reasonForSwitch,\r\n        },\r\n        historyOfAdverseEffect:\r\n          treatmentInfo?.hepatitisBTreatmentDto?.historyOfAdverseEffect,\r\n        newRegimen: treatmentInfo?.hepatitisBTreatmentDto?.newRegimen,\r\n        reasonForHepatitisBTreatment: {\r\n          comment:\r\n            treatmentInfo?.hepatitisBTreatmentDto?.reasonForHepatitisBTreatment\r\n              .comment,\r\n          reasonsForTreatment:\r\n            treatmentInfo?.hepatitisBTreatmentDto?.reasonForHepatitisBTreatment\r\n              .comment,\r\n        },\r\n        treatmentExperience:\r\n          treatmentInfo?.hepatitisBTreatmentDto?.treatmentExperience,\r\n      },\r\n      hepatitisCTreatment: {\r\n        adverseEffectReported:\r\n          treatmentInfo?.hepatitisCTreatmentDto?.adverseEffectReported,\r\n        dateCompleted: `${\r\n          treatmentInfo?.hepatitisCTreatmentDto?.dateCompleted.year\r\n        }-${treatmentInfo?.hepatitisCTreatmentDto?.dateCompleted.monthValue}-${\r\n          treatmentInfo?.hepatitisCTreatmentDto?.dateCompleted.dayOfMonth.toString()\r\n            .length > 1\r\n            ? treatmentInfo?.hepatitisCTreatmentDto?.dateCompleted.dayOfMonth\r\n            : \"0\" +\r\n              treatmentInfo?.hepatitisCTreatmentDto?.dateCompleted.dayOfMonth\r\n        }`,\r\n        dateStarted: `${\r\n          treatmentInfo?.hepatitisCTreatmentDto?.dateStarted.year\r\n        }-${treatmentInfo?.hepatitisCTreatmentDto?.dateStarted.monthValue}-${\r\n          treatmentInfo?.hepatitisCTreatmentDto?.dateStarted.dayOfMonth.toString()\r\n            .length > 1\r\n            ? treatmentInfo?.hepatitisCTreatmentDto?.dateStarted.dayOfMonth\r\n            : \"0\" +\r\n              treatmentInfo?.hepatitisCTreatmentDto?.dateStarted.dayOfMonth\r\n        }`,\r\n\r\n        dateStopped: `${\r\n          treatmentInfo?.hepatitisCTreatmentDto?.dateStopped.year\r\n        }-${treatmentInfo?.hepatitisCTreatmentDto?.dateStopped.monthValue}-${\r\n          treatmentInfo?.hepatitisCTreatmentDto?.dateStopped.dayOfMonth.toString()\r\n            .length > 1\r\n            ? treatmentInfo?.hepatitisCTreatmentDto?.dateStopped.dayOfMonth\r\n            : \"0\" +\r\n              treatmentInfo?.hepatitisCTreatmentDto?.dateStopped.dayOfMonth\r\n        }`,\r\n        hbvPastTreatmentRegimen:\r\n          treatmentInfo?.hepatitisCTreatmentDto?.hbvPastTreatmentRegimen,\r\n        hcvRetreatment: {\r\n          dateStarted: `${\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment.dateStarted\r\n              .year\r\n          }-${\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment.dateStarted\r\n              .monthValue\r\n          }-${\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment.dateStarted.dayOfMonth.toString()\r\n              .length > 1\r\n              ? treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment\r\n                  .dateStarted.dayOfMonth\r\n              : \"0\" +\r\n                treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment\r\n                  .dateStarted.dayOfMonth\r\n          }`,\r\n          dateStopped: `${\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment.dateStopped\r\n              .year\r\n          }-${\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment.dateStopped\r\n              .monthValue\r\n          }-${\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment.dateStopped.dayOfMonth.toString()\r\n              .length > 1\r\n              ? treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment\r\n                  .dateStopped.dayOfMonth\r\n              : \"0\" +\r\n                treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment\r\n                  .dateStopped.dayOfMonth\r\n          }`,\r\n\r\n          hbvPastTreatmentRegimen:\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment\r\n              .hbvPastTreatmentRegimen,\r\n          history_of_AdverseEffect:\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment\r\n              .history_of_AdverseEffect,\r\n          newRegimen:\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment.newRegimen,\r\n          prescribedDuration: 0,\r\n          retreatmentAdverseEffect:\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment\r\n              .retreatmentAdverseEffect,\r\n          prescribedDuration:\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hcvRetreatment\r\n              .prescribedDuration,\r\n        },\r\n        hepatitisSvr12Testing: {\r\n          dateTested: `${\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing\r\n              .dateTested.year\r\n          }-${\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing\r\n              .dateTested.monthValue\r\n          }-${\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing.dateTested.dayOfMonth.toString()\r\n              .length > 1\r\n              ? treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing\r\n                  .dateTested.dayOfMonth\r\n              : \"0\" +\r\n                treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing\r\n                  .dateTested.dayOfMonth\r\n          }`,\r\n          hcvRNA:\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing.hcvRNA,\r\n          hcvRNAValue:\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing\r\n              .hcvRNAValue,\r\n          retreatmentDateTested: `${\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing\r\n              .retreatmentDateTested.year\r\n          }-${\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing\r\n              .retreatmentDateTested.monthValue\r\n          }-${\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing.retreatmentDateTested.dayOfMonth.toString()\r\n              .length > 1\r\n              ? treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing\r\n                  .retreatmentDateTested.dayOfMonth\r\n              : \"0\" +\r\n                treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing\r\n                  .retreatmentDateTested.dayOfMonth\r\n          }`,\r\n          retreatmentHcvRNA:\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing\r\n              .retreatmentHcvRNA,\r\n          retreatmentHcvRNAValue:\r\n            treatmentInfo?.hepatitisCTreatmentDto?.hepatitisSvr12Testing\r\n              .retreatmentHcvRNAValue,\r\n        },\r\n        pastTreatmentExperience:\r\n          treatmentInfo?.hepatitisCTreatmentDto?.pastTreatmentExperience,\r\n\r\n        prescribedDuration:\r\n          treatmentInfo?.hepatitisCTreatmentDto?.prescribedDuration,\r\n        treatmentExperience:\r\n          treatmentInfo?.hepatitisCTreatmentDto?.treatmentExperience,\r\n      },\r\n    });\r\n  }, [treatmentInfo, enrollmentUuid]);\r\n\r\n  console.log(treatmentInfo?.hepatitisBTreatment?.treatmentExperience);\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hbvTreatmentRegimenSwitch: true,\r\n    hbvTreatmentReasonforTreatment: true,\r\n    hcvTreatmentRegimenSwitch: true,\r\n    hcvTreatmentRegimenHcvRetreatment: true,\r\n    hcvTreatmentSvr12Testing: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Hepatitis B Treatment\r\n                </h5>\r\n              </div>\r\n              <div>\r\n                <div className=\"card-body\">\r\n                  <div\r\n                    className=\"basic-form\"\r\n                    style={{ padding: \"0 50px 0 50px\" }}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvTreatmentExperience\">\r\n                            Treatment experience\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"treatmentExperienceB\"\r\n                            id=\"treatmentExperience\"\r\n                            disabled={action === \"view\" ? true : false}\r\n                            value={\r\n                              basicInfo.hepatitisBTreatment.treatmentExperience\r\n                            }\r\n                            onChange={handleInputChangeBasicHBReason}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.treatmentExperienceB !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.treatmentExperienceB}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      {/* {basicInfo.hbvTreatmentExperience && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvPastTreatmentRegimen\">\r\n                                Past treatment regime\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvPastTreatmentRegimen\"\r\n                                id=\"hbvPastTreatmentRegimen\"\r\n                                value={basicInfo.hbvPastTreatmentRegimen}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvPastTreatmentRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )} */}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvNewRegimen\">New regime</Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            disabled={action === \"view\" ? true : false}\r\n                            name=\"newRegimen\"\r\n                            id=\"newRegimen\"\r\n                            value={basicInfo.hepatitisBTreatment.newRegimen}\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.newRegimen !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.newRegimen}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvPastTreatmentRegimen\">\r\n                            Hbv Past treatment regimen\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            disabled={action === \"view\" ? true : false}\r\n                            name=\"hbvPastTreatmentRegimen\"\r\n                            id=\"hbvPastTreatmentRegimen\"\r\n                            value={\r\n                              basicInfo.hepatitisBTreatment\r\n                                .hbvPastTreatmentRegimen\r\n                            }\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hbvPastTreatmentRegimen}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      {basicInfo.hbvPastTreatmentRegimen !== \"\" && (\r\n                        <>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvDateStarted\">Date started</Label>\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateStarted\"\r\n                                disabled={action === \"view\" ? true : false}\r\n                                id=\"dateStarted\"\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                value={\r\n                                  basicInfo.hepatitisBTreatment.dateStarted\r\n                                }\r\n                                onChange={handleInputChangeBasicHB}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {errors.dateStarted !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.dateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvDateStopped\">Date stopped</Label>\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateStopped\"\r\n                                disabled={action === \"view\" ? true : false}\r\n                                id=\"dateStopped\"\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                value={\r\n                                  basicInfo.hepatitisBTreatment.dateStopped\r\n                                }\r\n                                onChange={handleInputChangeBasicHB}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {errors.dateStopped !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.dateStopped}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvHistoryOfAdverseEffect\">\r\n                            History of adverse effect\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <select\r\n                            className=\"form-control\"\r\n                            disabled={action === \"view\" ? true : false}\r\n                            name=\"historyOfAdverseEffect\"\r\n                            id=\"historyOfAdverseEffect\"\r\n                            value={\r\n                              basicInfo.hepatitisBTreatment\r\n                                .historyOfAdverseEffect\r\n                            }\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.historyOfAdverseEffect !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.historyOfAdverseEffect}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Regimen Switch\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hbvTreatmentRegimenSwitch:\r\n                            !prevState.hbvTreatmentRegimenSwitch,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hbvTreatmentRegimenSwitch}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchNewRegimen\">\r\n                              New Regimen\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              name=\"hbvRegimeSwitchNewRegimen\"\r\n                              id=\"hbvRegimeSwitchNewRegimen\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.newRegime\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchNewRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchNewRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchDateStarted\">\r\n                              Date Started{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hbvRegimeSwitchDateStarted\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              id=\"hbvRegimeSwitchDateStarted\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.dateStarted\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchDateStopped\">\r\n                              Date Stopped{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hbvRegimeSwitchDateStopped\"\r\n                              id=\"hbvRegimeSwitchDateStopped\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.dateStopped\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchDateStopped !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchDateStopped}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvAdverseEffectReported\">\r\n                              Adverse effect reported{\" \"}\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvAdverseEffectReported\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              id=\"hbvAdverseEffectReported\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.adverseEffectReported\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {errors.hbvAdverseEffectReported !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvAdverseEffectReported}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchReason\">\r\n                              Reason for switch\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              type=\"text\"\r\n                              name=\"hbvRegimeSwitchReason\"\r\n                              id=\"hbvRegimeSwitchReason\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.reasonForSwitch\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchReason !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchReason}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Reason for treatment\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hbvTreatmentReasonforTreatment:\r\n                            !prevState.hbvTreatmentReasonforTreatment,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hbvTreatmentReasonforTreatment}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvReasonForTreatmentEligibility\">\r\n                              Reasons for treatment\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvReasonForTreatmentEligibility\"\r\n                              id=\"hbvReasonForTreatmentEligibility\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              onChange={handleInputChangeBasicHBReason}\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .reasonForHepatitisBTreatment\r\n                                  .reasonsForTreatment\r\n                              }\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n\r\n                              <option value={\"treatment eligible\"}>\r\n                                Treatment Eligible\r\n                              </option>\r\n                              <option value={\"hbv pmtct\"}>HBV PMTCT</option>\r\n                            </select>\r\n                            {errors.hbvReasonForTreatmentEligibility !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvReasonForTreatmentEligibility}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvReasonsForTreatmentComment\">\r\n                              Comment\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            <textarea\r\n                              className=\"form-control\"\r\n                              name=\"hbvReasonsForTreatmentComment\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              id=\"hbvReasonsForTreatmentComment\"\r\n                              onChange={handleInputChangeBasicHBReason}\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .reasonForHepatitisBTreatment.comment\r\n                              }\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                                height: \"80px\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvReasonsForTreatmentComment !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvReasonsForTreatmentComment}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Hepatitis C Treatment\r\n                </h5>\r\n              </div>\r\n\r\n              <div>\r\n                <div className=\"card-body\">\r\n                  <div\r\n                    className=\"basic-form\"\r\n                    style={{ padding: \"0 50px 0 50px\" }}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvAdverseEventReported\">\r\n                            Adverse Effect reported\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hcvAdverseEventReported\"\r\n                            id=\"hcvAdverseEventReported\"\r\n                            disabled={action === \"view\" ? true : false}\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment\r\n                                .adverseEffectReported\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"YES\">Yes</option>\r\n                            <option value=\"NO\">No</option>\r\n                          </select>\r\n                          {errors.hcvAdverseEventReported !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvAdverseEventReported}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvTreatmentExperience\">\r\n                            Treatment experience\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvTreatmentExperience\"\r\n                            disabled={action === \"view\" ? true : false}\r\n                            id=\"hcvTreatmentExperience\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment.treatmentExperience\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.hcvTreatmentExperience !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvTreatmentExperience}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvPastTreatmentRegimen\">\r\n                            HBV Past treatment regimen\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            disabled={action === \"view\" ? true : false}\r\n                            name=\"pastTreatmentExperience\"\r\n                            id=\"pastTreatmentExperience\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment\r\n                                .pastTreatmentExperience\r\n                            }\r\n                            onChange={handleInputChangeBasicHCGen}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.pastTreatmentExperience !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.pastTreatmentExperience}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvDateStarted\">Date started</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvDateStarted\"\r\n                            disabled={action === \"view\" ? true : false}\r\n                            id=\"hcvDateStarted\"\r\n                            value={basicInfo.hepatitisCTreatment.dateStarted}\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hcvDateStarted !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvDateStarted}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvDateCompleted\">Date completed</Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvDateCompleted\"\r\n                            disabled={action === \"view\" ? true : false}\r\n                            id=\"hcvDateCompleted\"\r\n                            value={basicInfo.hepatitisCTreatment.dateCompleted}\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hcvDateCompleted !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvDateCompleted}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvDateStopped\">Date stopped</Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            disabled={action === \"view\" ? true : false}\r\n                            name=\"hcvDateStopped\"\r\n                            id=\"hcvDateStopped\"\r\n                            value={basicInfo.hepatitisCTreatment.dateStopped}\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hcvDateStopped !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvDateStopped}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvPrescribedDuration\">\r\n                            Prescribed duration\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hcvPrescribedDuration\"\r\n                            disabled={action === \"view\" ? true : false}\r\n                            id=\"hcvPrescribedDuration\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment.prescribedDuration\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={0}>Select</option>\r\n                            <option value={8}>8 weeks</option>\r\n                            <option value={12}>12 weeks</option>\r\n                            <option value={24}>24 weeks</option>\r\n                          </select>\r\n                          {errors.hcvPrescribedDuration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvPrescribedDuration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvPastTreatmentRegimenForHcv\">\r\n                            HBV past treatment regimen\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <select\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"hbvPastTreatmentRegimenForHcv\"\r\n                            id=\"hbvPastTreatmentRegimenForHcv\"\r\n                            disabled={action === \"view\" ? true : false}\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment\r\n                                .hbvPastTreatmentRegimen\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.treatmentExperienceB !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.treatmentExperienceB}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    SVR 12 Testing\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hcvTreatmentSvr12Testing:\r\n                            !prevState.hcvTreatmentSvr12Testing,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hcvTreatmentSvr12Testing}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hcvTreatmentSvr12Testing}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12TestingDateStarted\">\r\n                              Date tested\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"svr12TestingDateStarted\"\r\n                              id=\"svr12TestingDateStarted\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              type=\"date\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.dateTested\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.svr12TestingDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.svr12TestingDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12TestingHcvRna\">\r\n                              HCV RNA <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"svr12TestingHcvRna\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              id=\"svr12TestingHcvRna\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.hcvRNA\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"DETECTED\">Detected</option>\r\n                              <option value=\"UNDETECTED\">Undetected</option>\r\n                            </select>\r\n                            {errors.svr12TestingHcvRna !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.svr12TestingHcvRna}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {basicInfo.hepatitisCTreatment.hepatitisSvr12Testing\r\n                          .hcvRNA === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRnaValue\">\r\n                                Input HCV RNA value\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRnaValue\"\r\n                                disabled={action === \"view\" ? true : false}\r\n                                id=\"svr12TestingHcvRnaValue\"\r\n                                type=\"text\"\r\n                                value={\r\n                                  basicInfo.hepatitisCTreatment\r\n                                    .hepatitisSvr12Testing.hcvRNAValue\r\n                                }\r\n                                onChange={handleInputChangeBasicHCSVR}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        {/* <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRnaValue\">\r\n                                Input HCV RNA value\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRnaValue\"\r\n                                id=\"svr12TestingHcvRnaValue\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={basicInfo.svr12TestingHcvRnaValue}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.svr12TestingHcvRnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingHcvRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div> */}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12RetreatmentDateTested\">\r\n                              Retreatment date tested\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"svr12RetreatmentDateTested\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              id=\"svr12RetreatmentDateTested\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.retreatmentDateTested\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              type=\"date\"\r\n                            />\r\n\r\n                            {errors.svr12RetreatmentDateTested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.svr12RetreatmentDateTested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12RetreatmentHcvRna\">\r\n                              Retreatment HCV RNA(IU/ml)\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"svr12RetreatmentHcvRna\"\r\n                              id=\"svr12RetreatmentHcvRna\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.retreatmentHcvRNA\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"DETECTED\">Detected</option>\r\n                              <option value=\"UNDETECTED\">Undetected</option>\r\n                            </select>\r\n\r\n                            {errors.svr12RetreatmentHcvRna !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.svr12RetreatmentHcvRna}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {basicInfo.hepatitisCTreatment.hepatitisSvr12Testing\r\n                          .retreatmentHcvRNA === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12RetreatmentHcvRnaValue\">\r\n                                Input Retreatment HCV RNA value(IU/ml)\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"svr12RetreatmentHcvRnaValue\"\r\n                                id=\"svr12RetreatmentHcvRnaValue\"\r\n                                value={\r\n                                  basicInfo.hepatitisCTreatment\r\n                                    .hepatitisSvr12Testing\r\n                                    .retreatmentHcvRNAValue\r\n                                }\r\n                                onChange={handleInputChangeBasicHCSVR}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {/* {errors.svr12TestingHcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.svr12TestingHcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    HCV Retreatment\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hcvTreatmentRegimenHcvRetreatment:\r\n                            !prevState.hcvTreatmentRegimenHcvRetreatment,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={\r\n                      isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment\r\n                    }\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse\r\n                    in={isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment}\r\n                  >\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentNewRegimen\">\r\n                              New regimen\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentNewRegimen\"\r\n                              id=\"hcvRetreatmentNewRegimen\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              type=\"text\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .newRegimen\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hcvRetreatmentNewRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentNewRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentPrescribedDuration\">\r\n                              Prescribed Duration\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentPrescribedDuration\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              id=\"hcvRetreatmentPrescribedDuration\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .prescribedDuration\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={0}>Select</option>\r\n                              <option value={8}>8 weeks</option>\r\n                              <option value={12}>12 weeks</option>\r\n                              <option value={24}>24 weeks</option>\r\n                            </select>\r\n                            {errors.hcvRetreatmentPrescribedDuration !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentPrescribedDuration}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentDateStarted\">\r\n                              Date started\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentDateStarted\"\r\n                              id=\"hcvRetreatmentDateStarted\"\r\n                              type=\"date\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .dateStarted\r\n                              }\r\n                              disabled={action === \"view\" ? true : false}\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n\r\n                            {errors.hcvRetreatmentDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentDateStopped\">\r\n                              Date stopped\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentDateStopped\"\r\n                              id=\"hcvRetreatmentDateStopped\"\r\n                              disabled={action === \"view\" ? true : false}\r\n                              type=\"date\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .dateStopped\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hcvRetreatmentDateStopped !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentDateStopped}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentAdverseEffect\">\r\n                              Retreatment Adverse effect\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentAdverseEffect\"\r\n                              id=\"hcvRetreatmentAdverseEffect\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .retreatmentAdverseEffect\r\n                              }\r\n                              disabled={action === \"view\" ? true : false}\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {errors.hcvRetreatmentAdverseEffect !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentAdverseEffect}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentHistoryOfAdverseEffect\">\r\n                              History of adverse effect\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentHistoryOfAdverseEffect\"\r\n                              id=\"hcvRetreatmentHistoryOfAdverseEffect\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .history_of_AdverseEffect\r\n                              }\r\n                              disabled={action === \"view\" ? true : false}\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {errors.hcvRetreatmentHistoryOfAdverseEffect !==\r\n                            \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentHistoryOfAdverseEffect}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {false ? <Spinner /> : \"\"}\r\n            <br />\r\n            {action === \"update\" && (\r\n              <div className=\"d-flex justify-content-end\">\r\n                {/* <MatButton\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<ArrowBackIcon />}\r\n                onClick={moveBack}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n              </MatButton> */}\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  onClick={handleSubmit}\r\n                  // endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            )}\r\n\r\n            {/* </Form> */}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TreatmentSubmittedForm;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport \"./patient.css\";\r\n// import Form from 'react-bootstrap/Form';\r\nimport EnrolmentSubmittedForm from \"./SubmittedForms/enrolmentForm\";\r\nimport DiagnosisSubmitedForm from \"./SubmittedForms/DiagnosisSubmittedForm\";\r\nimport TreatmentSubmittedForm from \"./SubmittedForms/TreatmentSubmittedForm\";\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nconst UserRegistration = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const location = useLocation();\r\n  const locationState = location.state;\r\n  const [diagnosisInfo, setDiagnosisInfo] = useState({});\r\n  const [treatmentInfo, setTreatmentInfo] = useState({});\r\n  const [enrollmentUuid, setEnrollmentUuid] = useState(\"\");\r\n  const [enrollmentUuidT, setEnrollmentUuidT] = useState(\"\");\r\n  const [allPatientInfo, setAllPatientInfo] = useState({});\r\n\r\n  const viewHepatitisDiagnosis = (eId) => {\r\n    axios\r\n      .get(`${baseUrl}hepatitis/view-hepatitis-diagnosis/${eId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setDiagnosisInfo(response.data);\r\n        setEnrollmentUuid(response.data.id);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const viewHepatitisTreatment = (eId) => {\r\n    axios\r\n      .get(`${baseUrl}hepatitis/view-hepatitis-treatment/${eId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setTreatmentInfo(response.data);\r\n        setEnrollmentUuidT(response.data.id);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const viewHepatitisEnrollment = (value) => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}hepatitis/view-hepatitis-enrollment/${locationState.patientObj.personUuid}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        viewHepatitisDiagnosis(response.data.uuid);\r\n        viewHepatitisTreatment(response.data.uuid);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getFullPatientDetail = (value) => {\r\n    axios\r\n      .get(`${baseUrl}patient/${locationState.patientObj.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setAllPatientInfo(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    viewHepatitisEnrollment();\r\n    getFullPatientDetail();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Card className={classes.cardBottom}>\r\n        <CardContent>\r\n          <Link\r\n            to={{\r\n              pathname: \"/patient-history\",\r\n              state: { patientObj: locationState.patientObj },\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end ms-1\"\r\n              style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              startIcon={<TiArrowBack />}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                Back{\" \"}\r\n              </span>\r\n            </Button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n          {locationState.showForm.enrollment && (\r\n            <EnrolmentSubmittedForm\r\n              action={locationState.actionType}\r\n              patientObj={locationState.patientObj}\r\n              allPatientInfo={allPatientInfo}\r\n            />\r\n          )}\r\n\r\n          {locationState.showForm.diagnosis && (\r\n            <DiagnosisSubmitedForm\r\n              action={locationState.actionType}\r\n              patientObj={locationState.patientObj}\r\n              diagnosisInfo={diagnosisInfo}\r\n              enrollmentUuid={enrollmentUuid}\r\n            />\r\n          )}\r\n          {locationState.showForm.treatment && (\r\n            <TreatmentSubmittedForm\r\n              action={locationState.actionType}\r\n              patientObj={locationState.patientObj}\r\n              treatmentInfo={treatmentInfo}\r\n              enrollmentUuid={enrollmentUuidT}\r\n            />\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"Enrolment\", \"Diagnosis\", \"Treatment\"];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return \"Enrolment\";\r\n    case 1:\r\n      return \"Diagnosis\";\r\n    case 2:\r\n      return \"Treatment\";\r\n    default:\r\n      return \"Unknown stepIndex\";\r\n  }\r\n}\r\n\r\nexport default function Steppers({ activeStep }) {\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    <Stepper activeStep={activeStep} alternativeLabel>\r\n      {steps.map((label) => (\r\n        <Step key={label}>\r\n          <StepLabel>{label}</StepLabel>\r\n        </Step>\r\n      ))}\r\n    </Stepper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm2ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\n// hcRnaValue\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm2 = ({ setStep }) => {\r\n  const [userId, setUserId] = useState(getCookie(\"enrollmentIds\"));\r\n  console.log(getCookie(\"enrollmentIds\"));\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    clinicalParameters: {\r\n      afp: \"\",\r\n      alt: \"\",\r\n      apriScore: \"\",\r\n      ascites: \"\",\r\n      ast: \"\",\r\n      astValue: \"\",\r\n      childPughScore: \"\",\r\n      creatinine: \"\",\r\n      diagnosis_result: \"\",\r\n      directBiliribin: \"\",\r\n      fib4: \"\",\r\n      fibroscan: \"\",\r\n      gradeOfEncephalopathy: \"\",\r\n      liverBiopsyStage: \"\",\r\n      prothrombinTimeNR: \"\",\r\n      pst: \"\",\r\n      severityOfAscites: \"MILD\",\r\n      totalBiliRubin: \"\",\r\n      ultrasoundScan: \"\",\r\n      urea: \"\",\r\n    },\r\n    enrollmentUuid: userId?.enrollmentUuid,\r\n    hepatitisBTest: {\r\n      albumin: \"\",\r\n      antiHDV: \"\",\r\n      comment: \"\",\r\n      ctScan: \"\",\r\n      dateHbvDnaTestRequested: \"\",\r\n      dateHbvSampleRequested: \"\",\r\n      dateHbvTestRequested: \"\",\r\n      hbeAG: \"\",\r\n      // attaching missing props\r\n      dateHbvDnaResultReported: \"\",\r\n      hbsAgQuantification: \"\",\r\n      hbvDna: \"DETECTED\",\r\n      hvbDnaValue: \"\",\r\n      pmtctEligible: \"\",\r\n      stagingDateOfLiverBiopsy: \"\",\r\n      treatmentEligible: \"\",\r\n    },\r\n    hepatitisCTest: {\r\n      commobidities: \"\",\r\n      hcRnaValue: \"\",\r\n      hcvRNA: \"\",\r\n      hepatitisCoinfection: \"\",\r\n      multipleInfection: \"\",\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // handle input changes\r\n  const handleInputChangeBasic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisBTest: {\r\n        ...basicInfo.hepatitisBTest,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n    //   if (e.target.name === \"dateHbvTestRequested\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n    //   if (e.target.name === \"dateHbvDnaResultReported\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n    //   if (e.target.name === \"stagingDateOfLiverBiopsy\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n    //   if (e.target.name === \"hbvDna\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n    //   if (e.target.name === \"hvbDnaValue\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n\r\n    //   if (e.target.name === \"hbsAgQuantification\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n\r\n    //   if (e.target.name === \"hbsAgQuantification\" && e.target.value !== \"\") {\r\n    //     setBasicInfo({\r\n    //       ...basicInfo,\r\n    //       hepatitisBTest: {\r\n    //         ...basicInfo.hepatitisBTest,\r\n    //         [e.target.name]: e.target.value,\r\n    //       },\r\n    //     });\r\n    //   }\r\n  };\r\n\r\n  const handleInputChangeBasicForHC = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisCTest: {\r\n        ...basicInfo.hepatitisCTest,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n  const handleInputChangeBasicForClinic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      clinicalParameters: {\r\n        ...basicInfo.clinicalParameters,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  // to capture the error\r\n  let temp = { ...errors };\r\n  const validate = () => {\r\n    temp.dateHbvDnaTestRequested = basicInfo.hepatitisBTest\r\n      .dateHbvDnaTestRequested\r\n      ? \"\"\r\n      : \"Date HBV DNA test requested is required \";\r\n    temp.dateHbvTestRequested = basicInfo.hepatitisBTest.dateHbvTestRequested\r\n      ? \"\"\r\n      : \"Date HBV test requested is required\";\r\n\r\n    temp.dateHbvSampleRequested = basicInfo.hepatitisBTest\r\n      .dateHbvSampleRequested\r\n      ? \"\"\r\n      : \"Date HBV Sample requested is required\";\r\n\r\n    \r\n\r\n    // temp.hvbDnaValue =\r\n    //   basicInfo.hepatitisBTest.hvbDnaValue &&\r\n    //   basicInfo.hepatitisBTest.hbvDna === \"DETECTED\"\r\n    //     ? \"\"\r\n    //     : \" Input HBV DNA value is required\";\r\n\r\n    // temp.hcRnaValue =\r\n    //   basicInfo.hepatitisCTest.hcRnaValue &&\r\n    //   basicInfo.hepatitisCTest.hcvRNA === \"DETECTED\"\r\n    //     ? \"\"\r\n    //     : \" Input HCV RNA Value is required\";\r\n\r\n    temp.commobidities = basicInfo.hepatitisCTest.commobidities\r\n      ? \"\"\r\n      : \"Commobiditiesis required\";\r\n    temp.multipleInfection = basicInfo.hepatitisCTest.multipleInfection\r\n      ? \"\"\r\n      : \"Multiple Infection required\";\r\n\r\n    // temp.district = info.district ? \"\" : \"Province/LGA is required.\";\r\n    // temp.stateId = info.stateId ? \"\" : \"State is required.\";\r\n    // temp.dateOfBirth = info.dateOfBirth ? \"\" : \"Date of Birth is required.\";\r\n    // temp.dateOfRegistration = info.dateOfRegistration\r\n    //   ? \"\"\r\n    //   : \"Date of Registration is required.\";\r\n    // temp.maritalStatusId = basicInfo.maritalStatusId\r\n    //   ? \"\"\r\n    //   : \"Marital Status is required\";\r\n    // temp.educationId = info.educationId ? \"\" : \"Education is required\";\r\n    // temp.relationship = basicInfo.relationship\r\n    //   ? \"\"\r\n    //   : \"Relationship is required\";\r\n    // temp.genderId = basicInfo.personDto.genderId ? \"\" : \"sex is required\";\r\n    // temp.careEntryPoint = basicInfo.careEntryPoint\r\n    //   ? \"\"\r\n    //   : \"careEntryPoint is required\";\r\n    // temp.pregnancy = basicInfo.pregnancy ? \"\" : \"pregnancy status is required\";\r\n    // temp.weight = basicInfo.weight ? \"\" : \"Weight is required\";\r\n    // temp.height = basicInfo.height ? \"\" : \"Height is required\";\r\n    // temp.hepatitisB = basicInfo.hepatitisB ? \"\" : \"HepatitisB is required\";\r\n    // temp.breastfeeding = basicInfo.breastfeeding\r\n    //   ? \"\"\r\n    //   : \"Breastfeeding status is required\";\r\n    // temp.dateOfFirstHepatitisBPositiveScreening = basicInfo.screening\r\n    //   .dateOfFirstHepatitisBPositiveScreening\r\n    //   ? \"\"\r\n    //   : \"Date of first HepatitisB positive screening is required\";\r\n\r\n    //\r\n    console.log(temp);\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const postDataWithToken = async (data, key) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}${key}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      console.log(\"Post successful:\", response.data);\r\n      toast.success(\"Diagnosis submitted successfully\");\r\n      setStep(2);\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(\"Diagnosis failed\");\r\n      console.error(\"Error posting data:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validating the input\r\n    window.scrollTo(0, 0);\r\n\r\n    console.log(basicInfo);\r\n    // console.log(errors);\r\n\r\n    if (validate()) {\r\n      console.log(\"good to go\", basicInfo);\r\n      postDataWithToken(basicInfo, \"hepatitis/diagnosis\");\r\n    }\r\n  };\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    const enrollmentIds = getCookie(\"enrollmentIds\");\r\n    const restructuredDiagnosisPayload = {\r\n      enrollmentUuid: enrollmentIds?.enrollmentUuid,\r\n      hepatitisBTest: {\r\n        dateHbvTestRequested: values.dateHbvTestRequested,\r\n        dateHbvSampleRequested: values.dateHbvSampleRequested,\r\n        dateHbvDnaTestRequested: values.dateHbvDnaTestRequested,\r\n        stagingDateOfLiverBiopsy: values.stagingDateOfLiverBiopsy,\r\n        hbvDna: values.hbvDna,\r\n        hvbDnaValue: values.hvbDnaValue,\r\n        hbsAgQuantification: values.hbsAgQuantification,\r\n        ctScan: values.ctScan,\r\n        albumin: values.albumin,\r\n        hbeAG: values.hbeAG,\r\n        antiHDV: values.antiHDV,\r\n        treatmentEligible: values.treatmentEligible,\r\n        pmtctEligible: values.pmtctEligible,\r\n        comment: values.comment,\r\n      },\r\n      hepatitisCTest: {\r\n        hcvRNA: values.hcvRNA,\r\n        hcRnaValue: values.hcRnaValue,\r\n        hepatitisCoinfection: values.hepatitisCoinfection,\r\n        commobidities: values.commobidities,\r\n        multipleInfection: values.multipleInfection,\r\n      },\r\n      clinicalParameters: {\r\n        ast: values.ast,\r\n        alt: values.alt,\r\n        pst: values.plt,\r\n        astValue: values.astValue,\r\n        totalBiliRubin: values.totalBiliRubin,\r\n        directBiliribin: values.directBiliribin,\r\n        apriScore: values.apriScore,\r\n        fib4: values.fib4,\r\n        prothrombinTimeNR: values.prothrombinTimeNR,\r\n        urea: values.urea,\r\n        creatinine: values.creatinine,\r\n        afp: values.afp,\r\n        fibroscan: values.fibroscan,\r\n        ultrasoundScan: values.ultrasoundScan,\r\n        ascites: values.ascites,\r\n        severityOfAscites: values.severityOfAscites,\r\n        gradeOfEncephalopathy: values.gradeOfEncephalopathy,\r\n        childPughScore: values.childPughScore,\r\n        liverBiopsyStage: values.liverBiopsyStage,\r\n        diagnosis_result: values.diagnosis_result,\r\n      },\r\n    };\r\n    setCookie(\"hepatitis2\", values, 1);\r\n    setCookie(\"heaptitis2PayloadValue\", restructuredDiagnosisPayload, 1);\r\n    postDataWithToken(restructuredDiagnosisPayload, \"hepatitis/diagnosis\");\r\n  };\r\n\r\n  const moveBack = () => {\r\n    window.scrollTo(0, 0);\r\n    setStep(0);\r\n  };\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm2ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis2\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n  }, []);\r\n\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Diagnosis\r\n                </h5>\r\n              </div>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Hepatitis B\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvDnaTestRequested\">\r\n                              Date HBV DNA test requested{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvDnaTestRequested\"\r\n                              id=\"dateHbvDnaTestRequested\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.dateHbvDnaTestRequested\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.dateHbvDnaTestRequested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvDnaTestRequested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvTestRequested\">\r\n                              Date HBV test requested{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvTestRequested\"\r\n                              id=\"dateHbvTestRequested\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.dateHbvTestRequested\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.dateHbvTestRequested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvTestRequested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvSampleRequested\">\r\n                              Date HBV sample Requested{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvSampleRequested\"\r\n                              id=\"dateHbvSampleRequested\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.dateHbvSampleRequested\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.dateHbvSampleRequested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvSampleRequested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"dateHbvDnaResultReported\">\r\n                              Date of HBV DNA result reported{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"dateHbvDnaResultReported\"\r\n                              id=\"dateHbvDnaResultReported\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest\r\n                                  .dateHbvDnaResultReported\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* {errors.dateHbvDnaResultReported !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.dateHbvDnaResultReported}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-2 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              HBV DNA(UI/ml){\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>\r\n                            </Label>\r\n                            <div className=\"radio\">\r\n                              <label>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  value=\"DETECTED\"\r\n                                  name=\"hbvDna\"\r\n                                  checked={\r\n                                    basicInfo.hepatitisBTest.hbvDna ===\r\n                                    \"DETECTED\"\r\n                                  }\r\n                                  // onBlur={formik.handleBlur}\r\n                                  onChange={handleInputChangeBasic}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />{\" \"}\r\n                                Detected\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"radio\">\r\n                              <label>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  value=\"UNDETECTED\"\r\n                                  name=\"hbvDna\"\r\n                                  checked={\r\n                                    basicInfo.hepatitisBTest.hbvDna ===\r\n                                    \"UNDETECTED\"\r\n                                  }\r\n                                  // onBlur={formik.handleBlur}\r\n                                  onChange={handleInputChangeBasic}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />{\" \"}\r\n                                Undetected\r\n                              </label>\r\n                              {/* \r\n                              {errors.stagingDateOfLiverBiopsy !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.stagingDateOfLiverBiopsy}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </div>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {basicInfo.hepatitisBTest.hbvDna === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hvbDnaValue\">\r\n                                Input HBV DNA value{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hvbDnaValue\"\r\n                                id=\"hvbDnaValue\"\r\n                                value={basicInfo.hepatitisBTest.hvbDnaValue}\r\n                                onChange={handleInputChangeBasic}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {errors.hvbDnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.hvbDnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbsAgQuantification\">\r\n                              HBsAG Quantification (IU/ml)\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbsAgQuantification\"\r\n                              id=\"hbsAgQuantification\"\r\n                              value={\r\n                                basicInfo.hepatitisBTest.hbsAgQuantification\r\n                              }\r\n                              onChange={handleInputChangeBasic}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {/* {errors.hbsAgQuantification !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbsAgQuantification}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbeAG\">HbeAG</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbeAG\"\r\n                              id=\"hbeAG\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.hbeAG}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"REACTIVE\"}>Reactive</option>\r\n                              <option value={\"NON_REACTIVE\"}>\r\n                                Non Reactive\r\n                              </option>\r\n                            </select>\r\n                            {/* {formik.errors.hbeAG !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbeAG}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"antiHDV\">Anti-HDV</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"antiHDV\"\r\n                              id=\"antiHDV\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.antiHDV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"REACTIVE\"}>Reactive</option>\r\n                              <option value={\"NON_REACTIVE\"}>\r\n                                Non Reactive\r\n                              </option>\r\n                              <option value={\"NOT_DONE\"}>Not Done</option>\r\n                            </select>\r\n                            {/* {formik.errors.antiHDV !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.antiHDV}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"treatmentEligible\">\r\n                              Treatment Eligible\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"treatmentEligible\"\r\n                              id=\"treatmentEligible\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.treatmentEligible}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {/* {formik.errors.treatmentEligible !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.treatmentEligible}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"pmtctEligible\">PMTCT Eligible</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"pmtctEligible\"\r\n                              id=\"pmtctEligible\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.pmtctEligible}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {/* {formik.errors.pmtctEligible !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.pmtctEligible}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4-12\">\r\n                          <FormGroup>\r\n                            <Label for=\"comment\">Comment</Label>\r\n                            <textarea\r\n                              className=\"form-control\"\r\n                              name=\"comment\"\r\n                              id=\"comment\"\r\n                              onChange={handleInputChangeBasic}\r\n                              value={basicInfo.hepatitisBTest.comment}\r\n                              cols=\"50\"\r\n                              rows=\"30\"\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                                height: \"120px\",\r\n                              }}\r\n                            />\r\n                            {/* {formik.errors.comment !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.comment}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Hepatitis C\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRNA\">HCV RNA (IU/ml)</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRNA\"\r\n                              id=\"hcvRNA\"\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              // onBlur={formik.handleBlur}\r\n                              value={basicInfo.hepatitisCTest.hcvRNA}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>select</option>\r\n                              <option value={\"DETECTED\"}>Detected</option>\r\n                              <option value={\"UNDETECTED\"}>Undetected</option>\r\n                            </select>\r\n                            {/* {formik.errors.hcvRNA !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvRNA}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n                        {basicInfo.hepatitisCTest.hcvRNA === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcRnaValue\">\r\n                                Input HCV RNA Value{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hcRnaValue\"\r\n                                id=\"hcRnaValue\"\r\n                                value={basicInfo.hepatitisCTest.hcRnaValue}\r\n                                onChange={handleInputChangeBasicForHC}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {/* {errors.hcRnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.hcRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hepatitisCoinfection\">\r\n                              Hepatitis Coinfection\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hepatitisCoinfection\"\r\n                              id=\"hepatitisCoinfection\"\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              value={\r\n                                basicInfo.hepatitisCTest.hepatitisCoinfection\r\n                              }\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n                              <option value={\"HBV_HCV\"}>HBV/HCV</option>\r\n                              <option value={\"HCV_HIV\"}>HCV/HIV</option>\r\n                              <option value={\"HBV_HDV\"}>HBV/HDV</option>\r\n                              <option value={\"HBV_HCD_HIV\"}>HBV/HCD/HIV</option>\r\n                            </select>\r\n                            {/* {formik.errors.hepatitisCoinfection !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hepatitisCoinfection}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"commobidities\">\r\n                              Commobidities{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"commobidities\"\r\n                              id=\"commobidities\"\r\n                              value={basicInfo.hepatitisCTest.commobidities}\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.commobidities !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.commobidities}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"multipleInfection\">\r\n                              Specify multiple infection{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"multipleInfection\"\r\n                              id=\"multipleInfection\"\r\n                              value={basicInfo.hepatitisCTest.multipleInfection}\r\n                              onChange={handleInputChangeBasicForHC}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.multipleInfection !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.multipleInfection}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Clinical Parameters\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ast\">AST (IU/ml)</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"ast\"\r\n                        id=\"ast\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.ast}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.ast !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.ast}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"alt\">ALT (IU/ml)</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"alt\"\r\n                        id=\"alt\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.alt}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.alt !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.alt}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"pst\">PST (mm3)</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"pst\"\r\n                        id=\"pst\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.pst}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.pst !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.pst}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  {basicInfo.ast === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"astValue\">\r\n                          Input AST value{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"astValue\"\r\n                          id=\"astValue\"\r\n                          value={basicInfo.clinicalParameters.astValue}\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.astValue !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.astValue}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {basicInfo.alt === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"altValue\">\r\n                          Input ALT value{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"altValue\"\r\n                          id=\"altValue\"\r\n                          value={basicInfo.clinicalParameters.altValue}\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.altValue !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.altValue}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {basicInfo.plt === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pstValue\">\r\n                          Input PST value{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"pstValue\"\r\n                          id=\"pstValue\"\r\n                          value={basicInfo.clinicalParameters.pstValue}\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          // onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {/* {formik.errors.pstValue !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pstValue}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"totalBiliRubin\">\r\n                        Total Bilirubin (μmol/L){\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"totalBiliRubin\"\r\n                        id=\"totalBiliRubin\"\r\n                        value={basicInfo.clinicalParameters.totalBiliRubin}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.totalBiliRubin !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.totalBiliRubin}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"directBiliribin\">\r\n                        Direct Bilirubin (μmol/L)\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"directBiliribin\"\r\n                        id=\"directBiliribin\"\r\n                        value={basicInfo.clinicalParameters.directBiliribin}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.directBiliribin !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.directBiliribin}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"albumin\">Albumin (g/dl)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"albumin\"\r\n                        id=\"albumin\"\r\n                        value={basicInfo.hepatitisBTest.albumin}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.albumin ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.albumin}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"apriScore\">APRI score </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"apriScore\"\r\n                        id=\"apriScore\"\r\n                        value={basicInfo.clinicalParameters.apriScore}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.apriScore !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.apriScore}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"fib4\">FIB-4</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"fib4\"\r\n                        id=\"fib4\"\r\n                        value={basicInfo.clinicalParameters.fib4}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.fib4 !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.fib4}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"prothrombinTimeNR\">\r\n                        Prothrombin time/INR\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"prothrombinTimeNR\"\r\n                        id=\"prothrombinTimeNR\"\r\n                        value={basicInfo.clinicalParameters.prothrombinTimeNR}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.prothrombinTimeNR !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.prothrombinTimeNR}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"urea\"\r\n                        id=\"urea\"\r\n                        value={basicInfo.clinicalParameters.urea}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.urea !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.urea}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"creatinine\"\r\n                        id=\"creatinine\"\r\n                        value={basicInfo.clinicalParameters.creatinine}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.creatinine !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.creatinine}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ultrasoundScan\">\r\n                        Ultrasound scan (μmol/L)\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"ultrasoundScan\"\r\n                        id=\"ultrasoundScan\"\r\n                        value={basicInfo.clinicalParameters.ultrasoundScan}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.ultrasoundScan !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.ultrasoundScan}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"afp\"\r\n                        id=\"afp\"\r\n                        value={basicInfo.clinicalParameters.afp}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.afp !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.afp}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"fibroscan\">Fibroscan (ng/ml)</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"fibroscan\"\r\n                        id=\"fibroscan\"\r\n                        value={basicInfo.clinicalParameters.fibroscan}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.fibroscan !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.fibroscan}\r\n                        </span>\r\n                      ) : null} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ctScan\">CT scan</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"ctScan\"\r\n                        id=\"ctScan\"\r\n                        value={basicInfo.hepatitisBTest.ctScan}\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.ctScan ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.ctScan}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ascites\">Acites</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"ascites\"\r\n                        id=\"ascites\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.ascites}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"YES\"}>Yes</option>\r\n                        <option value={\"NO\"}>No</option>\r\n                      </select>\r\n                      {/* {formik.errors.ascites !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.ascites}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  {basicInfo.clinicalParameters.ascites === \"YES\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"severityOfAscites\">\r\n                          Severity of ascites\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"severityOfAscites\"\r\n                          id=\"severityOfAscites\"\r\n                          onChange={handleInputChangeBasicForClinic}\r\n                          value={basicInfo.clinicalParameters.severityOfAscites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"MILD\"}>Mild</option>\r\n                          <option value={\"MODERATE\"}>Moderate</option>\r\n                          <option value={\"MASSIVE_OR_GROSS\"}>\r\n                            Massive/Gross\r\n                          </option>\r\n                        </select>\r\n                        {/* {formik.errors.severityOfAscites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.severityOfAscites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"ascitesLevel\">Grade of Encephalopathy</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"gradeOfEncephalopathy\"\r\n                        id=\"gradeOfEncephalopathy\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={\r\n                          basicInfo.clinicalParameters.gradeOfEncephalopathy\r\n                        }\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={0}>0</option>\r\n                        <option value={1}>1</option>\r\n                        <option value={2}>2</option>\r\n                        <option value={3}>3</option>\r\n                        <option value={4}>4</option>\r\n                        <option value={5}>5</option>\r\n                      </select>\r\n                      {/* {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.gradeOfEncephalopathy}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"childPughScore\">Child pugh score</Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"childPughScore\"\r\n                        id=\"childPughScore\"\r\n                        value={basicInfo.clinicalParameters.childPughScore}\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {formik.errors.childPughScore !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.childPughScore}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"liverBiopsyStage\"\r\n                        id=\"liverBiopsyStage\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.liverBiopsyStage}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"FIBROSIS\"}> Fibrosis</option>\r\n                        <option value={\"CIRRHOSIS\"}>Cirrhosis</option>\r\n                        <option value={\"NO_FIBROSIS\"}> No Fibrosis</option>\r\n                        {/* <option value={\"CIRRHOSIS\"}>Cirrhosis</option> */}\r\n                        <option value={\"HIGH_CC\"}>High CC </option>\r\n                      </select>\r\n                      {/* {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.liverBiopsyStage}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"stagingDateOfLiverBiopsy\">\r\n                        Staging date of liver biopsy{\" \"}\r\n                      </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        name=\"stagingDateOfLiverBiopsy\"\r\n                        id=\"stagingDateOfLiverBiopsy\"\r\n                        value={\r\n                          basicInfo.hepatitisBTest.stagingDateOfLiverBiopsy\r\n                        }\r\n                        onChange={handleInputChangeBasic}\r\n                        // onBlur={formik.handleBlur}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                      {/* {errors.stagingDateOfLiverBiopsy !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.stagingDateOfLiverBiopsy}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label for=\"diagnosis_result\">Diagnosis</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"diagnosis_result\"\r\n                        id=\"diagnosis_result\"\r\n                        onChange={handleInputChangeBasicForClinic}\r\n                        value={basicInfo.clinicalParameters.diagnosis_result}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>Select</option>\r\n                        <option value={\"NO_FIBROSIS\"}> No Fibrosis</option>\r\n                        <option value={\"FIBROSIS\"}>Fibrosis</option>\r\n                        <option value={\"CIRRHOSIS\"}>Cirrhosis</option>\r\n                        <option value={\"HIGH_CC\"}>HCC</option>\r\n                      </select>\r\n                      {/* {formik.errors.diagnosis_result !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {formik.errors.diagnosis_result}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {false ? <Spinner /> : \"\"}\r\n            <br />\r\n            <div className=\"d-flex justify-content-between\">\r\n              <MatButton\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={moveBack}\r\n                className={classes.button}\r\n                startIcon={<ArrowBackIcon />}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n              </MatButton>\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                endIcon={<ArrowForward />}\r\n                onClick={handleSubmit}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n              </MatButton>\r\n            </div>\r\n            {/* </Form> */}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm2;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm3ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm3 = ({ setStep }) => {\r\n  const [userId, setUserId] = useState(getCookie(\"enrollmentIds\"));\r\n\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    enrollmentUuid: userId?.enrollmentUuid,\r\n    hepatitisBTreatment: {\r\n      dateStarted: \"\",\r\n      dateStopped: \"\",\r\n      hbvPastTreatmentRegimen: \"\",\r\n      hepatitisBRegimenSwitch: {\r\n        adverseEffectReported: \"\",\r\n        dateStarted: \"\",\r\n        dateStopped: \"\",\r\n        newRegime: \"\",\r\n        reasonForSwitch: \"\",\r\n      },\r\n      historyOfAdverseEffect: \"\",\r\n      newRegimen: \"\",\r\n      reasonForHepatitisBTreatment: {\r\n        comment: \"\",\r\n        reasonsForTreatment: \"\",\r\n      },\r\n      treatmentExperience: \"\",\r\n    },\r\n    hepatitisCTreatment: {\r\n      adverseEffectReported: \"\",\r\n      dateCompleted: \"\",\r\n      dateStarted: \"\",\r\n      dateStopped: \"\",\r\n      hbvPastTreatmentRegimen: \"\",\r\n      hcvRetreatment: {\r\n        dateStarted: \"\",\r\n        dateStopped: \"\",\r\n        hbvPastTreatmentRegimen: \"\",\r\n        history_of_AdverseEffect: \"\",\r\n        newRegimen: \"\",\r\n        prescribedDuration: 0,\r\n        retreatmentAdverseEffect: \"\",\r\n      },\r\n      hepatitisSvr12Testing: {\r\n        dateTested: \"\",\r\n        hcvRNA: \"\",\r\n        hcvRNAValue: \"\",\r\n        retreatmentDateTested: \"\",\r\n        retreatmentHcvRNA: \"\",\r\n        retreatmentHcvRNAValue: \"\",\r\n      },\r\n      pastTreatmentExperience: \"\",\r\n      prescribedDuration: \"\",\r\n      treatmentExperience: \"\",\r\n    },\r\n  });\r\n  console.log(basicInfo.hepatitisBTreatment.hbvPastTreatmentRegimen);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  // handle input changes\r\n  const handleInputChangeBasicHB = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisBTreatment: {\r\n        ...basicInfo.hepatitisBTreatment,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleInputChangeBasicHBReason = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hbvReasonForTreatmentEligibility\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          reasonForHepatitisBTreatment: {\r\n            ...basicInfo.hepatitisBTreatment.reasonForHepatitisBTreatment,\r\n            reasonsForTreatment: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hbvReasonsForTreatmentComment\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          reasonForHepatitisBTreatment: {\r\n            ...basicInfo.hepatitisBTreatment.reasonForHepatitisBTreatment,\r\n            comment: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"treatmentExperienceB\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          treatmentExperience: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    // if (e.target.name === \"hbvRegimeSwitchDateStarted\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         dateStarted: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n    // if (e.target.name === \"hbvRegimeSwitchDateStopped\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         dateStopped: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n    // if (e.target.name === \"hbvAdverseEffectReported\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         adverseEffectReported: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n\r\n    // if (e.target.name === \"hbvRegimeSwitchReason\") {\r\n    //   setBasicInfo({\r\n    //     ...basicInfo,\r\n    //     hepatitisBTreatment: {\r\n    //       ...basicInfo.hepatitisBTreatment,\r\n    //       hepatitisBRegimenSwitch: {\r\n    //         ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n    //         reasonForSwitch: e.target.value,\r\n    //       },\r\n    //     },\r\n    //   });\r\n    // }\r\n  };\r\n  const handleInputChangeBasicHBRegSwitch = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hbvRegimeSwitchNewRegimen\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            newRegime: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hbvRegimeSwitchDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            dateStarted: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hbvRegimeSwitchDateStopped\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            dateStopped: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hbvAdverseEffectReported\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            adverseEffectReported: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hbvRegimeSwitchReason\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisBTreatment: {\r\n          ...basicInfo.hepatitisBTreatment,\r\n          hepatitisBRegimenSwitch: {\r\n            ...basicInfo.hepatitisBTreatment.hepatitisBRegimenSwitch,\r\n            reasonForSwitch: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeBasicHCGen = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    setBasicInfo({\r\n      ...basicInfo,\r\n      hepatitisCTreatment: {\r\n        ...basicInfo.hepatitisCTreatment,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n  const handleInputChangeBasicHC = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n\r\n    if (e.target.name === \"hcvAdverseEventReported\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          adverseEffectReported: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvTreatmentExperience\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          treatmentExperience: e.target.value,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          dateStarted: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvDateCompleted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          dateCompleted: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvDateStopped\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          dateStopped: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvPrescribedDuration\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          prescribedDuration: e.target.value,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hbvPastTreatmentRegimenForHcv\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hbvPastTreatmentRegimen: e.target.value,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeBasicHCSVR = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"svr12TestingDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            dateTested: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12TestingHcvRna\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            hcvRNA: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12TestingHcvRnaValue\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            hcvRNAValue: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12RetreatmentDateTested\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            retreatmentDateTested: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"svr12RetreatmentHcvRna\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            retreatmentHcvRNA: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"svr12RetreatmentHcvRnaValue\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hepatitisSvr12Testing: {\r\n            ...basicInfo.hepatitisCTreatment.hepatitisSvr12Testing,\r\n            retreatmentHcvRNAValue: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeBasicHHCV = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hcvRetreatmentNewRegimen\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            newRegimen: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvRetreatmentPrescribedDuration\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            prescribedDuration: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvRetreatmentDateStarted\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            dateStarted: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"hcvRetreatmentDateStopped\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            dateStopped: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvRetreatmentAdverseEffect\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            retreatmentAdverseEffect: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"hcvRetreatmentHistoryOfAdverseEffect\") {\r\n      setBasicInfo({\r\n        ...basicInfo,\r\n        hepatitisCTreatment: {\r\n          ...basicInfo.hepatitisCTreatment,\r\n          hcvRetreatment: {\r\n            ...basicInfo.hepatitisCTreatment.hcvRetreatment,\r\n            history_of_AdverseEffect: e.target.value,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // to capture the error\r\n  let temp = { ...errors };\r\n  const validate = () => {\r\n    temp.treatmentExperienceB = basicInfo.hepatitisBTreatment\r\n      .treatmentExperience\r\n      ? \"\"\r\n      : \"Treatment experience is required\";\r\n\r\n    temp.hbvRegimeSwitchNewRegimen = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.newRegime\r\n      ? \"\"\r\n      : \"New Regime is required\";\r\n\r\n    temp.hbvRegimeSwitchDateStarted = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.dateStarted\r\n      ? \"\"\r\n      : \"Date Started is required\";\r\n\r\n    temp.hbvRegimeSwitchDateStopped = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.dateStopped\r\n      ? \"\"\r\n      : \"Date Stopped is required\";\r\n\r\n    temp.hbvRegimeSwitchReason = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.reasonForSwitch\r\n      ? \"\"\r\n      : \"Reason for switch is required\";\r\n\r\n    temp.hcvTreatmentExperience = basicInfo.hepatitisCTreatment\r\n      .treatmentExperience\r\n      ? \"\"\r\n      : \" Treatment experience is required\";\r\n\r\n    temp.pastTreatmentExperience = basicInfo.hepatitisCTreatment\r\n      .pastTreatmentExperience\r\n      ? \"\"\r\n      : \"Past Treatment experience is required\";\r\n\r\n    temp.hbvAdverseEffectReported = basicInfo.hepatitisBTreatment\r\n      .hepatitisBRegimenSwitch.adverseEffectReported\r\n      ? \"\"\r\n      : \"Adverse effect is required\";\r\n\r\n    temp.historyOfAdverseEffect = basicInfo.hepatitisBTreatment\r\n      .historyOfAdverseEffect\r\n      ? \"\"\r\n      : \"History ofAdverse effect is required\";\r\n\r\n    temp.newRegimen = basicInfo.hepatitisBTreatment.newRegimen\r\n      ? \"\"\r\n      : \"New Regime is required\";\r\n\r\n    temp.hbvPastTreatmentRegimen = basicInfo.hepatitisBTreatment\r\n      .hbvPastTreatmentRegimen\r\n      ? \"\"\r\n      : \"Hbv Past treatment regimen is required\";\r\n\r\n    // temp.newRegimenB = basicInfo.hepatitisBTreatment.newRegimen\r\n    //   ? \"\"\r\n    //   : \"New Regime is required\";\r\n\r\n    temp.dateStarted = basicInfo.hepatitisBTreatment.dateStarted\r\n      ? \"\"\r\n      : \"Date started is required\";\r\n\r\n    temp.dateStopped = basicInfo.hepatitisBTreatment.dateStopped\r\n      ? \"\"\r\n      : \"Date Stopped is required\";\r\n\r\n    temp.hbvReasonForTreatmentEligibility = basicInfo.hepatitisBTreatment\r\n      .reasonForHepatitisBTreatment.reasonsForTreatment\r\n      ? \"\"\r\n      : \"Reason for Treatment is required\";\r\n\r\n    temp.hbvReasonsForTreatmentComment = basicInfo.hepatitisBTreatment\r\n      .reasonForHepatitisBTreatment.comment\r\n      ? \"\"\r\n      : \"Comment is required\";\r\n\r\n    temp.hcvAdverseEventReported = basicInfo.hepatitisCTreatment\r\n      .adverseEffectReported\r\n      ? \"\"\r\n      : \"Adverse Effect Reported is required\";\r\n\r\n    temp.hcvDateStarted = basicInfo.hepatitisCTreatment.dateStarted\r\n      ? \"\"\r\n      : \"Date started is required\";\r\n\r\n    temp.hcvDateCompleted = basicInfo.hepatitisCTreatment.dateCompleted\r\n      ? \"\"\r\n      : \"Date completed is required\";\r\n\r\n    temp.hcvDateStopped = basicInfo.hepatitisCTreatment.dateStopped\r\n      ? \"\"\r\n      : \"Date stopped is required\";\r\n\r\n    temp.hcvPrescribedDuration = basicInfo.hepatitisCTreatment\r\n      .prescribedDuration\r\n      ? \"\"\r\n      : \"Prescribed duration is required\";\r\n\r\n    temp.svr12TestingDateStarted = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.dateTested\r\n      ? \"\"\r\n      : \"Date tested is required\";\r\n\r\n    temp.svr12TestingHcvRna = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.hcvRNA\r\n      ? \"\"\r\n      : \"HCV RNA is required\";\r\n\r\n    temp.svr12RetreatmentDateTested = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.retreatmentDateTested\r\n      ? \"\"\r\n      : \"Retreatment date tested is required\";\r\n\r\n    temp.svr12RetreatmentHcvRna = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.retreatmentDateTested\r\n      ? \"\"\r\n      : \" Retreatment HCV RNA is required\";\r\n\r\n    temp.svr12RetreatmentHcvRna = basicInfo.hepatitisCTreatment\r\n      .hepatitisSvr12Testing.retreatmentHcvRNA\r\n      ? \"\"\r\n      : \" Retreatment HCV RNA  is required\";\r\n\r\n    temp.hcvRetreatmentNewRegimen = basicInfo.hepatitisCTreatment.hcvRetreatment\r\n      .newRegimen\r\n      ? \"\"\r\n      : \" New regimen  is required\";\r\n\r\n    temp.hcvRetreatmentPrescribedDuration = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.prescribedDuration\r\n      ? \"\"\r\n      : \"Prescribed Duration is required\";\r\n\r\n    temp.hcvRetreatmentDateStarted = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.dateStarted\r\n      ? \"\"\r\n      : \"Date started is required\";\r\n\r\n    temp.hcvRetreatmentDateStopped = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.dateStarted\r\n      ? \"\"\r\n      : \"Date stopped is required\";\r\n\r\n    temp.hcvRetreatmentAdverseEffect = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.retreatmentAdverseEffect\r\n      ? \"\"\r\n      : \" Retreatment Adverse effect is required\";\r\n\r\n    temp.hcvRetreatmentHistoryOfAdverseEffect = basicInfo.hepatitisCTreatment\r\n      .hcvRetreatment.history_of_AdverseEffect\r\n      ? \"\"\r\n      : \" History of adverse effect is required\";\r\n\r\n    // console.log(temp);\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  // submit form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validating the input\r\n    window.scrollTo(0, 0);\r\n\r\n    console.log(basicInfo);\r\n    // console.log(errors);\r\n\r\n    if (validate()) {\r\n      console.log(\"good to go\", basicInfo);\r\n      postDataWithToken(basicInfo, \"hepatitis/treatment\");\r\n    }\r\n  };\r\n  const onSubmitHandler = (values) => {\r\n    console.log(values.hbvDateStarted);\r\n    setCookie(\"hepatitis3\", values, 1);\r\n    const enrollmentIds = getCookie(\"enrollmentIds\");\r\n    const restructuredTreatmentPayload = {\r\n      enrollmentUuid: enrollmentIds?.enrollmentUuid,\r\n      hepatitisBTreatment: {\r\n        dateStarted: formatDate(values.hbvDateStarted),\r\n        dateStopped: formatDate(values.hbvDateStopped),\r\n        hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimen,\r\n        hepatitisBRegimenSwitch: {\r\n          adverseEffectReported: values.hbvAdverseEffectReported,\r\n          dateStarted: formatDate(values.hbvRegimeSwitchDateStarted),\r\n          dateStopped: formatDate(values.hbvRegimeSwitchDateStopped),\r\n          newRegime: values.hbvRegimeSwitchNewRegimen,\r\n          reasonForSwitch: values.hbvRegimeSwitchReason,\r\n        },\r\n        historyOfAdverseEffect: values.hbvHistoryOfAdverseEffect,\r\n        newRegimen: values.hbvNewRegimen,\r\n        reasonForHepatitisBTreatment: {\r\n          comment: values.hbvReasonsForTreatmentComment,\r\n          reasonsForTreatment: values.hbvReasonForTreatmentEligibility,\r\n        },\r\n        treatmentExperience: values.hbvTreatmentExperience,\r\n      },\r\n      hepatitisCTreatment: {\r\n        adverseEffectReported: values.hcvAdverseEventReported,\r\n        dateCompleted: formatDate(values.hcvDateCompleted),\r\n        dateStarted: formatDate(values.hcvDateStarted),\r\n        dateStopped: formatDate(values.hcvDateStopped),\r\n        hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimenForHcv,\r\n        hcvRetreatment: {\r\n          dateStarted: formatDate(values.hcvRetreatmentDateStarted),\r\n          dateStopped: formatDate(values.hcvRetreatmentDateStopped),\r\n          hbvPastTreatmentRegimen: values.hbvPastTreatmentRegimenForHcv,\r\n          history_of_AdverseEffect: values.hcvRetreatmentHistoryOfAdverseEffect,\r\n          newRegimen: values.hcvRetreatmentNewRegimen,\r\n          prescribedDuration: values.hcvRetreatmentPrescribedDuration,\r\n          retreatmentAdverseEffect: values.hcvRetreatmentAdverseEffect,\r\n        },\r\n        hepatitisSvr12Testing: {\r\n          dateTested: formatDate(values.svr12TestingDateStarted),\r\n          hcvRNA: values.svr12TestingHcvRna,\r\n          hcvRNAValue: values.svr12TestingHcvRnaValue,\r\n          retreatmentDateTested: formatDate(values.svr12RetreatmentDateTested),\r\n          // retreatmentHcvRNA: \"string\",\r\n          // retreatmentHcvRNAValue: \"string\",\r\n        },\r\n        // pastTreatmentExperience: \"string\",\r\n        prescribedDuration: values.hcvRetreatmentPrescribedDuration,\r\n        treatmentExperience: values.hcvTreatmentExperience,\r\n      },\r\n    };\r\n\r\n    setCookie(\"heaptitis3PayloadValue\", restructuredTreatmentPayload, 1);\r\n    postDataWithToken(restructuredTreatmentPayload, \"hepatitis/treatment\");\r\n  };\r\n\r\n  const moveBack = () => {\r\n    window.scrollTo(0, 0);\r\n    setStep(1);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm3ValuesHook(onSubmitHandler);\r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis3\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n  const postDataWithToken = async (data, key) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}${key}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      // Handle the response if needed\r\n      toast.success(\"Treatment submitted successfully\");\r\n      deleteCookie(\"heaptitis3PayloadValue\");\r\n      deleteCookie(\"hepatitis3\");\r\n      deleteCookie(\"enrollmentIds\");\r\n      deleteCookie(\"hepatitis2\");\r\n      deleteCookie(\"heaptitis2PayloadValue\");\r\n      deleteCookie(\"hepatitis1\");\r\n      deleteCookie(\"heaptitis1PayloadValue\");\r\n      setStep(0);\r\n      return response.data;\r\n    } catch (error) {\r\n      // Handle any errors that occurred during the request\r\n      toast.error(\"Treatment failed\");\r\n      console.error(\"Error posting data:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  function deleteCookie(name) {\r\n    document.cookie =\r\n      name + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n  }\r\n\r\n  function convertStringBooleanValues(originalObj) {\r\n    const newObj = {};\r\n\r\n    for (const key in originalObj) {\r\n      if (originalObj.hasOwnProperty(key)) {\r\n        const value = originalObj[key];\r\n        if (typeof value === \"string\") {\r\n          newObj[key] =\r\n            value.toLowerCase() === \"yes\"\r\n              ? \"YES\"\r\n              : value.toLowerCase() === \"no\"\r\n              ? \"NO\"\r\n              : value;\r\n        } else {\r\n          newObj[key] = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    return newObj;\r\n  }\r\n\r\n  function formatDate(inputDate) {\r\n    // Split the input date string into an array\r\n    var dateArray = inputDate.split(\"-\");\r\n\r\n    // Check if the input date is in the correct format (yyyy-mm-dd)\r\n    if (dateArray.length !== 3) {\r\n      return \"Invalid date format\";\r\n    }\r\n\r\n    // Extract the year, month, and day from the array\r\n    var year = dateArray[0];\r\n    var month = dateArray[1];\r\n    var day = dateArray[2];\r\n\r\n    // Create a new date string in the \"dd-mm-yyyy\" format\r\n    var newDateFormat = day + \"-\" + month + \"-\" + year;\r\n\r\n    return newDateFormat;\r\n  }\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n  }, []);\r\n\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hbvTreatmentRegimenSwitch: true,\r\n    hbvTreatmentReasonforTreatment: true,\r\n    hcvTreatmentRegimenSwitch: true,\r\n    hcvTreatmentRegimenHcvRetreatment: true,\r\n    hcvTreatmentSvr12Testing: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Hepatitis B Treatment\r\n                </h5>\r\n              </div>\r\n              <div>\r\n                <div className=\"card-body\">\r\n                  <div\r\n                    className=\"basic-form\"\r\n                    style={{ padding: \"0 50px 0 50px\" }}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvTreatmentExperience\">\r\n                            Treatment experience\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"treatmentExperienceB\"\r\n                            id=\"treatmentExperience\"\r\n                            value={\r\n                              basicInfo.hepatitisBTreatment.treatmentExperience\r\n                            }\r\n                            onChange={handleInputChangeBasicHBReason}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.treatmentExperienceB !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.treatmentExperienceB}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      {/* {basicInfo.hbvTreatmentExperience && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvPastTreatmentRegimen\">\r\n                                Past treatment regime\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvPastTreatmentRegimen\"\r\n                                id=\"hbvPastTreatmentRegimen\"\r\n                                value={basicInfo.hbvPastTreatmentRegimen}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvPastTreatmentRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )} */}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvNewRegimen\">New regime</Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"newRegimen\"\r\n                            id=\"newRegimen\"\r\n                            value={basicInfo.hepatitisBTreatment.newRegimen}\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.newRegimen !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.newRegimen}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvPastTreatmentRegimen\">\r\n                            Hbv Past treatment regimen\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hbvPastTreatmentRegimen\"\r\n                            id=\"hbvPastTreatmentRegimen\"\r\n                            value={\r\n                              basicInfo.hepatitisBTreatment\r\n                                .hbvPastTreatmentRegimen\r\n                            }\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hbvPastTreatmentRegimen}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      {basicInfo.hbvPastTreatmentRegimen !== \"\" && (\r\n                        <>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvDateStarted\">Date started</Label>\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateStarted\"\r\n                                id=\"dateStarted\"\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                value={\r\n                                  basicInfo.hepatitisBTreatment.dateStarted\r\n                                }\r\n                                onChange={handleInputChangeBasicHB}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {errors.dateStarted !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.dateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvDateStopped\">Date stopped</Label>\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateStopped\"\r\n                                id=\"dateStopped\"\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                value={\r\n                                  basicInfo.hepatitisBTreatment.dateStopped\r\n                                }\r\n                                onChange={handleInputChangeBasicHB}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {errors.dateStopped !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.dateStopped}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvHistoryOfAdverseEffect\">\r\n                            History of adverse effect\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"historyOfAdverseEffect\"\r\n                            id=\"historyOfAdverseEffect\"\r\n                            value={\r\n                              basicInfo.hepatitisBTreatment\r\n                                .historyOfAdverseEffect\r\n                            }\r\n                            onChange={handleInputChangeBasicHB}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.historyOfAdverseEffect !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.historyOfAdverseEffect}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Regimen Switch\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hbvTreatmentRegimenSwitch:\r\n                            !prevState.hbvTreatmentRegimenSwitch,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hbvTreatmentRegimenSwitch}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchNewRegimen\">\r\n                              New Regimen\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbvRegimeSwitchNewRegimen\"\r\n                              id=\"hbvRegimeSwitchNewRegimen\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.newRegime\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchNewRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchNewRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchDateStarted\">\r\n                              Date Started{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hbvRegimeSwitchDateStarted\"\r\n                              id=\"hbvRegimeSwitchDateStarted\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.dateStarted\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchDateStopped\">\r\n                              Date Stopped{\" \"}\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hbvRegimeSwitchDateStopped\"\r\n                              id=\"hbvRegimeSwitchDateStopped\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.dateStopped\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchDateStopped !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchDateStopped}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvAdverseEffectReported\">\r\n                              Adverse effect reported{\" \"}\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvAdverseEffectReported\"\r\n                              id=\"hbvAdverseEffectReported\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.adverseEffectReported\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {errors.hbvAdverseEffectReported !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvAdverseEffectReported}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvRegimeSwitchReason\">\r\n                              Reason for switch\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbvRegimeSwitchReason\"\r\n                              id=\"hbvRegimeSwitchReason\"\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .hepatitisBRegimenSwitch.reasonForSwitch\r\n                              }\r\n                              onChange={handleInputChangeBasicHBRegSwitch}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvRegimeSwitchReason !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvRegimeSwitchReason}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    Reason for treatment\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hbvTreatmentReasonforTreatment:\r\n                            !prevState.hbvTreatmentReasonforTreatment,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hbvTreatmentReasonforTreatment}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvReasonForTreatmentEligibility\">\r\n                              Reasons for treatment\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvReasonForTreatmentEligibility\"\r\n                              id=\"hbvReasonForTreatmentEligibility\"\r\n                              onChange={handleInputChangeBasicHBReason}\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .reasonForHepatitisBTreatment\r\n                                  .reasonsForTreatment\r\n                              }\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={\"\"}>Select</option>\r\n\r\n                              <option value={\"treatment eligible\"}>\r\n                                Treatment Eligible\r\n                              </option>\r\n                              <option value={\"hbv pmtct\"}>HBV PMTCT</option>\r\n                            </select>\r\n                            {errors.hbvReasonForTreatmentEligibility !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvReasonForTreatmentEligibility}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvReasonsForTreatmentComment\">\r\n                              Comment\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            <textarea\r\n                              className=\"form-control\"\r\n                              name=\"hbvReasonsForTreatmentComment\"\r\n                              id=\"hbvReasonsForTreatmentComment\"\r\n                              onChange={handleInputChangeBasicHBReason}\r\n                              value={\r\n                                basicInfo.hepatitisBTreatment\r\n                                  .reasonForHepatitisBTreatment.comment\r\n                              }\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                                height: \"80px\",\r\n                              }}\r\n                            />\r\n                            {errors.hbvReasonsForTreatmentComment !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hbvReasonsForTreatmentComment}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Hepatitis C Treatment\r\n                </h5>\r\n              </div>\r\n\r\n              <div>\r\n                <div className=\"card-body\">\r\n                  <div\r\n                    className=\"basic-form\"\r\n                    style={{ padding: \"0 50px 0 50px\" }}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvAdverseEventReported\">\r\n                            Adverse Effect reported\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hcvAdverseEventReported\"\r\n                            id=\"hcvAdverseEventReported\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment\r\n                                .adverseEffectReported\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"YES\">Yes</option>\r\n                            <option value=\"NO\">No</option>\r\n                          </select>\r\n                          {errors.hcvAdverseEventReported !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvAdverseEventReported}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvTreatmentExperience\">\r\n                            Treatment experience\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvTreatmentExperience\"\r\n                            id=\"hcvTreatmentExperience\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment.treatmentExperience\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.hcvTreatmentExperience !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvTreatmentExperience}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvPastTreatmentRegimen\">\r\n                            HBV Past treatment regimen\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pastTreatmentExperience\"\r\n                            id=\"pastTreatmentExperience\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment\r\n                                .pastTreatmentExperience\r\n                            }\r\n                            onChange={handleInputChangeBasicHCGen}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.pastTreatmentExperience !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.pastTreatmentExperience}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvDateStarted\">Date started</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvDateStarted\"\r\n                            id=\"hcvDateStarted\"\r\n                            value={basicInfo.hepatitisCTreatment.dateStarted}\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hcvDateStarted !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvDateStarted}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvDateCompleted\">Date completed</Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvDateCompleted\"\r\n                            id=\"hcvDateCompleted\"\r\n                            value={basicInfo.hepatitisCTreatment.dateCompleted}\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hcvDateCompleted !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvDateCompleted}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvDateStopped\">Date stopped</Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"hcvDateStopped\"\r\n                            id=\"hcvDateStopped\"\r\n                            value={basicInfo.hepatitisCTreatment.dateStopped}\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hcvDateStopped !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvDateStopped}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hcvPrescribedDuration\">\r\n                            Prescribed duration\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hcvPrescribedDuration\"\r\n                            id=\"hcvPrescribedDuration\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment.prescribedDuration\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={0}>Select</option>\r\n                            <option value={8}>8 weeks</option>\r\n                            <option value={12}>12 weeks</option>\r\n                            <option value={24}>24 weeks</option>\r\n                          </select>\r\n                          {errors.hcvPrescribedDuration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hcvPrescribedDuration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvPastTreatmentRegimenForHcv\">\r\n                            HBV past treatment regimen\r\n                          </Label>\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          <select\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"hbvPastTreatmentRegimenForHcv\"\r\n                            id=\"hbvPastTreatmentRegimenForHcv\"\r\n                            value={\r\n                              basicInfo.hepatitisCTreatment\r\n                                .hbvPastTreatmentRegimen\r\n                            }\r\n                            onChange={handleInputChangeBasicHC}\r\n                            // onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"YES\"}>Yes</option>\r\n                            <option value={\"NO\"}>No</option>\r\n                          </select>\r\n                          {errors.treatmentExperienceB !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.treatmentExperienceB}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    SVR 12 Testing\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hcvTreatmentSvr12Testing:\r\n                            !prevState.hcvTreatmentSvr12Testing,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={isDropdownsOpen.hcvTreatmentSvr12Testing}\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse in={isDropdownsOpen.hcvTreatmentSvr12Testing}>\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12TestingDateStarted\">\r\n                              Date tested\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"svr12TestingDateStarted\"\r\n                              id=\"svr12TestingDateStarted\"\r\n                              type=\"date\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.dateTested\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.svr12TestingDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.svr12TestingDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12TestingHcvRna\">\r\n                              HCV RNA <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"svr12TestingHcvRna\"\r\n                              id=\"svr12TestingHcvRna\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.hcvRNA\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"DETECTED\">Detected</option>\r\n                              <option value=\"UNDETECTED\">Undetected</option>\r\n                            </select>\r\n                            {errors.svr12TestingHcvRna !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.svr12TestingHcvRna}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {basicInfo.hepatitisCTreatment.hepatitisSvr12Testing\r\n                          .hcvRNA === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRnaValue\">\r\n                                Input HCV RNA value\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRnaValue\"\r\n                                id=\"svr12TestingHcvRnaValue\"\r\n                                type=\"text\"\r\n                                value={\r\n                                  basicInfo.hepatitisCTreatment\r\n                                    .hepatitisSvr12Testing.hcvRNAValue\r\n                                }\r\n                                onChange={handleInputChangeBasicHCSVR}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        {/* <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRnaValue\">\r\n                                Input HCV RNA value\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRnaValue\"\r\n                                id=\"svr12TestingHcvRnaValue\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={basicInfo.svr12TestingHcvRnaValue}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.svr12TestingHcvRnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingHcvRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div> */}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12RetreatmentDateTested\">\r\n                              Retreatment date tested\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"svr12RetreatmentDateTested\"\r\n                              id=\"svr12RetreatmentDateTested\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.retreatmentDateTested\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                              type=\"date\"\r\n                            />\r\n\r\n                            {errors.svr12RetreatmentDateTested !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.svr12RetreatmentDateTested}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"svr12RetreatmentHcvRna\">\r\n                              Retreatment HCV RNA(IU/ml)\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"svr12RetreatmentHcvRna\"\r\n                              id=\"svr12RetreatmentHcvRna\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment\r\n                                  .hepatitisSvr12Testing.retreatmentHcvRNA\r\n                              }\r\n                              onChange={handleInputChangeBasicHCSVR}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"DETECTED\">Detected</option>\r\n                              <option value=\"UNDETECTED\">Undetected</option>\r\n                            </select>\r\n\r\n                            {errors.svr12RetreatmentHcvRna !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.svr12RetreatmentHcvRna}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {basicInfo.hepatitisCTreatment.hepatitisSvr12Testing\r\n                          .retreatmentHcvRNA === \"DETECTED\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12RetreatmentHcvRnaValue\">\r\n                                Input Retreatment HCV RNA value(IU/ml)\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"svr12RetreatmentHcvRnaValue\"\r\n                                id=\"svr12RetreatmentHcvRnaValue\"\r\n                                value={\r\n                                  basicInfo.hepatitisCTreatment\r\n                                    .hepatitisSvr12Testing\r\n                                    .retreatmentHcvRNAValue\r\n                                }\r\n                                onChange={handleInputChangeBasicHCSVR}\r\n                                // onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {/* {errors.svr12TestingHcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.svr12TestingHcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )} */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#d8f6ff\",\r\n                    width: \"95%\",\r\n                    margin: \"auto\",\r\n                    marginTop: \"5rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      color: \"black\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"600\",\r\n                      marginLeft: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  >\r\n                    HCV Retreatment\r\n                  </p>\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      setIsDropdownsOpen((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          hcvTreatmentRegimenHcvRetreatment:\r\n                            !prevState.hcvTreatmentRegimenHcvRetreatment,\r\n                        };\r\n                      })\r\n                    }\r\n                    aria-expanded={\r\n                      isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment\r\n                    }\r\n                    aria-label=\"Expand\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <Collapse\r\n                    in={isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment}\r\n                  >\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentNewRegimen\">\r\n                              New regimen\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentNewRegimen\"\r\n                              id=\"hcvRetreatmentNewRegimen\"\r\n                              type=\"text\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .newRegimen\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hcvRetreatmentNewRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentNewRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentPrescribedDuration\">\r\n                              Prescribed Duration\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentPrescribedDuration\"\r\n                              id=\"hcvRetreatmentPrescribedDuration\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .prescribedDuration\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              // onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value={0}>Select</option>\r\n                              <option value={8}>8 weeks</option>\r\n                              <option value={12}>12 weeks</option>\r\n                              <option value={24}>24 weeks</option>\r\n                            </select>\r\n                            {errors.hcvRetreatmentPrescribedDuration !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentPrescribedDuration}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentDateStarted\">\r\n                              Date started\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentDateStarted\"\r\n                              id=\"hcvRetreatmentDateStarted\"\r\n                              type=\"date\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .dateStarted\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n\r\n                            {errors.hcvRetreatmentDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentDateStopped\">\r\n                              Date stopped\r\n                            </Label>\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentDateStopped\"\r\n                              id=\"hcvRetreatmentDateStopped\"\r\n                              type=\"date\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .dateStopped\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {errors.hcvRetreatmentDateStopped !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentDateStopped}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentAdverseEffect\">\r\n                              Retreatment Adverse effect\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentAdverseEffect\"\r\n                              id=\"hcvRetreatmentAdverseEffect\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .retreatmentAdverseEffect\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {errors.hcvRetreatmentAdverseEffect !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentAdverseEffect}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvRetreatmentHistoryOfAdverseEffect\">\r\n                              History of adverse effect\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvRetreatmentHistoryOfAdverseEffect\"\r\n                              id=\"hcvRetreatmentHistoryOfAdverseEffect\"\r\n                              value={\r\n                                basicInfo.hepatitisCTreatment.hcvRetreatment\r\n                                  .history_of_AdverseEffect\r\n                              }\r\n                              onChange={handleInputChangeBasicHHCV}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value={\"YES\"}>Yes</option>\r\n                              <option value={\"NO\"}>No</option>\r\n                            </select>\r\n                            {errors.hcvRetreatmentHistoryOfAdverseEffect !==\r\n                            \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {errors.hcvRetreatmentHistoryOfAdverseEffect}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {false ? <Spinner /> : \"\"}\r\n            <br />\r\n            <div className=\"d-flex justify-content-between\">\r\n              <MatButton\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<ArrowBackIcon />}\r\n                onClick={moveBack}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n              </MatButton>\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={handleSubmit}\r\n                // endIcon={<ArrowForward />}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n              </MatButton>\r\n            </div>\r\n            {/* </Form> */}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm3;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm2ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm4 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm2ValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: false,\r\n    hepatitisCDropdown: false,\r\n    coInfectionDropdown: false,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Diagnosis\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis B\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvTestRequested\">\r\n                                Date HBV test requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvTestRequested\"\r\n                                id=\"dateHbvTestRequested\"\r\n                                value={formik.values.dateHbvTestRequested}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvTestRequested !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvTestRequested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvSampleCollected\">\r\n                                Date HBV sample Requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvSampleCollected\"\r\n                                id=\"dateHbvSampleCollected\"\r\n                                value={formik.values.dateHbvSampleCollected}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvSampleCollected !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvSampleCollected}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvDnaResultReported\">\r\n                                Date of HBV DNA result reported{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvDnaResultReported\"\r\n                                id=\"dateHbvDnaResultReported\"\r\n                                value={formik.values.dateHbvDnaResultReported}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvDnaResultReported !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvDnaResultReported}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-2 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                HBV DNA(UI/ml){\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"detected\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Detected\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"undetected\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Undetected\r\n                                </label>\r\n\r\n                                {formik.errors.hbvDna !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDna}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </div>\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hbvDna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hbvDnaValue\">\r\n                                  Input HBV DNA value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hbvDnaValue\"\r\n                                  id=\"hbvDnaValue\"\r\n                                  value={formik.values.hbvDnaValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.hbvDnaValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"landmark\">HBsAG Quantification</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbsAgQuantification\"\r\n                                id=\"hbsAgQuantification\"\r\n                                value={formik.values.hbsAgQuantification}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbsAgQuantification ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbsAgQuantification}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbeAg\">HbeAG</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbeAg\"\r\n                                id=\"hbeAg\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hbeAg}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hbeAg !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbeAg}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"antiHdv\">Anti-HDV</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"antiHdv\"\r\n                                id=\"antiHdv\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.antiHdv}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                                <option value={\"not done\"}>Not Done</option>\r\n                              </select>\r\n                              {formik.errors.antiHdv !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.antiHdv}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"treatmentEligible\">\r\n                                Treatment Eligible\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"treatmentEligible\"\r\n                                id=\"treatmentEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.treatmentEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"yes\"}>Yes</option>\r\n                                <option value={\"no\"}>No</option>\r\n                              </select>\r\n                              {formik.errors.treatmentEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.treatmentEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"pmtctEligible\">PMTCT Eligible</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"pmtctEligible\"\r\n                                id=\"pmtctEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pmtctEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.pmtctEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.pmtctEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4-12\">\r\n                            <FormGroup>\r\n                              <Label for=\"comment\">Comment</Label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                name=\"comment\"\r\n                                id=\"comment\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.comment}\r\n                                cols=\"50\"\r\n                                rows=\"30\"\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                  height: \"120px\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.comment !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.comment}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis C\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRna\">HCV RNA (IU/ml)</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRna\"\r\n                                id=\"hcvRna\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRna}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"detected\"}>Detected</option>\r\n                                <option value={\"undetected\"}>Undetected</option>\r\n                              </select>\r\n                              {formik.errors.hcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hcvRna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hcvValue\">\r\n                                  Input HCV RNA Value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hcvValue\"\r\n                                  id=\"hcvValue\"\r\n                                  value={formik.values.hcvValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n                                {formik.errors.hcvValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hcvValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hepatitisCoInfection\">\r\n                                Hepatitis Coinfection\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hepatitisCoInfection\"\r\n                                id=\"hepatitisCoInfection\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hepatitisCoInfection}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                multiple\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"hbv/hcv\"}>HBV/HCV</option>\r\n                                <option value={\"hcv/hiv\"}>HCV/HIV</option>\r\n                                <option value={\"hbv/hdv\"}>HBV/HDV</option>\r\n                                <option value={\"hbv/hcd/hiv\"}>\r\n                                  HBV/HCD/HIV\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hepatitisCoInfection !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hepatitisCoInfection}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"commobidities\">\r\n                                Commobidities{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"commobidities\"\r\n                                id=\"commobidities\"\r\n                                value={formik.values.commobidities}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.commobidities !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.commobidities}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pst\">PST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"pst\"\r\n                          id=\"pst\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.pst}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.pst !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pst}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.pst === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pstValue\">\r\n                            Input PST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pstValue\"\r\n                            id=\"pstValue\"\r\n                            value={formik.values.pstValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pstValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pstValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBilirubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBilirubin\"\r\n                          id=\"totalBilirubin\"\r\n                          value={formik.values.totalBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBilirubin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBilirubin\"\r\n                          id=\"directBilirubin\"\r\n                          value={formik.values.directBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTime\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTime\"\r\n                          id=\"prothrombinTime\"\r\n                          value={formik.values.prothrombinTime}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTime !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTime}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">\r\n                          Ultrasound scan (μmol/L)\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"acites\">Acites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acites\"\r\n                          id=\"acites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.acites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.acites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.acites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik.values.ascites === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"severityOfAscites\">\r\n                            Severity of ascites\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"severityOfAscites\"\r\n                            id=\"severityOfAscites\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.severityOfAscites}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"mild\"}>Mild</option>\r\n                            <option value={\"moderate\"}>Moderate</option>\r\n                            <option value={\"massive/gross\"}>\r\n                              Massive/Gross\r\n                            </option>\r\n                          </select>\r\n                          {formik.errors.severityOfAscites !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.severityOfAscites}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"F-0\"}> No Fibrosis</option>\r\n                          <option value={\"F-1\"}>Mild Fibrosis</option>\r\n                          <option value={\"F-2\"}>Moderate Fibrosis</option>\r\n                          <option value={\"F-3\"}> Severe Fibrosis</option>\r\n                          <option value={\"F-4\"}>Cirrhosis</option>\r\n                          <option value={\"not done\"}>Not done</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis\"\r\n                          id=\"diagnosis\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"no fibrosis\"}> No Fibrosis</option>\r\n                          <option value={\"fibrosis\"}>Fibrosis</option>\r\n                          <option value={\"cirrhosis\"}>Cirrhosis</option>\r\n                          <option value={\"hcc\"}>HCC</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.diagnosis !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-between\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<ArrowBackIcon />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n                </MatButton>\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm4;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n// import classNames from 'classnames';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\n// import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\n// import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from \"@material-ui/core/Divider\";\r\n// import { Button } from 'semantic-ui-react';\r\n// import {Label,} from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n// import axios from \"axios\";\r\n// import { url as baseUrl, token } from \"./../../../api\";\r\n// import Typography from '@material-ui/core/Typography';\r\n// import CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCardFollowup(props) {\r\n  const { classes } = props;\r\n  // const patientObj = props.patientObj;\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  // console.log(patientObj);\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  const get_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    Bolanle Bassey\r\n                  </b>\r\n                  <Link to={\"/\"}>\r\n                    <ButtonMui\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-end ms-2 mr-2 mt-2\"\r\n                      //startIcon={<FaUserPlus size=\"10\"/>}\r\n                      startIcon={<TiArrowBack />}\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                        color: \"#fff\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                    </ButtonMui>\r\n                  </Link>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Patient ID :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      KEB/SYMH/COM/017/07/23\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>2019-07-04</b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      4 year(s)\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Gender :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      Female\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                     0\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      Gulumbe\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCardFollowup.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCardFollowup);\r\n","import React from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Form } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateFollowupFormValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\r\nimport PatientCardFollowUp from \"./PatientCardFollowUp\";\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst FollowupForm = () => {\r\n  const onSubmitHandler = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const { formik } = useValidateFollowupFormValuesHook(onSubmitHandler);\r\n  return (\r\n    <>\r\n      <CardContent>\r\n        <PatientCardFollowUp />\r\n      </CardContent>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Preliminary\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfVisit\">\r\n                            Date of visit{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfVisit\"\r\n                            id=\"dateOfVisit\"\r\n                            value={formik.initialValues.dateOfVisit}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.dateOfVisit !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.dateOfVisit}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"bloodPressure\">\r\n                            Blood pressure (mmHg)\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"bloodPressure\"\r\n                            id=\"bloodPressure\"\r\n                            value={formik.initialValues.bloodPressure}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.bloodPressure !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.bloodPressure}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"weight\">\r\n                            Weight <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"weight\"\r\n                            id=\"weight\"\r\n                            value={formik.initialValues.weight}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.weight !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.weight}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"height\">\r\n                            Height <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"height\"\r\n                            id=\"height\"\r\n                            value={formik.initialValues.height}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.height !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.height}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"bmi\">BMI </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"bmi\"\r\n                            id=\"bmi\"\r\n                            value={formik.initialValues.bmi}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.bmi !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.bmi}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbeAg\">HbeAG</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hbeAg\"\r\n                            id=\"hbeAg\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.hbeAg}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"reactive\"}>Reactive</option>\r\n                            <option value={\"non-reactive\"}>Non Reactive</option>\r\n                          </select>\r\n                          {formik.errors.hbeAg !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbeAg}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvDna\">HBV DNA (IU/mL)</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hbvDna\"\r\n                            id=\"hbvDna\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.hbvDna}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"detected\"}>Detected</option>\r\n                            <option value={\"undetected\"}>Undetected</option>\r\n                          </select>\r\n                          {formik.errors.hbvDna !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbvDna}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"landmark\">HBsAG Quantification</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hbsAgQuantification\"\r\n                            id=\"hbsAgQuantification\"\r\n                            value={formik.values.hbsAgQuantification}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.hbsAgQuantification ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbsAgQuantification}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST (UI/mL)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT (UI/mL)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"plt\">PLT (mm3)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"plt\"\r\n                          id=\"plt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.plt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.plt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.plt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.pst === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pstValue\">\r\n                            Input PST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pstValue\"\r\n                            id=\"pstValue\"\r\n                            value={formik.values.pstValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pstValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pstValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBilirubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBilirubin\"\r\n                          id=\"totalBilirubin\"\r\n                          value={formik.values.totalBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"albumin\">\r\n                          Albumin <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"albumin\"\r\n                          id=\"albumin\"\r\n                          value={formik.values.albumin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.albumin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.albumin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBilirubin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBilirubin\"\r\n                          id=\"directBilirubin\"\r\n                          value={formik.values.directBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTime\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTime\"\r\n                          id=\"prothrombinTime\"\r\n                          value={formik.values.prothrombinTime}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTime !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTime}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">Ultrasound scan</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ctScan\">CT scan</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ctScan\"\r\n                          id=\"ctScan\"\r\n                          value={formik.values.ctScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ctScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ctScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"acites\">Acites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acites\"\r\n                          id=\"acites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.acites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.acites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.acites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"severityOfAscites\">\r\n                          Severity of ascites\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"severityOfAscites\"\r\n                          id=\"severityOfAscites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.severityOfAscites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"mild\"}>Mild</option>\r\n                          <option value={\"moderate\"}>Moderate</option>\r\n                          <option value={\"massive/gross\"}>Massive/Gross</option>\r\n                        </select>\r\n                        {formik.errors.severityOfAscites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.severityOfAscites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"F-0\"}> No Fibrosis</option>\r\n                          <option value={\"F-1\"}>Mild Fibrosis</option>\r\n                          <option value={\"F-2\"}>Moderate Fibrosis</option>\r\n                          <option value={\"F-3\"}> Severe Fibrosis</option>\r\n                          <option value={\"F-4\"}>Cirrhosis</option>\r\n                          <option value={\"not done\"}>Not done</option>\r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"stagingDateForLiverBiopsy\">\r\n                          Staging date for liver{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"stagingDateForLiverBiopsy\"\r\n                          id=\"stagingDateForLiverBiopsy\"\r\n                          value={formik.values.stagingDateForLiverBiopsy}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.stagingDateForLiverBiopsy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.stagingDateForLiverBiopsy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis\"\r\n                          id=\"diagnosis\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"no fibrosis\"}> No Fibrosis</option>\r\n                          <option value={\"fibrosis\"}>Fibrosis</option>\r\n                          <option value={\"cirrhosis\"}>Cirrhosis</option>\r\n                          <option value={\"hcc\"}>HCC</option>\r\n                        </select>\r\n                        {formik.errors.diagnosis !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Appointment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"treatmentRegimen\">\r\n                          Treatment regimen\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"treatmentRegimen\"\r\n                          id=\"treatmentRegimen\"\r\n                          value={formik.initialValues.treatmentRegimen}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.treatmentRegimen !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.treatmentRegimen}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"nextAppointment\">\r\n                          Next appointment\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"nextAppointment\"\r\n                          id=\"nextAppointment\"\r\n                          value={formik.initialValues.nextAppointment}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.nextAppointment !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.dateOfHepatitisBPositiveScreening}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"clinicalName\">Clinical Name </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"clinicalName\"\r\n                          id=\"clinicalName\"\r\n                          value={formik.initialValues.clinicalName}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.clinicalName !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.clinicalName}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4-12\">\r\n                      <FormGroup>\r\n                        <Label for=\"remark\">Remark</Label>\r\n                        <textarea\r\n                          className=\"form-control\"\r\n                          name=\"remark\"\r\n                          id=\"remark\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.remark}\r\n                          cols=\"50\"\r\n                          rows=\"30\"\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                            height: \"120px\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.remark !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.remark}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FollowupForm;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  '../patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <br /><br/>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date Registration<span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                      <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <FormGroup> \r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"location\"\r\n                                              id=\"location\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.location} >\r\n                                              <option value=\"\" >Select</option>\r\n                                              <option value=\"Facility\" >Facility</option>\r\n                                              <option value=\"Community\" >Community</option>\r\n                                          </Input>\r\n                                      </FormGroup> \r\n                                      {errors.location !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.location}</span>\r\n                                      ) : \"\" }                                        \r\n                                      \r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-4\">\r\n                                      <FormGroup>\r\n                                      <Label >Facility Name </Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"text\"\r\n                                              name=\"vaccinationFacility\"\r\n                                              id=\"vaccinationFacility\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccinationFacility}>\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.vaccinationFacility !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              )}\r\n                                        \r\n                                        <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n                                            </div>\r\n                                            </div>\r\n                                            </div>\r\n                    \r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                            <h5 className=\"card-title\" style={{color:'#fff'}}>VH Laboratory register</h5>\r\n                                            {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                        </div>\r\n                                        {showContactCard && (\r\n                                        <div className=\"card-body\">\r\n                                            <div className={\"row\"}>\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Clinic/Unit where test request was ordered</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HBV screening</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>HBcAb (Total)</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">HBsAg quantification(IU/ml)</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HBeAg</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Anti-HDV</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                    </div>\r\n                                                    <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HBV DNA (Write exact result)</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HCV screening</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Type of HCV RNA test</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Hepatitis C Virus RNA Testing</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                    </div>\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">HCV RNA Write exact result(IU/ml)</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HIV Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                          </div>\r\n                                      </div>\r\n                                )}\r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br/>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Steppers from \"./Stepper/Stepper\";\r\nimport ViralHepatitisForm1 from \"./ViralHepatitisForms/Form1\";\r\nimport ViralHepatitisForm2 from \"./ViralHepatitisForms/Form2\";\r\nimport ViralHepatitisForm3 from \"./ViralHepatitisForms/Form3\";\r\nimport ViralHepatitisForm4 from \"./ViralHepatitisForms/Form4\";\r\nimport FollowupForm from \"./ViralHepatitisForms/FollowUp\";\r\nimport LaboratoryRegister from \"./ViralHepatitisForms/LaboratoryRegister\";\r\nimport { useLocalStorageState } from \"../../hooks/useLocalStorageState\";\r\n\r\nconst ViralHepatitisFormsContainer = (props) => {\r\n  const [step, setStep] = useLocalStorageState(\r\n    \"hepatitis-enrollment-form-step\",\r\n    0\r\n  );\r\n  const location = useLocation();\r\n  const locationState = location.state;\r\n\r\n  console.log(locationState);\r\n  useEffect(() => {\r\n    setStep(0);\r\n  }, []);\r\n  const formMap = {\r\n    0: (\r\n      <ViralHepatitisForm1\r\n        step={step}\r\n        setStep={setStep}\r\n        userStatus={locationState.existingPatient}\r\n        patientObj={locationState.patientObj}\r\n      />\r\n    ),\r\n    1: <ViralHepatitisForm2 step={step} setStep={setStep} />,\r\n    2: <ViralHepatitisForm3 step={step} setStep={setStep} />,\r\n    // 3: <FollowupForm step={step} setStep={setStep}/>,\r\n    // 4: <LaboratoryRegister/>,\r\n  };\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Viral Hepatitis /</Link>New Client\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/\",\r\n          state: \"users\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mr-10 pr-10\"\r\n          style={{\r\n            backgroundColor: \"#014d88\",\r\n            fontWeight: \"bolder\",\r\n            margingRight: \"-40px\",\r\n          }}\r\n          startIcon={<TiArrowBack />}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n            Back{\" \"}\r\n          </span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n      <Steppers activeStep={step} />\r\n      {formMap[step]}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisFormsContainer;\r\n","import * as React from 'react'\r\n\r\n/**\r\n *\r\n * @param {String} key The key to set in localStorage for this value\r\n * @param {Object} defaultValue The value to use if it is not already in localStorage\r\n * @param {{serialize: Function, deserialize: Function}} options The serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse respectively)\r\n */\r\n\r\nfunction useLocalStorageState(\r\n  key,\r\n  defaultValue = '',\r\n  // the = {} fixes the error we would get from destructuring when no argument was passed\r\n  // Check https://jacobparis.com/blog/destructure-arguments for a detailed explanation\r\n  {serialize = JSON.stringify, deserialize = JSON.parse} = {},\r\n) {\r\n  const [state, setState] = React.useState(() => {\r\n    const valueInLocalStorage = window.localStorage.getItem(key)\r\n    if (valueInLocalStorage) {\r\n      // the try/catch is here in case the localStorage value was set before\r\n      // we had the serialization in place (like we do in previous extra credits)\r\n      try {\r\n        return deserialize(valueInLocalStorage)\r\n      } catch (error) {\r\n        window.localStorage.removeItem(key)\r\n      }\r\n    }\r\n    return typeof defaultValue === 'function' ? defaultValue() : defaultValue\r\n  })\r\n\r\n  const prevKeyRef = React.useRef(key)\r\n\r\n  // Check the example at src/examples/local-state-key-change.js to visualize a key change\r\n  React.useEffect(() => {\r\n    const prevKey = prevKeyRef.current\r\n    if (prevKey !== key) {\r\n      window.localStorage.removeItem(prevKey)\r\n    }\r\n    prevKeyRef.current = key\r\n    window.localStorage.setItem(key, serialize(state))\r\n  }, [key, state, serialize])\r\n\r\n  return [state, setState]\r\n}\r\n\r\nexport {useLocalStorageState}","import React from \"react\";\r\nimport { MemoryRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Home from \"./main/webapp/jsx/components/Home\";\r\nimport PatientDetail from \"./main/webapp/jsx/components/Patient/PatientDetail\";\r\n// import RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from \"./main/webapp/jsx/components/Patient/EnrollPatient\";\r\nimport UpdatePatientEnrollment from \"./main/webapp/jsx/components/Patient/UpdatePatientEnrollment\";\r\nimport ViralHepatitisFormsContainer from \"./main/webapp/jsx/components/Patient/ViralHepatitisFormsContainer\";\r\nimport FollowupForm from \"./main/webapp/jsx/components/Patient/ViralHepatitisForms/FollowUp\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n            {/* <FollowupForm /> */}\r\n          </Route>\r\n          <Route path=\"/register-patient\">\r\n            <ViralHepatitisFormsContainer />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}