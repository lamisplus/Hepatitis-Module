{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/PatientVaccinatedLIst.js","main/webapp/jsx/formSchemas/form1ValidationSchema.js","main/webapp/jsx/helpers/cookieStoragehelpers.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form1.js","main/webapp/jsx/components/Patient/SummaryTypeSelect/SummaryTypeSelect.js","main/webapp/jsx/formSchemas/summaryFormsValidationSchema.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Reactive.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/NonReactive.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Fibrosis.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Cirrhosis.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HepatocellularCarcinoma.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType1.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType2.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType3.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType4.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryFormContainer.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","main/webapp/jsx/components/Patient/Stepper/Stepper.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form2.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form3.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form4.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/PatientCardFollowUp.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/FollowUp.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/LaboratoryRegister.js","main/webapp/jsx/components/Patient/ViralHepatitisFormsContainer.js","main/webapp/jsx/hooks/useLocalStorageState.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","calculate_age","dob","today","Date","birthDate","split","age_now","getFullYear","m","getMonth","getDate","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","get","concat","baseUrl","pageSize","page","search","headers","then","response","result","records","map","row","name","firstName","lastName","hospital_number","participantId","gender","age","count","Label","size","vaccinationStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","invalidTextPrompt","requiredTextPrompt","useValidateForm2ValuesHook","onSubmit","Form2ValidationSchema","yup","required","formik","useFormik","initialValues","validationSchema","setCookie","value","daysToExpire","expirationDate","setDate","cookieValue","encodeURIComponent","JSON","stringify","toUTCString","document","cookie","getCookie","cookieArray","decodeURIComponent","i","length","charAt","substring","indexOf","parse","library","add","faCheckSquare","faCoffee","faEdit","faTrash","useStyles","borderRadius","demo","palette","background","default","inline","ViralHepatitisForm1","_ref","setStep","classes","Form1ValidationSchema","useValidateForm1ValuesHook","values","window","scrollTo","useEffect","setValues","castCookieValueToForm","_Fragment","Card","className","CardContent","Form","handleSubmit","FormGroup","for","type","id","hospitalNumber","onChange","handleChange","onBlur","handleBlur","border","errors","surname","otherName","phone","residentialAddress","landmark","country","lga","dateOfBirth","occupation","maritalStatus","education","careEntryPoint","sex","pregnancy","weight","bmi","hepatitisBhbsAg","breastFeeding","historyOfUsingAbusedSubstance","dateOfHepatitisBPositiveScreening","hepatitisChcvAb","MatButton","endIcon","ArrowForward","textTransform","SummaryTypeSelect","setFormValues","_ref$formValues","formValues","select1Value","select2Value","select3Value","maxWidth","Row","Col","Input","event","prevState","target","disabled","useValidateSummaryValuesHook","ReactiveFormSchema","Reactive","_useState","useState","hepatitisBDropdown","hepatitisCDropdown","coInfectionDropdown","_useState2","_slicedToArray","isDropdownsOpen","setIsDropdownsOpen","justifyContent","marginLeft","IconButton","onClick","ExpandMoreIcon","Collapse","in","padding","maleNineAndUnder","maleTen2Fourteen","maleFifteenAndAbove","maleTotal","femaleNineAndUnder","femaleTen2Fourteen","femaleFifteenAndAbove","femaleTotal","specialPopulationPWID","specialPopulationPW","NonReactive","Fibrosis","Cirrhosis","HepatocellularCarcinoma","HbvType1","HbvType2","HbvType3","HbvType4","ViralHepatitisSummaryFormContainer","_formMap","formMap","_defineProperty","divStyle","Home","key","setKey","Fragment","startIcon","FaUserPlus","xl","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","heading","typography","pxToRem","secondaryHeading","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","console","log","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","TiArrowBack","dateParts","dateObject","moment","format","address","Divider","navItemText","SubMenu","patientObjs","_useState3","_useState4","Observation","observation","filter","x","catch","Menu","inverted","Item","setActiveContent","activeContent","route","getAge","Vaccination","setErrors","temp","vaccine","setVaccine","_useState5","adverseEffect","batchNumber","doseNumber","location","patientId","vaccinationFacility","vaccineDate","_useState6","objValues","setObjValues","_useState7","_useState8","saving","setSaving","VACCINE","handleInputChange","e","Modal","isOpen","showModal","toggle","ModalHeader","ModalBody","CardBody","InputGroup","SaveIcon","preventDefault","Object","every","post","toast","loadPatients","CancelIcon","PatientVaccinationHistory","vacinationList","setVaccinationtList","modal","setModal","_React$useState","React","_React$useState2","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","setRecord","patients","_patients","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","vaccineName","position","Dropdown","item","LoadEditModal","IconMenu","LoadDeleteModal","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","VaccinationHistory","PatientnHistory","recentActivities","setRecentActivities","loading","setLoading","useHistory","PatientHistory","personId","activities","LoadViewPage","action","path","actionType","isLoading","date","viewable","Icon","LoadDeletePage","fontFamily","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","setDevices","_useState9","_useState10","pageLoading","setPageLoading","_React$useState3","_React$useState4","showCapture","setshowCapture","_React$useState5","_React$useState6","setTryAgain","_React$useState7","_React$useState8","setSuccess","_useState11","_useState12","_useState13","_useState14","storedBiometrics","setStoredBiometrics","_useState15","_useState16","capturedFingered","setCapturedFingered","_useState17","_useState18","setSelectedFingers","getPersonBiometrics","bgcolor","green","_callee3","fingersCodeset","_context3","sent","_ref2","personCapturedFingers","biometricItems","_biometricItems","_","uniq","extend","captured","includes","_x","_ref3","_callee2","_context2","_x2","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","finger","find","_toConsumableArray","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","_ref4","validate","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","category","patient_id","questionAnswers","visit_date","datatype","responses","obj","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","_useState19","_useState20","chronicMedicationModal","setChronicMedicationModal","_useState21","_useState22","supportiveCareModal","setSupportiveCareModal","_useState23","_useState24","vaccinationHistory","setVaccinationHistory","_useState25","_useState26","inclusionHistory","setInclusionHistory","_useState27","_useState28","demograhicHistory","setDemographicHistory","_useState29","_useState30","vitalHistory","setVitalHistory","_useState31","_useState32","comobitieHistory","setComobitieHistory","_useState33","_useState34","reinfectionHistory","setReinfectionHistory","_useState35","_useState36","signsSymptomsHistory","setSignsSymptomsHistory","_useState37","_useState38","chronicMedicationHistory","setChronicMedicationHistory","_useState39","_useState40","medicationHistory","setMedicationHistory","_useState41","_useState42","supportiveCarenHistory","setSupportiveCareHistory","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","Demographic","VitalSign","Comorbitie","SignsSymptoms","art","setArt","activeTab","prepId","PatientCardDetail","AddmissionHome","flexGrow","UserRegistration","active","contact","contactPoint","deceased","deceasedDateTime","genderId","identifier","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","phoneNumber","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","email","relationshipId","middleName","relatives","setRelatives","toISOString","substr","replace","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","userDetail","user","useLocation","setfemaleStatus","_useState43","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","_useState44","_useState45","_useState46","carePoints","setCarePoints","_useState47","_useState48","setSourceReferral","_useState49","_useState50","hivStatus","setHivStatus","_useState51","_useState52","setEnrollSetting","_useState53","_useState54","setTbStatus","_useState55","_useState56","setKP","_useState57","_useState58","_useState59","_useState60","setPregnancyStatus","_useState61","_useState62","_useState63","_useState64","setOvcEnrolled","_useState65","_useState66","open","setOpen","locationState","loadGenders","getSex","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","newConatctsInfo","contactInfo","line","push","identifiers","altphone","uniqueId","employmentStatus","city","setStateByCountryId","getStateId","patientAge","alert","getSexId","useCallback","t0","_callee4","_context4","_callee5","_context5","_callee6","_context6","getCountryId","handleDateOfBirthChange","dateOfRegistration1","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","slice","getRelationship","relationship","handleInputChangeRelatives","checkPhoneNumberBasic","inputName","_ref8","_callee8","patientForm","_context8","fullName","POSITION","TOP_RIGHT","autoClose","hideProgressBar","min","max","defaultChecked","currentDate","setMonth","dobNew","Math","abs","maritalStatusOption","occupationOption","educationOption","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","relative","splice","handleEditRelative","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","AddIcon","code","Spinner","patientDTO","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","enrollment","getCharacters","hosiptalNumber","_ref9","_callee9","_context9","person","hivEnrollment","put","handleCheckBox","checked","floor","random","htmlFor","backButton","instructions","Steppers","activeStep","steps","Stepper","alternativeLabel","label","Step","StepLabel","ViralHepatitisForm2","dateHbvTestRequested","dateHbvSampleCollected","dateHbvDnaResultReported","stagingDateForLiverBiopsy","hbvDna","hbvDnaValue","hbsAgQuantification","ctScan","albumin","hbeAg","antiHdv","treatmentEligible","pmtctEligible","comment","cols","rows","hcvRna","hcvValue","hepatitisCoInfection","commobidities","specifyMulitipleInfection","ast","plt","astValue","altValue","pltValue","totalBilirubin","directBilirubin","apriScore","fib4","prothrombinTime","urea","creatinine","afp","fibroscan","ultrasoundScan","ascites","severityOfAscites","gradeOfEncephalopathy","childPughScore","liverBiopsyStage","diagnosis","ArrowBackIcon","postDataWithToken","apiUrl","Authorization","abrupt","deleteCookie","convertStringBooleanValues","originalObj","newObj","hasOwnProperty","toLowerCase","ViralHepatitisForm3","Form3ValidationSchema","useValidateForm3ValuesHook","enrolment","treatment","postData","responseData","hbvTreatmentRegimenSwitch","hbvTreatmentReasonforTreatment","hcvTreatmentRegimenSwitch","hcvTreatmentRegimenHcvRetreatment","hcvTreatmentSvr12Testing","hbvTreatmentExperience","hbvPastTreatmentRegimen","hbvNewRegimen","hbvDateStarted","hbvHistoryOfAdverseEffect","hbvRegimeSwitchNewRegimen","hbvRegimeSwitchDateStarted","hbvRegimeSwitchHistoryOfAdverseEffect","hbvRegimeSwitchReason","hbvRegimeSwitchDateStopped","hbvReasonForTreatmentEligibility","hbvReasonsForTreatmentComment","hcvTreatmentExperience","hcvPastTreatmentExperience","hcvDateStarted","hcvDateCompleted","hcvPrescribedDuration","hcvAdverseEventReported","hcvNewRegimen","hcvRegimeSwitchDateStarted","hcvRegimeSwitchDateStopped","hcvRegimeSwitchHistoryOfAdverseEffect","svr12TestingDateStarted","svr12TestingHcvRna","svr12TestingHcvRnaValue","svr12RetreatmentDateTested","svr12RetreatmentHcvRna","svr12RetreatmentHcvRnaValue","hcvRetreatmentNewRegime","hcvRetreatmentPrescribedDuration","hcvRetreatmentDateStarted","hcvRetreatmentDateStopped","hcvRetreatmentAdverseEffect","hcvHistoryOfAdverseEffect","hcvRetreatmentHcvGenotype","FollowupForm","FollowupFormValidationSchema","dateOfVisit","bloodPressure","treatmentRegimen","nextAppointment","remark","useValidateFollowupFormValuesHook","PatientCardFollowUp","pst","pstValue","acites","clinicalName","ViralHepatitisFormsContainer","_useLocalStorageState","defaultValue","undefined","_ref$serialize","serialize","_ref$deserialize","deserialize","valueInLocalStorage","localStorage","getItem","removeItem","setState","prevKeyRef","prevKey","current","setItem","useLocalStorageState","_useLocalStorageState2","step","margingRight","App","Router","Switch","Route","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.a6587ba5.chunk.js","sourcesContent":["// export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\n// export const url = '/api/v1/'\r\nexport const url =  'http://lamisplus.org:7090/api/v1/';\r\nexport const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjkyNjgwOTE3fQ.0qRICM5hq7_pBHS9cy3uE4uikRN9mbh_8XigpTOoqUSpLut5-0hSd03DhyUnCOsPAqNQstA0-rtNj0wqRfZqnw'\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            { title: \"Patient Number\", field: \"hospital_number\", filtering: false },\r\n            {\r\n                title: \"Name\",\r\n                field: \"name\",\r\n            },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            // { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: true }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst invalidTextPrompt = \"Invalid input type\";\r\nconst requiredTextPrompt = \"field is required\"\r\nexport const useValidateForm1ValuesHook = (onSubmit) => {\r\n  const form1InitialValues = {\r\n    \"age\": \"\",\r\n    \"bmi\": \"\",\r\n    \"breastFeeding\": \"\",\r\n    \"careEntryPoint\": \"\",\r\n    \"country\": \"\",\r\n    \"dateOfBirth\": \"\",\r\n    \"dateOfHepatitisBPositiveScreening\": \"\",\r\n    \"education\": \"\",\r\n    \"height\": \"\",\r\n    \"hepatitisBhbsAg\": \"\",\r\n    \"hepatitisChcvAb\": \"\",\r\n    \"historyOfUsingAbusedSubstance\": \"\",\r\n    \"hospitalNumber\": \"\",\r\n    \"landmark\": \"\",\r\n    \"lga\": \"\",\r\n    \"maritalStatus\": \"\",\r\n    \"occupation\": \"\",\r\n    \"otherName\": \"\",\r\n    \"phone\": \"\",\r\n    \"pregnancy\": \"\",\r\n    \"residentialAddress\": \"\",\r\n    \"sex\": \"\",\r\n    \"state\": \"\",\r\n    \"surname\": \"\",\r\n    \"weight\": \"\"\r\n  };\r\n\r\n  const Form1ValidationSchema = yup.object({\r\n    \"age\": yup.number(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"bmi\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"breastFeeding\": yup.boolean(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"careEntryPoint\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"country\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"dateOfBirth\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"dateOfHepatitisBPositiveScreening\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"education\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"height\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hepatitisBhbsAg\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hepatitisChcvAb\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"historyOfUsingAbusedSubstance\": yup.boolean(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hospitalNumber\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"landmark\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"lga\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"maritalStatus\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"occupation\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"otherName\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"phone\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"pregnancy\": yup.boolean(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"residentialAddress\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"sex\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"state\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"surname\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"weight\": yup.string(invalidTextPrompt).required(requiredTextPrompt)\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form1InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form1ValidationSchema,\r\n  });\r\n   return { formik };;\r\n};\r\n\r\n\r\nexport const useValidateForm2ValuesHook = (onSubmit) => {\r\n  const form2InitialValues = {\r\n    \"afp\": \"\",\r\n    \"albumin\": \"\",\r\n    \"alt\": \"\",\r\n    \"altValue\": \"\",\r\n    \"antiHdv\": \"\",\r\n    \"apriScore\": \"\",\r\n    \"ascites\": \"\",\r\n    \"ast\": \"\",\r\n    \"astValue\": \"\",\r\n    \"childPughScore\": \"\",\r\n    \"comment\": \"\",\r\n    \"commobidities\": \"\",\r\n    \"creatinine\": \"\",\r\n    \"ctScan\": \"\",\r\n    \"dateHbvDnaResultReported\": \"\",\r\n    \"dateHbvSampleCollected\": \"\",\r\n    \"dateHbvTestRequested\": \"\",\r\n    \"diagnosis\": \"\",\r\n    \"directBilirubin\": \"\",\r\n    \"fib4\": \"\",\r\n    \"fibroscan\": \"\",\r\n    \"gradeOfEncephalopathy\": \"\",\r\n    \"hbeAg\": \"\",\r\n    \"hbsAgQuantification\": \"\",\r\n    \"hbvDna\": \"\",\r\n    \"hbvDnaValue\": \"\",\r\n    \"hcvRna\": \"\",\r\n    \"hcvValue\": \"\",\r\n    \"hepatitisCoInfection\": \"\",\r\n    \"liverBiopsyStage\": \"\",\r\n    \"plt\": \"\",\r\n    \"pltValue\": \"\",\r\n    \"pmtctEligible\": \"\",\r\n    \"prothrombinTime\": \"\",\r\n    \"severityOfAscites\": \"\",\r\n    \"specifyMulitipleInfection\": \"\",\r\n    \"stagingDateForLiverBiopsy\": \"\",\r\n    \"totalBilirubin\": \"\",\r\n    \"treatmentEligible\": \"\",\r\n    \"ultrasoundScan\": \"\",\r\n    \"urea\": \"\"\r\n  };\r\n\r\n  const Form2ValidationSchema = yup.object({\r\n    \"afp\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"albumin\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"alt\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"altValue\": yup.string(invalidTextPrompt),\r\n    \"antiHdv\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"apriScore\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"ascites\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"ast\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"astValue\": yup.string(invalidTextPrompt),\r\n    \"childPughScore\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"comment\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"commobidities\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"creatinine\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"ctScan\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"dateHbvDnaResultReported\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"dateHbvSampleCollected\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"dateHbvTestRequested\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"diagnosis\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"directBilirubin\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"fib4\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"fibroscan\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"gradeOfEncephalopathy\": yup.number(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbeAg\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbsAgQuantification\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvDna\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvDnaValue\": yup.string(invalidTextPrompt),\r\n    \"hcvRna\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvValue\": yup.string(invalidTextPrompt),\r\n    \"hepatitisCoInfection\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"liverBiopsyStage\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"plt\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"pltValue\": yup.string(invalidTextPrompt),\r\n    \"pmtctEligible\": yup.boolean(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"prothrombinTime\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"severityOfAscites\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"specifyMulitipleInfection\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"stagingDateForLiverBiopsy\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"totalBilirubin\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"treatmentEligible\": yup.boolean(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"ultrasoundScan\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"urea\": yup.string(invalidTextPrompt).required(requiredTextPrompt)\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form2InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form2ValidationSchema,\r\n  });\r\n   return { formik };;\r\n};\r\n\r\n\r\nexport const useValidateForm3ValuesHook = (onSubmit) => {\r\n  const form3InitialValues = {\r\n    \"hbvDateStarted\": \"\",\r\n    \"hbvHistoryOfAdverseEffect\": \"\",\r\n    \"hbvNewRegimen\": \"\",\r\n    \"hbvPastTreatmentRegimen\": \"\",\r\n    \"hbvReasonForTreatmentEligibility\": \"\",\r\n    \"hbvReasonsForTreatmentComment\": \"\",\r\n    \"hbvRegimeSwitchDateStarted\": \"\",\r\n    \"hbvRegimeSwitchDateStopped\": \"\",\r\n    \"hbvRegimeSwitchHistoryOfAdverseEffect\": \"\",\r\n    \"hbvRegimeSwitchNewRegimen\": \"\",\r\n    \"hbvRegimeSwitchReason\": \"\",\r\n    \"hbvTreatmentExperience\": false,\r\n    \"hcvAdverseEventReported\": \"\",\r\n    \"hcvDateCompleted\": \"\",\r\n    \"hcvDateStarted\": \"\",\r\n    \"hcvHistoryOfAdverseEffect\": \"\",\r\n    \"hcvNewRegimen\": \"\",\r\n    \"hcvPastTreatmentExperience\": \"\",\r\n    \"hcvPrescribedDuration\": \"\",\r\n    \"hcvRegimeSwitchDateStarted\": \"\",\r\n    \"hcvRegimeSwitchDateStopped\": \"\",\r\n    \"hcvRegimeSwitchHistoryOfAdverseEffect\": \"\",\r\n    \"hcvRetreatmentAdverseEffect\": false,\r\n    \"hcvRetreatmentDateStarted\": \"\",\r\n    \"hcvRetreatmentDateStopped\": \"\",\r\n    \"hcvRetreatmentHcvGenotype\": \"\",\r\n    \"hcvRetreatmentNewRegime\": \"\",\r\n    \"hcvRetreatmentPrescribedDuration\": \"\",\r\n    \"hcvTreatmentExperience\": \"\",\r\n    \"svr12RetreatmentDateTested\": \"\",\r\n    \"svr12RetreatmentHcvRna\": \"\",\r\n    \"svr12RetreatmentHcvRnaValue\": \"\",\r\n    \"svr12TestingDateStarted\": \"\",\r\n    \"svr12TestingHcvRna\": \"\",\r\n    \"svr12TestingHcvRnaValue\": \"\"\r\n  };\r\n\r\n  const Form3ValidationSchema = yup.object({\r\n    \"hbvDateStarted\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvHistoryOfAdverseEffect\": yup.boolean(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvNewRegimen\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvPastTreatmentRegimen\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvReasonForTreatmentEligibility\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvReasonsForTreatmentComment\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvRegimeSwitchDateStarted\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvRegimeSwitchDateStopped\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvRegimeSwitchHistoryOfAdverseEffect\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvRegimeSwitchNewRegimen\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvRegimeSwitchReason\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hbvTreatmentExperience\": yup.boolean(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvAdverseEventReported\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvDateCompleted\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvDateStarted\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvHistoryOfAdverseEffect\": yup.boolean(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvNewRegimen\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvPastTreatmentExperience\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvPrescribedDuration\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvRegimeSwitchDateStarted\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvRegimeSwitchDateStopped\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvRegimeSwitchHistoryOfAdverseEffect\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvRetreatmentAdverseEffect\": yup.boolean(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvRetreatmentDateStarted\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvRetreatmentDateStopped\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvRetreatmentHcvGenotype\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvRetreatmentNewRegime\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvRetreatmentPrescribedDuration\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"hcvTreatmentExperience\": yup.boolean(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"svr12RetreatmentDateTested\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"svr12RetreatmentHcvRna\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"svr12RetreatmentHcvRnaValue\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"svr12TestingDateStarted\": yup.date(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"svr12TestingHcvRna\": yup.string(invalidTextPrompt).required(requiredTextPrompt),\r\n    \"svr12TestingHcvRnaValue\": yup.string(invalidTextPrompt).required(requiredTextPrompt)\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form3InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form3ValidationSchema,\r\n  });\r\n   return { formik };\r\n};\r\n\r\nexport const useValidateFollowupFormValuesHook = (onSubmit) => {\r\n  const followupFormIntialValue = {\r\n    dateOfVisit: \"\",\r\n    weight: \"\",\r\n    height: \"\",\r\n    bmi: \"\",\r\n    bloodPressure: \"\",\r\n    hbsAgQuantification: \"\",\r\n    hbeAg: \"\",\r\n    hbvDna: \"\",\r\n\r\n    alt: \"\",\r\n    ast: \"\",\r\n    plt: \"\",\r\n    totalBilirubin: \"\",\r\n    directBilirubin: \"\",\r\n    albumin: \"\",\r\n    apriScore: \"\",\r\n    fib4: \"\",\r\n    prothrombinTime: \"\",\r\n    urea: \"\",\r\n    creatinine: \"\",\r\n    ultrasoundScan: \"\",\r\n    afp: \"\",\r\n    fibroscan: \"\",\r\n    ctScan: \"\",\r\n    ascites: \"\",\r\n    severityOfAscites: \"\",\r\n    gradeOfEncephalopathy: \"\",\r\n    childPughScore: \"\",\r\n    liverBiopsyStage: \"\",\r\n    stagingDateForLiverBiopsy: \"\",\r\n    diagnosis: \"\",\r\n    treatmentRegimen: \"\",\r\n    nextAppointment: \"\",\r\n    remark: \"\",\r\n\r\n  };\r\n\r\n  const FollowupFormValidationSchema = yup.object({\r\n    dateOfVisit: yup.string(),\r\n    weight: yup.string(),\r\n    height: yup.string(),\r\n    bmi: yup.string(),\r\n    bloodPressure: yup.string(),\r\n    hbsAgQuantification: yup.string(),\r\n    hbeAg: yup.string(),\r\n    hbvDna: yup.string(),\r\n\r\n    alt: yup.string(),\r\n    ast: yup.string(),\r\n    plt: yup.string(),\r\n    totalBilirubin: yup.string(),\r\n    directBilirubin: yup.string(),\r\n    albumin: yup.string(),\r\n    apriScore: yup.string(),\r\n    fib4: yup.string(),\r\n    prothrombinTime: yup.string(),\r\n    urea: yup.string(),\r\n    creatinine: yup.string(),\r\n    ultrasoundScan: yup.string(),\r\n    afp: yup.string(),\r\n    fibroscan: yup.string(),\r\n    ctScan: yup.string(),\r\n    ascites: yup.string(),\r\n    severityOfAscites: yup.string(),\r\n    gradeOfEncephalopathy: yup.string(),\r\n    childPughScore: yup.string(),\r\n    liverBiopsyStage: yup.string(),\r\n    stagingDateForLiverBiopsy: yup.string(),\r\n    diagnosis: yup.string()\r\n\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: followupFormIntialValue,\r\n    onSubmit,\r\n    validationSchema: FollowupFormValidationSchema,\r\n  });\r\n   return { formik };;\r\n};\r\n\r\n\r\n\r\n","export function setCookie(name, value, daysToExpire) {\r\n    const expirationDate = new Date();\r\n    expirationDate.setDate(expirationDate.getDate() + daysToExpire);\r\n  \r\n    let cookieValue = encodeURIComponent(name) + \"=\";\r\n  \r\n    // If the value is not a string, stringify it as JSON\r\n    if (typeof value !== 'string') {\r\n      cookieValue += encodeURIComponent(JSON.stringify(value));\r\n    } else {\r\n      cookieValue += encodeURIComponent(value);\r\n    }\r\n  \r\n    cookieValue += \";expires=\" + expirationDate.toUTCString() + \";path=/\";\r\n  \r\n    document.cookie = cookieValue;\r\n  }\r\n  \r\n  export function getCookie(name) {\r\n    const decodedCookie = decodeURIComponent(document.cookie);\r\n    const cookieArray = decodedCookie.split(';');\r\n  \r\n    for (let i = 0; i < cookieArray.length; i++) {\r\n      let cookie = cookieArray[i];\r\n      while (cookie.charAt(0) === ' ') {\r\n        cookie = cookie.substring(1);\r\n      }\r\n  \r\n      if (cookie.indexOf(name + \"=\") === 0) {\r\n        const cookieValue = cookie.substring(name.length + 1, cookie.length);\r\n        \r\n        // Check if the value is JSON and parse it if necessary\r\n        try {\r\n          return JSON.parse(decodeURIComponent(cookieValue));\r\n        } catch (error) {\r\n          // If it's not valid JSON, return the raw value\r\n          return decodeURIComponent(cookieValue);\r\n        }\r\n      }\r\n    }\r\n  \r\n    return null;\r\n  }\r\n  \r\n","import React, { useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Form } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm1ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { ArrowForward } from \"@material-ui/icons\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm1 = ({ setStep }) => {\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    setCookie(\"hepatitis1\", values, 1);\r\n    setStep(1);\r\n  };\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm1ValuesHook(onSubmitHandler);\r\n  \r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis1\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Demography\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hospitalNumber\">\r\n                            Hospital Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={formik.values.hospitalNumber}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.hospitalNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"surname\">\r\n                            Surname <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"surname\"\r\n                            id=\"surname\"\r\n                            value={formik.values.surname}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.surname !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.surname}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"otherName\">Other name </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"otherName\"\r\n                            id=\"otherName\"\r\n                            value={formik.values.otherName}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.otherName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.otherName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"phone\">\r\n                            Phone <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"phone\"\r\n                            id=\"phone\"\r\n                            value={formik.values.phone}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.phone !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.phone}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"residentialAddress\">\r\n                            Residential Address{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"residentialAddress\"\r\n                            id=\"residentialAddress\"\r\n                            value={formik.values.residentialAddress}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.residentialAddress !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.residentialAddress}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"landmark\">Landmark </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"landmark\"\r\n                            id=\"landmark\"\r\n                            value={formik.values.landmark}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.landmark !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.landmark}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"country\">\r\n                            Country <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"country\"\r\n                            id=\"country\"\r\n                            value={formik.values.country}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.country !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.country}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"state\">\r\n                            State <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"state\"\r\n                            id=\"state\"\r\n                            value={formik.values.state}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.state !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.state}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"lga\">LGA </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lga\"\r\n                            id=\"lga\"\r\n                            value={formik.values.lga}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.lga !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.lga}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfBirth\">\r\n                            Date of birth\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfBirth\"\r\n                            id=\"dateOfBirth\"\r\n                            value={formik.values.dateOfBirth}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.dateOfBirth !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.dateOfBirth}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"age\">\r\n                            Age <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"age\"\r\n                            id=\"age\"\r\n                            value={formik.values.age}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.age !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.age}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"occupation\">Occupation</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"occupation\"\r\n                            id=\"occupation\"\r\n                            value={formik.values.occupation}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.occupation !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.occupation}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"maritalStatus\">\r\n                            Marital status\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatus\"\r\n                            id=\"maritalStatus\"\r\n                            value={formik.values.maritalStatus}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"single\">Single</option>\r\n                            <option value=\"married\">Married</option>\r\n                            <option value=\"divorced\">Divorced</option>\r\n                            <option value=\"seperated\">Seperated</option>\r\n                            <option value=\"cohabiting\">Cohabiting</option>\r\n                            <option value=\"widowed\">Widowed</option>\r\n                          </select>\r\n                          {formik.errors.maritalStatus !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.maritalStatus}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"education\">\r\n                            Education <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"education\"\r\n                            id=\"education\"\r\n                            value={formik.values.education}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.education !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.education}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Enrollment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"careEntryPoint\">\r\n                          Care entry point\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"careEntryPoint\"\r\n                          id=\"careEntryPoint\"\r\n                          value={formik.values.careEntryPoint}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.careEntryPoint !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.careEntryPoint}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"sex\">\r\n                          Sex <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"sex\"\r\n                          id=\"sex\"\r\n                          value={formik.values.sex}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"male\">Male</option>\r\n                          <option value=\"female\">Female</option>\r\n                        </select>\r\n                        {formik.errors.sex !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.sex}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pregnancy\">\r\n                          Pregnancy <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"pregnancy\"\r\n                          id=\"pregnancy\"\r\n                          value={formik.values.pregnancy}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value={true}>Yes</option>\r\n                          <option value={false}>No</option>\r\n                        </select>\r\n                        {formik.errors.pregnancy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pregnancy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"weight\">\r\n                          Weight <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"weight\"\r\n                          id=\"weight\"\r\n                          value={formik.values.weight}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.weight !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.weight}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"height\">\r\n                          Height <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"height\"\r\n                          id=\"height\"\r\n                          value={formik.values.height}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.height !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.height}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"bmi\">BMI </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          name=\"bmi\"\r\n                          id=\"bmi\"\r\n                          value={formik.values.bmi}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.bmi !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.bmi}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"hepatitisBhbsAg\">\r\n                          Hepatitis B (HBsAg){\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"hepatitisBhbsAg\"\r\n                          id=\"hepatitisBhbsAg\"\r\n                          value={formik.values.hepatitisBhbsAg}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.hepatitisBhbsAg !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.hepatitisBhbsAg}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"breastFeeding\">\r\n                          BreastFeeding <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"breastFeeding\"\r\n                          id=\"breastFeeding\"\r\n                          value={formik.values.breastFeeding}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value={true}>Yes</option>\r\n                          <option value={false}>No</option>\r\n                        </select>\r\n                        {formik.errors.breastFeeding !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.breastFeeding}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"historyOfUsingAbusedSubstance\">\r\n                          History of using abused substance{\" \"}\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"historyOfUsingAbusedSubstance\"\r\n                          id=\"historyOfUsingAbusedSubstance\"\r\n                          value={formik.values.historyOfUsingAbusedSubstance}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value={true}>Yes</option>\r\n                          <option value={false}>No</option>\r\n                        </select>\r\n                        {formik.errors.historyOfUsingAbusedSubstance !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.historyOfUsingAbusedSubstance}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Screening\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfHepatitisBPositiveScreening\">\r\n                          Date of first Hep. B positive screening{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"dateOfHepatitisBPositiveScreening\"\r\n                          id=\"dateOfHepatitisBPositiveScreening\"\r\n                          value={\r\n                            formik.values.dateOfHepatitisBPositiveScreening\r\n                          }\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.dateOfHepatitisBPositiveScreening !==\r\n                        \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.dateOfHepatitisBPositiveScreening}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"hepatitisChcvAb\">\r\n                          Hepatitis C (HCVAb){\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"hepatitisChcvAb\"\r\n                          id=\"hepatitisChcvAb\"\r\n                          value={formik.values.hepatitisChcvAb}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.hepatitisChcvAb !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.hepatitisChcvAb}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm1;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, FormGroup, Input } from \"reactstrap\";\r\n\r\nconst SummaryTypeSelect = ({\r\n  setFormValues,\r\n  formValues: { select1Value, select2Value, select3Value },\r\n}) => {\r\n  return (\r\n    <div style={{ maxWidth: \"400px\" }}>\r\n      <Row className=\"d-flex justify-content-between\">\r\n        <Col>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"summary-type\"\r\n              id=\"summary-type\"\r\n              value={select1Value}\r\n              onChange={(event) => setFormValues(prevState => {\r\n                return { ...prevState, select1Value: event.target.value, select2Value: \"\" }\r\n              })}\r\n            >\r\n              <option value=\"\">Summary type</option>\r\n              <option value=\"Hepatitis B\">Hepatitis B</option>\r\n              <option value=\"Hepatitis C\">Hepatitis C</option>\r\n              <option value=\"CoInfection\">CoInfection</option>\r\n            </Input>\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        {select1Value !== \"\" && (\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select2\"\r\n                id=\"select2\"\r\n                value={select2Value}\r\n                onChange={(event) => setFormValues(prevState => {\r\n                  return { ...prevState, select2Value: event.target.value, select3Value: \"\" }\r\n                })}\r\n                disabled={select1Value === \"\"}\r\n              >\r\n                <option value=\"\">select type for {select1Value}</option>\r\n\r\n                {select1Value === \"Hepatitis B\" && (\r\n                  <>\r\n                    <option value=\"Diagnosis\">Diagnosis</option>\r\n                    <option value=\"Complications\">Complications</option>\r\n                    <option value=\"Treatment\">Treatment</option>\r\n                    <option value=\"Monitoring\">Monitoring</option>\r\n                    <option value=\"Mortality\">Mortality</option>\r\n                  </>\r\n                )}\r\n                {select1Value === \"Hepatitis C\" && (\r\n                  <>\r\n                    <option value=\"Screening/Diagnosis\">\r\n                      Screening/Diagnosis\r\n                    </option>\r\n                    <option value=\"HCV Complications\">HCV Complications</option>\r\n                    <option value=\"HCV Treatment\">HCV Treatment</option>\r\n                    <option value=\"HCV Treatment Effectiveness\">\r\n                      HCV Treatment Effectiveness\r\n                    </option>\r\n                    <option value=\"HCV Re-treatment\">HCV Re-treatment</option>\r\n                    <option value=\"HCV Related Mortality\">\r\n                      HCV Related Mortality\r\n                    </option>\r\n                  </>\r\n                )}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        )}\r\n\r\n\r\n        {select2Value !== \"\" && select1Value !== \"\" && (\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select3\"\r\n                id=\"select3\"\r\n                value={select3Value}\r\n                onChange={(event) => setFormValues(prevState => {\r\n                  return { ...prevState, select3Value: event.target.value }\r\n                })}\r\n                disabled={select2Value === \"\"}\r\n              >\r\n                <option value=\"\">\r\n                  Select type for {select1Value} {select2Value}\r\n                </option>\r\n                {select2Value === \"Diagnosis\" && (\r\n                  <>\r\n                    <option value=\"Reactive\">Reactive</option>\r\n                    <option value=\"Non Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Complications\" && (\r\n                  <>\r\n                    <option value=\"Fibrosis\">Fibrosis</option>\r\n                    <option value=\"Cirrhosis\">Cirrhosis</option>\r\n                    <option value=\"Hepatocellular Carcinoma\">\r\n                      Hepatocellular Carcinoma\r\n                    </option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Monitoring\" && (\r\n                  <>\r\n                    <option value=\"Monitoring Reactive\">Reactive</option>\r\n                    <option value=\"Monitoring Non Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Mortality\" && (\r\n                  <>\r\n                    <option value=\"Mortality Reactive\">Reactive</option>\r\n                    <option value=\"Mortality Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Treatment\" && (\r\n                  <>\r\n                    <option value=\"HBV DNA <2000 IU/ml\">\r\n                      HBV DNA {\"<\"}2000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBV DNA >=2000 IU/ml\">\r\n                      HBV DNA {\">=\"}2000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBV DNA >=200000 IU/ml\">\r\n                      HBV DNA {\">=\"}200,000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBegAg +ve\">HBegAg +ve</option>\r\n                  </>\r\n                )}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SummaryTypeSelect\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useValidateSummaryValuesHook = (onSubmit) => {\r\n  const reactiveFormInitialValues = {\r\n   \"maleNineAndUnder\": \"\",\r\n   \"maleTen2Fourteen\": \"\",\r\n   \"maleFifteenAndAbove\": \"\",\r\n   \"maleTotal\" : \"\",\r\n   \"femaleNineAndUnder\": \"\",\r\n   \"femaleTen2Fourteen\": \"\",\r\n   \"femaleFifteenAndAbove\": \"\",\r\n   \"femaleTotal\" : \"\",\r\n   \"specialPopulationPWID\" : \"\",\r\n   \"specialPopulationPW\" : \"\",\r\n  };\r\n\r\n  const ReactiveFormSchema = yup.object({\r\n    \"maleNineAndUnder\": yup.string(),\r\n    \"maleTen2Fourteen\": yup.string(),\r\n    \"maleFifteenAndAbove\": yup.string(),\r\n    \"maleTotal\" : yup.string(),\r\n    \"femaleNineAndUnder\": yup.string(),\r\n    \"femaleTen2Fourteen\": yup.string(),\r\n    \"femaleFifteenAndAbove\": yup.string(),\r\n    \"femaleTotal\" : yup.string(),\r\n    \"specialPopulationPWID\" : yup.string(),\r\n    \"specialPopulationPW\" : yup.string(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: reactiveFormInitialValues,\r\n    onSubmit,\r\n    validationSchema: ReactiveFormSchema,\r\n  });\r\n   return { formik };;\r\n};","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Reactive = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Reactive\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reactive;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst NonReactive = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Non-Reactive\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NonReactive;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Fibrosis = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Fibrosis\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Fibrosis;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Cirrhosis = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Cirrhosis\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cirrhosis;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HepatocellularCarcinoma = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Hepatocellular Carcinoma\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HepatocellularCarcinoma;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType1 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\"<\"} 2000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType1;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType2 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\">=\"}2000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType2;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType3 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\">=\"}200000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType3;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType4 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBegAg +ve\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType4;\r\n","import React, { useState } from \"react\";\r\nimport SummaryTypeSelect from \"./SummaryTypeSelect/SummaryTypeSelect\";\r\nimport Reactive  from \"../Patient/ViralHepatitisSummaryForms/Reactive\";\r\nimport NonReactive from \"./ViralHepatitisSummaryForms/NonReactive\";\r\nimport Fibrosis from \"./ViralHepatitisSummaryForms/Fibrosis\";\r\nimport Cirrhosis from \"./ViralHepatitisSummaryForms/Cirrhosis\";\r\nimport HepatocellularCarcinoma from \"./ViralHepatitisSummaryForms/HepatocellularCarcinoma\";\r\nimport HbvType1 from \"./ViralHepatitisSummaryForms/HbvType1\";\r\nimport HbvType2 from \"./ViralHepatitisSummaryForms/HbvType2\";\r\nimport HbvType3 from \"./ViralHepatitisSummaryForms/HbvType3\";\r\nimport HbvType4 from \"./ViralHepatitisSummaryForms/HbvType4\";\r\n\r\nconst ViralHepatitisSummaryFormContainer = () => {\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    select1Value: \"\",\r\n    select2Value: \"\",\r\n    select3Value: \"\",\r\n});\r\n\r\nconst formMap = {\r\n    \"Reactive\" : <Reactive/>,\r\n    \"Non Reactive\" : <NonReactive/>,\r\n    \"Fibrosis\" : <Fibrosis/>,\r\n    \"Cirrhosis\" : <Cirrhosis/>,\r\n    \"Hepatocellular Carcinoma\" : <HepatocellularCarcinoma/>,\r\n    \"HBV DNA <2000 IU/ml\" : <HbvType1/>,\r\n    \"HBV DNA >=2000 IU/ml\" : <HbvType2/>,\r\n    \"HBV DNA >=200000 IU/ml\" : <HbvType3/>,\r\n    \"HBegAg +ve\" : <HbvType4/>,\r\n    \"Mortality Reactive\" : <div> Mortality Reactive</div>,\r\n    \"Mortality Reactive\" : <div> Mortality Reactive</div>,\r\n    \"Monitoring Reactive\" : <div>Monitoring Reactive</div>,\r\n    \"Monitoring Non Reactive\" : <div>Monitoring Non Reactive</div>,\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <SummaryTypeSelect formValues={formValues} setFormValues={setFormValues}/>\r\n      </div>\r\n\r\n      <div className=\"my-2\" style={{fontWeight: \"600\"}}>\r\n        <span>{formValues.select1Value && ` ${formValues.select1Value} `}</span>\r\n        <span>{formValues.select2Value && ` | ${formValues.select2Value } `}</span>\r\n        <span style={{color: \"#014d88\"}}>{formValues.select3Value && `| ${formValues.select3Value} `}</span>\r\n      </div>\r\n\r\n      <div>\r\n       {formMap[formValues.select3Value]}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisSummaryFormContainer;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList'\r\nimport PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nimport ViralHepatitis from \"./Patient/ViralHepatitisForms/Form1\"\r\nimport ViralHepatitisSummaryFormContainer from \"./Patient/ViralHepatitisSummaryFormContainer\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>Viral Hepatitis</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"List\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n                  <Tab eventKey=\"vaccinated\" title=\"Summary\">                   \r\n                    {/* <PatientVaccinatedLIst /> */}\r\n                   <ViralHepatitisSummaryFormContainer/>\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.phone!==null ? patientObj.phone :\"\"}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{patientObj.address!==null ? patientObj.address : \"\"} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    const loadVaccination = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    }\r\n    const loadIcu = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'icu'})\r\n    }\r\n    const loadAddmission = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    }\r\n    const onClickDischarge = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        //setActiveItem('history')\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>                  \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    console.log(props.records)\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Dosage Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n    console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>       \r\n            <br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Vaccination History \"\r\n              columns={[\r\n                { title: \"Vaccine\", field: \"vaccine\", filtering: false },\r\n                {\r\n                  title: \"Vaccine Date\",\r\n                  field: \"vaccineDate\",\r\n                },\r\n                \r\n                { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                { title: \"Location\", field: \"location\", filtering: false },      \r\n                { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ vacinationList.map((row) => ({\r\n                    vaccine: row.vaccineName,\r\n                    vaccineDate: row.vaccineDate,\r\n                    batchNumber: row.batchNumber,\r\n                    doseNumber: row.doseNumber,\r\n                    location: row.location,\r\n                    vaccinationFacility: row.vaccinationFacility,\r\n                    adverseEffect: row.adverseEffect,\r\n                    actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>\r\n                  \r\n                  }))}\r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { Fragment} from \"react\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n  \r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >HEPATITIS /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Enrolement', 'Diagnosis', 'Treatment'];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return 'Enrolement';\r\n    case 1:\r\n      return 'Diagnosis';\r\n    case 2:\r\n      return 'Treatment';\r\n    default:\r\n      return 'Unknown stepIndex';\r\n  }\r\n}\r\n\r\nexport default function Steppers({activeStep}) {\r\n  \r\n  \r\n  const steps = getSteps();\r\n\r\n\r\n  return (\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm2ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm2 = ({setStep}) => {\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    setCookie(\"hepatitis2\", values, 1);\r\n    console.log(values)\r\n    setStep(2)\r\n}\r\nconst moveBack = () => {\r\n  window.scrollTo(0, 0);\r\n  setStep(0)\r\n}\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm2ValuesHook(onSubmitHandler);\r\n  console.log(formik.errors)\r\n\r\n  \r\n  \r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis2\");\r\n    if (cookieValue) {\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n  }, []);\r\n\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Diagnosis\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis B\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvTestRequested\">\r\n                                Date HBV test requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvTestRequested\"\r\n                                id=\"dateHbvTestRequested\"\r\n                                value={formik.values.dateHbvTestRequested}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvTestRequested !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvTestRequested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvSampleCollected\">\r\n                                Date HBV sample Requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvSampleCollected\"\r\n                                id=\"dateHbvSampleCollected\"\r\n                                value={formik.values.dateHbvSampleCollected}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvSampleCollected !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvSampleCollected}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvDnaResultReported\">\r\n                                Date of HBV DNA result reported{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvDnaResultReported\"\r\n                                id=\"dateHbvDnaResultReported\"\r\n                                value={formik.values.dateHbvDnaResultReported}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvDnaResultReported !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvDnaResultReported}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"stagingDateForLiverBiopsy\">\r\n                                Staging date of liver biopsy{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"stagingDateForLiverBiopsy\"\r\n                                id=\"stagingDateForLiverBiopsy\"\r\n                                value={formik.values.stagingDateForLiverBiopsy}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.stagingDateForLiverBiopsy !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.stagingDateForLiverBiopsy}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-2 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                HBV DNA(UI/ml){\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"DETECTED\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Detected\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"UNDETECTED\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Undetected\r\n                                </label>\r\n\r\n                                {formik.errors.hbvDna !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDna}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </div>\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hbvDna === \"DETECTED\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hbvDnaValue\">\r\n                                  Input HBV DNA value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hbvDnaValue\"\r\n                                  id=\"hbvDnaValue\"\r\n                                  value={formik.values.hbvDnaValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.hbvDnaValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbsAgQuantification\">HBsAG Quantification</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbsAgQuantification\"\r\n                                id=\"hbsAgQuantification\"\r\n                                value={formik.values.hbsAgQuantification}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbsAgQuantification ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbsAgQuantification}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"ctScan\">CT scan</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"ctScan\"\r\n                                id=\"ctScan\"\r\n                                value={formik.values.ctScan}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.ctScan ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.ctScan}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"albumin\">Albumin</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"albumin\"\r\n                                id=\"albumin\"\r\n                                value={formik.values.albumin}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.albumin ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.albumin}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbeAg\">HbeAG</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbeAg\"\r\n                                id=\"hbeAg\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hbeAg}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"REACTIVE\"}>Reactive</option>\r\n                                <option value={\"NON_REACTIVE\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hbeAg !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbeAg}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          \r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"antiHdv\">Anti-HDV</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"antiHdv\"\r\n                                id=\"antiHdv\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.antiHdv}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"REACTIVE\"}>Reactive</option>\r\n                                <option value={\"NON_REACTIVE\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                                <option value={\"NOT_DONE\"}>Not Done</option>\r\n                              </select>\r\n                              {formik.errors.antiHdv !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.antiHdv}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"treatmentEligible\">\r\n                                Treatment Eligible\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"treatmentEligible\"\r\n                                id=\"treatmentEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.treatmentEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={true}>Yes</option>\r\n                                <option value={true}>No</option>\r\n                              </select>\r\n                              {formik.errors.treatmentEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.treatmentEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          {/* <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"treatmentEligible\">Treatment Eligible</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"treatmentEligible\"\r\n                                id=\"treatmentEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.treatmentEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={true}>Yes</option>\r\n                                <option value={false}>\r\n                                  No\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.treatmentEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.treatmentEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div> */}\r\n\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"pmtctEligible\">PMTCT Eligible</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"pmtctEligible\"\r\n                                id=\"pmtctEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pmtctEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={true}>Yes</option>\r\n                                <option value={false}>\r\n                                  No\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.pmtctEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.pmtctEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4-12\">\r\n                            <FormGroup>\r\n                              <Label for=\"comment\">Comment</Label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                name=\"comment\"\r\n                                id=\"comment\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.comment}\r\n                                cols=\"50\"\r\n                                rows=\"30\"\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                  height: \"120px\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.comment !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.comment}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis C\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRna\">HCV RNA (IU/ml)</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRna\"\r\n                                id=\"hcvRna\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRna}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"DETECTED\"}>Detected</option>\r\n                                <option value={\"UNDETECTED\"}>Undetected</option>\r\n                              </select>\r\n                              {formik.errors.hcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hcvRna === \"DETECTED\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hcvValue\">\r\n                                  Input HCV RNA Value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hcvValue\"\r\n                                  id=\"hcvValue\"\r\n                                  value={formik.values.hcvValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n                                {formik.errors.hcvValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hcvValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hepatitisCoInfection\">\r\n                                Hepatitis Coinfection\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hepatitisCoInfection\"\r\n                                id=\"hepatitisCoInfection\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hepatitisCoInfection}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              \r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"HBV_HCV\"}>HBV/HCV</option>\r\n                                <option value={\"HCV_HIV\"}>HCV/HIV</option>\r\n                                <option value={\"HBV_HDV\"}>HBV/HDV</option>\r\n                                <option value={\"HBV_HCD_HIV\"}>\r\n                                  HBV/HCD/HIV\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hepatitisCoInfection !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hepatitisCoInfection}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"commobidities\">\r\n                                Commobidities{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"commobidities\"\r\n                                id=\"commobidities\"\r\n                                value={formik.values.commobidities}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.commobidities !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.commobidities}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specifyMulitipleInfection\">\r\n                                Specify multiple infection{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"specifyMulitipleInfection\"\r\n                                id=\"specifyMulitipleInfection\"\r\n                                value={formik.values.specifyMulitipleInfection}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.specifyMulitipleInfection !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specifyMulitipleInfection}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"plt\">PLT</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"plt\"\r\n                          id=\"plt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.plt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.plt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.plt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.plt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pltValue\">\r\n                            Input PLT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pltValue\"\r\n                            id=\"pltValue\"\r\n                            value={formik.values.pltValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pltValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pltValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBilirubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBilirubin\"\r\n                          id=\"totalBilirubin\"\r\n                          value={formik.values.totalBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBilirubin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBilirubin\"\r\n                          id=\"directBilirubin\"\r\n                          value={formik.values.directBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTime\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTime\"\r\n                          id=\"prothrombinTime\"\r\n                          value={formik.values.prothrombinTime}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTime !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTime}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">\r\n                          Ultrasound scan (μmol/L)\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascites\">Ascites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ascites\"\r\n                          id=\"ascites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ascites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ascites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ascites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik.values.ascites === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"severityOfAscites\">\r\n                            Severity of ascites\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"severityOfAscites\"\r\n                            id=\"severityOfAscites\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.severityOfAscites}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"MILD\"}>Mild</option>\r\n                            <option value={\"MODERATE\"}>Moderate</option>\r\n                            <option value={\"MASSIVE_OR_GROSS\"}>\r\n                              Massive/Gross\r\n                            </option>\r\n                          </select>\r\n                          {formik.errors.severityOfAscites !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.severityOfAscites}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"F0__NO_FIBROSIS\"}> No Fibrosis</option>\r\n                          <option value={\"F1__MILD_FIBROSIS\"}>Mild Fibrosis</option>\r\n                          <option value={\"F2__MODERATE_FIBROSIS\"}>Moderate Fibrosis</option>\r\n                          <option value={\"F3__SEVERE_FIBROSIS\"}> Severe Fibrosis</option>\r\n                          <option value={\"F4__CIRRHOSIS\"}>Cirrhosis</option>\r\n                          <option value={\"NOT_DONE\"}>Not done</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis\"\r\n                          id=\"diagnosis\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"NO_FIBROSIS\"}> No Fibrosis</option>\r\n                          <option value={\"FIBROSIS\"}>Fibrosis</option>\r\n                          <option value={\"CIRRHOSIS\"}>Cirrhosis</option>\r\n                          <option value={\"HIGH_CC\"}>HCC</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.diagnosis !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-between\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={moveBack}\r\n                  className={classes.button}\r\n                  startIcon={<ArrowBackIcon />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n                </MatButton>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm2;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm3ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { getCookie, setCookie } from \"../../../helpers/cookieStoragehelpers\";\r\nimport axios from \"axios\";\r\nimport { url as apiUrl, token } from \"../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst postDataWithToken = async (data) => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}enrollment`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    // Handle the response if needed\r\n    console.log(\"Post successful:\", response.data);\r\n    toast.success(\"Enrolment submitted successfully\");\r\n    return response.data;\r\n  } catch (error) {\r\n    // Handle any errors that occurred during the request\r\n    console.error(\"Error posting data:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nfunction deleteCookie(name) {\r\n  document.cookie = name + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n}\r\n\r\nfunction convertStringBooleanValues(originalObj) {\r\n  const newObj = {};\r\n\r\n  for (const key in originalObj) {\r\n    if (originalObj.hasOwnProperty(key)) {\r\n      const value = originalObj[key];\r\n      if (typeof value === 'string') {\r\n        newObj[key] = value.toLowerCase() === 'true'|| value.toLowerCase() === 'yes' ? true : value.toLowerCase() === 'false' || value.toLowerCase() === 'no'? false : value;\r\n      } else {\r\n        newObj[key] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  return newObj;\r\n}\r\nconst ViralHepatitisForm3 = ({ setStep }) => {\r\n  const onSubmitHandler = (values) => {\r\n    setCookie(\"hepatitis3\", values, 1);\r\n    const enrolment = getCookie(\"hepatitis1\");\r\n    const diagnosis = getCookie(\"hepatitis2\");\r\n    const treatment = getCookie(\"hepatitis3\");\r\n\r\n\r\n    const postData = {\r\n      diagnosis: convertStringBooleanValues(diagnosis),\r\n      enrollment: convertStringBooleanValues(enrolment),\r\n      treatment: convertStringBooleanValues(treatment)\r\n    };\r\n    postDataWithToken(postData)\r\n      .then((responseData) => {\r\n        toast.success(\"Enrolment successful\");\r\n        deleteCookie(\"hepatitis1\");\r\n        deleteCookie(\"hepatitis2\");\r\n        deleteCookie(\"hepatitis3\");\r\n        setStep(0);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"enrolment failed\")\r\n      });\r\n  };\r\n  const moveBack = () => {\r\n    window.scrollTo(0, 0);\r\n    setStep(1);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm3ValuesHook(onSubmitHandler);\r\n\r\n\r\n  \r\n\r\n  const castCookieValueToForm = () => {\r\n    const cookieValue = getCookie(\"hepatitis3\");\r\n    if (cookieValue) {\r\n      // convertStringBooleanValues(cookieValue)\r\n      formik.setValues(cookieValue);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    castCookieValueToForm();\r\n  }, []);\r\n\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hbvTreatmentRegimenSwitch: true,\r\n    hbvTreatmentReasonforTreatment: true,\r\n    hcvTreatmentRegimenSwitch: true,\r\n    hcvTreatmentRegimenHcvRetreatment: true,\r\n    hcvTreatmentSvr12Testing: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Hepatitis B Treatment\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <div className=\"card-body\">\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvTreatmentExperience\">\r\n                              Treatment experience\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvTreatmentExperience\"\r\n                              id=\"hbvTreatmentExperience\"\r\n                              value={formik.values.hbvTreatmentExperience}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option>Select</option>\r\n                              <option value={true}>Yes</option>\r\n                              <option value={false}>No</option>\r\n                            </select>\r\n                            {formik.errors.hbvTreatmentExperience !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvTreatmentExperience}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {formik.values.hbvTreatmentExperience && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvPastTreatmentRegimen\">\r\n                                Past treatment regime\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvPastTreatmentRegimen\"\r\n                                id=\"hbvPastTreatmentRegimen\"\r\n                                value={formik.values.hbvPastTreatmentRegimen}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvPastTreatmentRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvNewRegimen\">New regime</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbvNewRegimen\"\r\n                              id=\"hbvNewRegimen\"\r\n                              value={formik.values.hbvNewRegimen}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {formik.errors.hbvNewRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvNewRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {formik.values.hbvNewRegimen !== \"\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvDateStarted\">Date started</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"hbvDateStarted\"\r\n                                id=\"hbvDateStarted\"\r\n                                value={formik.values.hbvDateStarted}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvDateStarted !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvHistoryOfAdverseEffect\">\r\n                              History of adverse effect\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvHistoryOfAdverseEffect\"\r\n                              id=\"hbvHistoryOfAdverseEffect\"\r\n                              value={formik.values.hbvHistoryOfAdverseEffect}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option>Select</option>\r\n                              <option value={true}>Yes</option>\r\n                              <option value={false}>No</option>\r\n                            </select>\r\n                            {formik.errors.hbvHistoryOfAdverseEffect !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvHistoryOfAdverseEffect}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvPastTreatmentRegimen\">\r\n                              Hbv Past treatment regimen\r\n                            </Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbvPastTreatmentRegimen\"\r\n                              id=\"hbvPastTreatmentRegimen\"\r\n                              value={formik.values.hbvPastTreatmentRegimen}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n\r\n                            {formik.errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvPastTreatmentRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Regimen Switch\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hbvTreatmentRegimenSwitch:\r\n                              !prevState.hbvTreatmentRegimenSwitch,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hbvTreatmentRegimenSwitch}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchNewRegimen\">\r\n                                New Regimen\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvRegimeSwitchNewRegimen\"\r\n                                id=\"hbvRegimeSwitchNewRegimen\"\r\n                                value={formik.values.hbvRegimeSwitchNewRegimen}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvRegimeSwitchNewRegimen !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvRegimeSwitchNewRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchDateStarted\">\r\n                                Date Started{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"hbvRegimeSwitchDateStarted\"\r\n                                id=\"hbvRegimeSwitchDateStarted\"\r\n                                value={formik.values.hbvRegimeSwitchDateStarted}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvRegimeSwitchDateStarted !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvRegimeSwitchDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchHistoryOfAdverseEffect\">\r\n                                Adverse effect reported\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbvRegimeSwitchHistoryOfAdverseEffect\"\r\n                                id=\"hbvRegimeSwitchHistoryOfAdverseEffect\"\r\n                                value={\r\n                                  formik.values\r\n                                    .hbvRegimeSwitchHistoryOfAdverseEffect\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option>Select</option>\r\n                                <option value={true}>Yes</option>\r\n                                <option value={false}>No</option>\r\n                              </select>\r\n                              {formik.errors\r\n                                .hbvRegimeSwitchHistoryOfAdverseEffect !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hbvRegimeSwitchHistoryOfAdverseEffect\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchReason\">\r\n                                Reason for switch\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvRegimeSwitchReason\"\r\n                                id=\"hbvRegimeSwitchReason\"\r\n                                value={formik.values.hbvRegimeSwitchReason}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvRegimeSwitchReason !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvRegimeSwitchReason}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchDateStopped\">\r\n                                Date Stopped{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"hbvRegimeSwitchDateStopped\"\r\n                                id=\"hbvRegimeSwitchDateStopped\"\r\n                                value={formik.values.hbvRegimeSwitchDateStopped}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvRegimeSwitchDateStopped !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvRegimeSwitchDateStopped}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Reason for treatment\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hbvTreatmentReasonforTreatment:\r\n                              !prevState.hbvTreatmentReasonforTreatment,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse\r\n                      in={isDropdownsOpen.hbvTreatmentReasonforTreatment}\r\n                    >\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvReasonForTreatmentEligibility\">\r\n                                Reasons for treatment\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbvReasonForTreatmentEligibility\"\r\n                                id=\"hbvReasonForTreatmentEligibility\"\r\n                                onChange={formik.handleChange}\r\n                                value={\r\n                                  formik.values.hbvReasonForTreatmentEligibility\r\n                                }\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"treatment eligible\"}>\r\n                                  Treatment Eligible\r\n                                </option>\r\n                                <option value={\"hbv pmtct\"}>HBV PMTCT</option>\r\n                              </select>\r\n                              {formik.errors\r\n                                .hbvReasonForTreatmentEligibility !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hbvReasonForTreatmentEligibility\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvReasonsForTreatmentComment\">\r\n                                Comment\r\n                              </Label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                name=\"hbvReasonsForTreatmentComment\"\r\n                                id=\"hbvReasonsForTreatmentComment\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={\r\n                                  formik.values.hbvReasonsForTreatmentComment\r\n                                }\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                  height: \"80px\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hbvReasonsForTreatmentComment !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvReasonsForTreatmentComment}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Hepatitis C Treatment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div className=\"card-body\">\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvTreatmentExperience\">\r\n                              Treatment experience\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hcvTreatmentExperience\"\r\n                              id=\"hcvTreatmentExperience\"\r\n                              value={formik.values.hcvTreatmentExperience}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option>Select</option>\r\n                              <option value={true}>Yes</option>\r\n                              <option value={false}>No</option>\r\n                            </select>\r\n                            {formik.errors.hcvTreatmentExperience !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvTreatmentExperience}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {formik.values.hcvTreatmentExperience && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvPastTreatmentExperience\">\r\n                                Past treatment experience\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hcvPastTreatmentExperience\"\r\n                                id=\"hcvPastTreatmentExperience\"\r\n                                value={formik.values.hcvPastTreatmentExperience}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hcvPastTreatmentExperience !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvPastTreatmentExperience}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvDateStarted\">Date started</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hcvDateStarted\"\r\n                              id=\"hcvDateStarted\"\r\n                              value={formik.values.hcvDateStarted}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {formik.errors.hcvDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvDateCompleted\">Date completed</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hcvDateCompleted\"\r\n                              id=\"hcvDateCompleted\"\r\n                              value={formik.values.hcvDateCompleted}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {formik.errors.hcvDateCompleted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvDateCompleted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvPrescribedDuration\">\r\n                              Prescribed duration\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvPrescribedDuration\"\r\n                              id=\"hcvPrescribedDuration\"\r\n                              value={formik.values.hcvPrescribedDuration}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"8 weeks\">8 weeks</option>\r\n                              <option value=\"12 weeks\">12 weeks</option>\r\n                              <option value=\"24 weeks\">24 weeks</option>\r\n                            </select>\r\n                            {formik.errors.hcvPrescribedDuration !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvPrescribedDuration}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvAdverseEventReported\">\r\n                              Adverse Effect reported\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvAdverseEventReported\"\r\n                              id=\"hcvAdverseEventReported\"\r\n                              value={formik.values.hcvAdverseEventReported}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"yes\">Yes</option>\r\n                              <option value=\"no\">12 weeks</option>\r\n                            </select>\r\n                            {formik.errors.hcvAdverseEventReported !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvAdverseEventReported}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvNewRegimen\">HCV new regimen</Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvNewRegimen\"\r\n                              id=\"hcvNewRegimen\"\r\n                              value={formik.values.hcvNewRegimen}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option>Select</option>\r\n                              <option value={true}>Yes</option>\r\n                              <option value={false}>No</option>\r\n                            </select>\r\n                            {formik.errors.hcvNewRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvNewRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Regimen Switch\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hbvTreatmentRegimenSwitch:\r\n                              !prevState.hbvTreatmentRegimenSwitch,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hbvTreatmentRegimenSwitch}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          {/* <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRegimeSwitchNewRegimen\">\r\n                                New regime\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hcvRegimeSwitchNewRegimen\"\r\n                                id=\"hcvRegimeSwitchNewRegimen\"\r\n                                value={formik.values.hcvRegimeSwitchNewRegimen}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hcvRegimeSwitchNewRegimen !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRegimeSwitchNewRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div> */}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRegimeSwitchDateStarted\">\r\n                                Date started\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"hcvRegimeSwitchDateStarted\"\r\n                                id=\"hcvRegimeSwitchDateStarted\"\r\n                                value={formik.values.hcvRegimeSwitchDateStarted}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hcvRegimeSwitchDateStarted !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRegimeSwitchDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRegimeSwitchDateStopped\">\r\n                                Date stopped\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"hcvRegimeSwitchDateStopped\"\r\n                                id=\"hcvRegimeSwitchDateStopped\"\r\n                                value={formik.values.hcvRegimeSwitchDateStopped}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hcvRegimeSwitchDateStopped !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRegimeSwitchDateStopped}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          {/* <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRegimeSwitchPrescribedDuration\">\r\n                                Prescribed duration\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRegimeSwitchPrescribedDuration\"\r\n                                id=\"hcvRegimeSwitchPrescribedDuration\"\r\n                                value={\r\n                                  formik.values\r\n                                    .hcvRegimeSwitchPrescribedDuration\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"8 weeks\">8 weeks</option>\r\n                                <option value=\"12 weeks\">12 weeks</option>\r\n                                <option value=\"24 weeks\">24 weeks</option>\r\n                              </select>\r\n                              {formik.errors\r\n                                .hcvRegimeSwitchPrescribedDuration !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hcvRegimeSwitchPrescribedDuration\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div> */}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRegimeSwitchHistoryOfAdverseEffect\">\r\n                                Adverse effect\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hcvRegimeSwitchHistoryOfAdverseEffect\"\r\n                                id=\"hcvRegimeSwitchHistoryOfAdverseEffect\"\r\n                                value={\r\n                                  formik.values\r\n                                    .hcvRegimeSwitchHistoryOfAdverseEffect\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"yes\">Yes</option>\r\n                                <option value=\"no\">No</option>\r\n                              </select>\r\n\r\n                              {formik.errors\r\n                                .hcvRegimeSwitchHistoryOfAdverseEffect !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hcvRegimeSwitchHistoryOfAdverseEffect\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      SVR 12 Testing\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hcvTreatmentSvr12Testing:\r\n                              !prevState.hcvTreatmentSvr12Testing,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hcvTreatmentSvr12Testing}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hcvTreatmentSvr12Testing}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingDateStarted\">\r\n                                Date tested\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingDateStarted\"\r\n                                id=\"svr12TestingDateStarted\"\r\n                                type=\"date\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.svr12TestingDateStarted}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.svr12TestingDateStarted !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRna\">\r\n                                HCV RNA <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRna\"\r\n                                id=\"svr12TestingHcvRna\"\r\n                                value={formik.values.svr12TestingHcvRna}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"DETECTED\">Detected</option>\r\n                                <option value=\"UNDETECTED\">Undetected</option>\r\n                              </select>\r\n                              {formik.errors.svr12TestingHcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingHcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          {formik.values.svr12TestingHcvRna === \"DETECTED\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"svr12TestingHcvRnaValue\">\r\n                                  Input HCV RNA value\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  name=\"svr12TestingHcvRnaValue\"\r\n                                  id=\"svr12TestingHcvRnaValue\"\r\n                                  type=\"text\"\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  value={formik.values.svr12TestingHcvRnaValue}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.svr12TestingHcvRnaValue !==\r\n                                \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.svr12TestingHcvRnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRnaValue\">\r\n                                Input HCV RNA value\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRnaValue\"\r\n                                id=\"svr12TestingHcvRnaValue\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.svr12TestingHcvRnaValue}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.svr12TestingHcvRnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingHcvRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div> */}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12RetreatmentDateTested\">\r\n                                Retreatment date tested\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12RetreatmentDateTested\"\r\n                                id=\"svr12RetreatmentDateTested\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.svr12RetreatmentDateTested}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                type=\"date\"\r\n                              />\r\n\r\n                              {formik.errors.svr12RetreatmentDateTested !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12RetreatmentDateTested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12RetreatmentHcvRna\">\r\n                                Retreatment HCV RNA(IU/ml)\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"svr12RetreatmentHcvRna\"\r\n                                id=\"svr12RetreatmentHcvRna\"\r\n                                value={formik.values.svr12RetreatmentHcvRna}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"DETECTED\">Detected</option>\r\n                                <option value=\"UNDETECTED\">Undetected</option>\r\n                              </select>\r\n                              {formik.errors.svr12RetreatmentHcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12RetreatmentHcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          {formik.values.svr12RetreatmentHcvRna ===\r\n                            \"DETECTED\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"svr12RetreatmentHcvRnaValue\">\r\n                                  Input Retreatment HCV RNA value(IU/ml)\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"svr12RetreatmentHcvRnaValue\"\r\n                                  id=\"svr12RetreatmentHcvRnaValue\"\r\n                                  value={\r\n                                    formik.values.svr12RetreatmentHcvRnaValue\r\n                                  }\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.svr12RetreatmentHcvRnaValue !==\r\n                                \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.svr12RetreatmentHcvRnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      HCV Retreatment\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hcvTreatmentRegimenHcvRetreatment:\r\n                              !prevState.hcvTreatmentRegimenHcvRetreatment,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={\r\n                        isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment\r\n                      }\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse\r\n                      in={isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment}\r\n                    >\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentNewRegime\">\r\n                                New regime\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentNewRegime\"\r\n                                id=\"hcvRetreatmentNewRegime\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRetreatmentNewRegime}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hcvRetreatmentNewRegime !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentNewRegime}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentPrescribedDuration\">\r\n                                Prescribed Duration\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentPrescribedDuration\"\r\n                                id=\"hcvRetreatmentPrescribedDuration\"\r\n                                value={\r\n                                  formik.values.hcvRetreatmentPrescribedDuration\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"8 weeks\">8 weeks</option>\r\n                                <option value=\"12 weeks\">12 weeks</option>\r\n                                <option value=\"24 weeks\">24 weeks</option>\r\n                              </select>\r\n                              {formik.errors\r\n                                .hcvRetreatmentPrescribedDuration !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hcvRetreatmentPrescribedDuration\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentDateStarted\">\r\n                                Date started\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentDateStarted\"\r\n                                id=\"hcvRetreatmentDateStarted\"\r\n                                type=\"date\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRetreatmentDateStarted}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hcvRetreatmentDateStarted !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentDateStopped\">\r\n                                Date stopped\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentDateStopped\"\r\n                                id=\"hcvRetreatmentDateStopped\"\r\n                                type=\"date\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRetreatmentDateStopped}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hcvRetreatmentDateStopped !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentDateStopped}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentAdverseEffect\">\r\n                                Retreatment Adverse effect\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentAdverseEffect\"\r\n                                id=\"hcvRetreatmentAdverseEffect\"\r\n                                value={\r\n                                  formik.values.hcvRetreatmentAdverseEffect\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option>Select</option>\r\n                                <option value={true}>Yes</option>\r\n                                <option value={false}>No</option>\r\n                              </select>\r\n                              {formik.errors.hcvRetreatmentAdverseEffect !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentAdverseEffect}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvHistoryOfAdverseEffect\">\r\n                                History of adverse effect\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvHistoryOfAdverseEffect\"\r\n                                id=\"hcvHistoryOfAdverseEffect\"\r\n                                value={formik.values.hcvHistoryOfAdverseEffect}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option>Select</option>\r\n                                <option value={true}>Yes</option>\r\n                                <option value={false}>No</option>\r\n                              </select>\r\n                              {formik.errors.hcvHistoryOfAdverseEffect !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvHistoryOfAdverseEffect}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentHcvGenotype\">\r\n                                HCV Genotype\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentHcvGenotype\"\r\n                                id=\"hcvRetreatmentHcvGenotype\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRetreatmentHcvGenotype}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hcvRetreatmentHcvGenotype !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentHcvGenotype}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-between\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<ArrowBackIcon />}\r\n                  onClick={moveBack}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n                </MatButton>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  // endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm3;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm2ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm4 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm2ValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: false,\r\n    hepatitisCDropdown: false,\r\n    coInfectionDropdown: false,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Diagnosis\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis B\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvTestRequested\">\r\n                                Date HBV test requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvTestRequested\"\r\n                                id=\"dateHbvTestRequested\"\r\n                                value={formik.values.dateHbvTestRequested}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvTestRequested !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvTestRequested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvSampleCollected\">\r\n                                Date HBV sample Requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvSampleCollected\"\r\n                                id=\"dateHbvSampleCollected\"\r\n                                value={formik.values.dateHbvSampleCollected}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvSampleCollected !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvSampleCollected}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvDnaResultReported\">\r\n                                Date of HBV DNA result reported{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvDnaResultReported\"\r\n                                id=\"dateHbvDnaResultReported\"\r\n                                value={formik.values.dateHbvDnaResultReported}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvDnaResultReported !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvDnaResultReported}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-2 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                HBV DNA(UI/ml){\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"detected\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Detected\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"undetected\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Undetected\r\n                                </label>\r\n\r\n                                {formik.errors.hbvDna !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDna}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </div>\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hbvDna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hbvDnaValue\">\r\n                                  Input HBV DNA value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hbvDnaValue\"\r\n                                  id=\"hbvDnaValue\"\r\n                                  value={formik.values.hbvDnaValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.hbvDnaValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"landmark\">HBsAG Quantification</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbsAgQuantification\"\r\n                                id=\"hbsAgQuantification\"\r\n                                value={formik.values.hbsAgQuantification}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbsAgQuantification ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbsAgQuantification}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbeAg\">HbeAG</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbeAg\"\r\n                                id=\"hbeAg\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hbeAg}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hbeAg !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbeAg}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"antiHdv\">Anti-HDV</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"antiHdv\"\r\n                                id=\"antiHdv\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.antiHdv}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                                <option value={\"not done\"}>Not Done</option>\r\n                              </select>\r\n                              {formik.errors.antiHdv !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.antiHdv}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"treatmentEligible\">\r\n                                Treatment Eligible\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"treatmentEligible\"\r\n                                id=\"treatmentEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.treatmentEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"yes\"}>Yes</option>\r\n                                <option value={\"no\"}>No</option>\r\n                              </select>\r\n                              {formik.errors.treatmentEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.treatmentEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"pmtctEligible\">PMTCT Eligible</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"pmtctEligible\"\r\n                                id=\"pmtctEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pmtctEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.pmtctEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.pmtctEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4-12\">\r\n                            <FormGroup>\r\n                              <Label for=\"comment\">Comment</Label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                name=\"comment\"\r\n                                id=\"comment\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.comment}\r\n                                cols=\"50\"\r\n                                rows=\"30\"\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                  height: \"120px\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.comment !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.comment}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis C\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRna\">HCV RNA (IU/ml)</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRna\"\r\n                                id=\"hcvRna\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRna}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"detected\"}>Detected</option>\r\n                                <option value={\"undetected\"}>Undetected</option>\r\n                              </select>\r\n                              {formik.errors.hcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hcvRna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hcvValue\">\r\n                                  Input HCV RNA Value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hcvValue\"\r\n                                  id=\"hcvValue\"\r\n                                  value={formik.values.hcvValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n                                {formik.errors.hcvValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hcvValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hepatitisCoInfection\">\r\n                                Hepatitis Coinfection\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hepatitisCoInfection\"\r\n                                id=\"hepatitisCoInfection\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hepatitisCoInfection}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                multiple\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"hbv/hcv\"}>HBV/HCV</option>\r\n                                <option value={\"hcv/hiv\"}>HCV/HIV</option>\r\n                                <option value={\"hbv/hdv\"}>HBV/HDV</option>\r\n                                <option value={\"hbv/hcd/hiv\"}>\r\n                                  HBV/HCD/HIV\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hepatitisCoInfection !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hepatitisCoInfection}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"commobidities\">\r\n                                Commobidities{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"commobidities\"\r\n                                id=\"commobidities\"\r\n                                value={formik.values.commobidities}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.commobidities !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.commobidities}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pst\">PST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"pst\"\r\n                          id=\"pst\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.pst}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.pst !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pst}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.pst === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pstValue\">\r\n                            Input PST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pstValue\"\r\n                            id=\"pstValue\"\r\n                            value={formik.values.pstValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pstValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pstValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBilirubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBilirubin\"\r\n                          id=\"totalBilirubin\"\r\n                          value={formik.values.totalBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBilirubin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBilirubin\"\r\n                          id=\"directBilirubin\"\r\n                          value={formik.values.directBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTime\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTime\"\r\n                          id=\"prothrombinTime\"\r\n                          value={formik.values.prothrombinTime}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTime !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTime}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">\r\n                          Ultrasound scan (μmol/L)\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"acites\">Acites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acites\"\r\n                          id=\"acites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.acites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.acites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.acites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik.values.ascites === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"severityOfAscites\">\r\n                            Severity of ascites\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"severityOfAscites\"\r\n                            id=\"severityOfAscites\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.severityOfAscites}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"mild\"}>Mild</option>\r\n                            <option value={\"moderate\"}>Moderate</option>\r\n                            <option value={\"massive/gross\"}>\r\n                              Massive/Gross\r\n                            </option>\r\n                          </select>\r\n                          {formik.errors.severityOfAscites !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.severityOfAscites}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"F-0\"}> No Fibrosis</option>\r\n                          <option value={\"F-1\"}>Mild Fibrosis</option>\r\n                          <option value={\"F-2\"}>Moderate Fibrosis</option>\r\n                          <option value={\"F-3\"}> Severe Fibrosis</option>\r\n                          <option value={\"F-4\"}>Cirrhosis</option>\r\n                          <option value={\"not done\"}>Not done</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis\"\r\n                          id=\"diagnosis\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"no fibrosis\"}> No Fibrosis</option>\r\n                          <option value={\"fibrosis\"}>Fibrosis</option>\r\n                          <option value={\"cirrhosis\"}>Cirrhosis</option>\r\n                          <option value={\"hcc\"}>HCC</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.diagnosis !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-between\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<ArrowBackIcon />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n                </MatButton>\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm4;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n// import classNames from 'classnames';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\n// import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\n// import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from \"@material-ui/core/Divider\";\r\n// import { Button } from 'semantic-ui-react';\r\n// import {Label,} from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n// import axios from \"axios\";\r\n// import { url as baseUrl, token } from \"./../../../api\";\r\n// import Typography from '@material-ui/core/Typography';\r\n// import CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCardFollowup(props) {\r\n  const { classes } = props;\r\n  // const patientObj = props.patientObj;\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  // console.log(patientObj);\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  const get_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    Bolanle Bassey\r\n                  </b>\r\n                  <Link to={\"/\"}>\r\n                    <ButtonMui\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-end ms-2 mr-2 mt-2\"\r\n                      //startIcon={<FaUserPlus size=\"10\"/>}\r\n                      startIcon={<TiArrowBack />}\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                        color: \"#fff\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                    </ButtonMui>\r\n                  </Link>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Patient ID :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      KEB/SYMH/COM/017/07/23\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>2019-07-04</b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      4 year(s)\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Gender :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      Female\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                     0\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      Gulumbe\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCardFollowup.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCardFollowup);\r\n","import React from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Form } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateFollowupFormValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\r\nimport PatientCardFollowUp from \"./PatientCardFollowUp\";\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst FollowupForm = () => {\r\n  const onSubmitHandler = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const { formik } = useValidateFollowupFormValuesHook(onSubmitHandler);\r\n  return (\r\n    <>\r\n      <CardContent>\r\n        <PatientCardFollowUp />\r\n      </CardContent>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Preliminary\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfVisit\">\r\n                            Date of visit{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfVisit\"\r\n                            id=\"dateOfVisit\"\r\n                            value={formik.initialValues.dateOfVisit}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.dateOfVisit !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.dateOfVisit}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"bloodPressure\">\r\n                            Blood pressure (mmHg)\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"bloodPressure\"\r\n                            id=\"bloodPressure\"\r\n                            value={formik.initialValues.bloodPressure}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.bloodPressure !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.bloodPressure}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"weight\">\r\n                            Weight <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"weight\"\r\n                            id=\"weight\"\r\n                            value={formik.initialValues.weight}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.weight !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.weight}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"height\">\r\n                            Height <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"height\"\r\n                            id=\"height\"\r\n                            value={formik.initialValues.height}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.height !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.height}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"bmi\">BMI </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"bmi\"\r\n                            id=\"bmi\"\r\n                            value={formik.initialValues.bmi}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.bmi !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.bmi}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbeAg\">HbeAG</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hbeAg\"\r\n                            id=\"hbeAg\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.hbeAg}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"reactive\"}>Reactive</option>\r\n                            <option value={\"non-reactive\"}>Non Reactive</option>\r\n                          </select>\r\n                          {formik.errors.hbeAg !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbeAg}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvDna\">HBV DNA (IU/mL)</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hbvDna\"\r\n                            id=\"hbvDna\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.hbvDna}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"detected\"}>Detected</option>\r\n                            <option value={\"undetected\"}>Undetected</option>\r\n                          </select>\r\n                          {formik.errors.hbvDna !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbvDna}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"landmark\">HBsAG Quantification</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hbsAgQuantification\"\r\n                            id=\"hbsAgQuantification\"\r\n                            value={formik.values.hbsAgQuantification}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.hbsAgQuantification ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbsAgQuantification}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST (UI/mL)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT (UI/mL)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"plt\">PLT (mm3)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"plt\"\r\n                          id=\"plt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.plt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.plt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.plt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.pst === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pstValue\">\r\n                            Input PST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pstValue\"\r\n                            id=\"pstValue\"\r\n                            value={formik.values.pstValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pstValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pstValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBilirubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBilirubin\"\r\n                          id=\"totalBilirubin\"\r\n                          value={formik.values.totalBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"albumin\">\r\n                          Albumin <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"albumin\"\r\n                          id=\"albumin\"\r\n                          value={formik.values.albumin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.albumin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.albumin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBilirubin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBilirubin\"\r\n                          id=\"directBilirubin\"\r\n                          value={formik.values.directBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTime\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTime\"\r\n                          id=\"prothrombinTime\"\r\n                          value={formik.values.prothrombinTime}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTime !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTime}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">Ultrasound scan</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ctScan\">CT scan</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ctScan\"\r\n                          id=\"ctScan\"\r\n                          value={formik.values.ctScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ctScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ctScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"acites\">Acites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acites\"\r\n                          id=\"acites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.acites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.acites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.acites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"severityOfAscites\">\r\n                          Severity of ascites\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"severityOfAscites\"\r\n                          id=\"severityOfAscites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.severityOfAscites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"mild\"}>Mild</option>\r\n                          <option value={\"moderate\"}>Moderate</option>\r\n                          <option value={\"massive/gross\"}>Massive/Gross</option>\r\n                        </select>\r\n                        {formik.errors.severityOfAscites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.severityOfAscites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"F-0\"}> No Fibrosis</option>\r\n                          <option value={\"F-1\"}>Mild Fibrosis</option>\r\n                          <option value={\"F-2\"}>Moderate Fibrosis</option>\r\n                          <option value={\"F-3\"}> Severe Fibrosis</option>\r\n                          <option value={\"F-4\"}>Cirrhosis</option>\r\n                          <option value={\"not done\"}>Not done</option>\r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"stagingDateForLiverBiopsy\">\r\n                          Staging date for liver{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"stagingDateForLiverBiopsy\"\r\n                          id=\"stagingDateForLiverBiopsy\"\r\n                          value={formik.values.stagingDateForLiverBiopsy}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.stagingDateForLiverBiopsy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.stagingDateForLiverBiopsy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis\"\r\n                          id=\"diagnosis\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"no fibrosis\"}> No Fibrosis</option>\r\n                          <option value={\"fibrosis\"}>Fibrosis</option>\r\n                          <option value={\"cirrhosis\"}>Cirrhosis</option>\r\n                          <option value={\"hcc\"}>HCC</option>\r\n                        </select>\r\n                        {formik.errors.diagnosis !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Appointment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"treatmentRegimen\">\r\n                          Treatment regimen\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"treatmentRegimen\"\r\n                          id=\"treatmentRegimen\"\r\n                          value={formik.initialValues.treatmentRegimen}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.treatmentRegimen !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.treatmentRegimen}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"nextAppointment\">\r\n                          Next appointment\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"nextAppointment\"\r\n                          id=\"nextAppointment\"\r\n                          value={formik.initialValues.nextAppointment}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.nextAppointment !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.dateOfHepatitisBPositiveScreening}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"clinicalName\">Clinical Name </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"clinicalName\"\r\n                          id=\"clinicalName\"\r\n                          value={formik.initialValues.clinicalName}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.clinicalName !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.clinicalName}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4-12\">\r\n                      <FormGroup>\r\n                        <Label for=\"remark\">Remark</Label>\r\n                        <textarea\r\n                          className=\"form-control\"\r\n                          name=\"remark\"\r\n                          id=\"remark\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.remark}\r\n                          cols=\"50\"\r\n                          rows=\"30\"\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                            height: \"120px\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.remark !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.remark}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FollowupForm;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  '../patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <br /><br/>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date Registration<span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                      <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <FormGroup> \r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"location\"\r\n                                              id=\"location\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.location} >\r\n                                              <option value=\"\" >Select</option>\r\n                                              <option value=\"Facility\" >Facility</option>\r\n                                              <option value=\"Community\" >Community</option>\r\n                                          </Input>\r\n                                      </FormGroup> \r\n                                      {errors.location !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.location}</span>\r\n                                      ) : \"\" }                                        \r\n                                      \r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-4\">\r\n                                      <FormGroup>\r\n                                      <Label >Facility Name </Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"text\"\r\n                                              name=\"vaccinationFacility\"\r\n                                              id=\"vaccinationFacility\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccinationFacility}>\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.vaccinationFacility !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              )}\r\n                                        \r\n                                        <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n                                            </div>\r\n                                            </div>\r\n                                            </div>\r\n                    \r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                            <h5 className=\"card-title\" style={{color:'#fff'}}>VH Laboratory register</h5>\r\n                                            {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                        </div>\r\n                                        {showContactCard && (\r\n                                        <div className=\"card-body\">\r\n                                            <div className={\"row\"}>\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Clinic/Unit where test request was ordered</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HBV screening</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>HBcAb (Total)</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">HBsAg quantification(IU/ml)</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HBeAg</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Anti-HDV</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                    </div>\r\n                                                    <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HBV DNA (Write exact result)</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HCV screening</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Type of HCV RNA test</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Hepatitis C Virus RNA Testing</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                    </div>\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">HCV RNA Write exact result(IU/ml)</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>HIV Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}>\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                            </div>\r\n                                          </div>\r\n                                      </div>\r\n                                )}\r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br/>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Steppers from \"./Stepper/Stepper\";\r\nimport ViralHepatitisForm1 from \"./ViralHepatitisForms/Form1\";\r\nimport ViralHepatitisForm2 from \"./ViralHepatitisForms/Form2\";\r\nimport ViralHepatitisForm3 from \"./ViralHepatitisForms/Form3\";\r\nimport ViralHepatitisForm4 from \"./ViralHepatitisForms/Form4\";\r\nimport FollowupForm from \"./ViralHepatitisForms/FollowUp\";\r\nimport LaboratoryRegister from \"./ViralHepatitisForms/LaboratoryRegister\";\r\nimport { useLocalStorageState } from \"../../hooks/useLocalStorageState\";\r\n\r\n\r\nconst ViralHepatitisFormsContainer = (props) => {\r\n  \r\n\r\n  const [step, setStep] = useLocalStorageState(\r\n    \"hepatitis-enrollment-form-step\",\r\n    0\r\n  );\r\n  const formMap = {\r\n    0: <ViralHepatitisForm1 step={step} setStep={setStep} />,\r\n    1: <ViralHepatitisForm2 step={step} setStep={setStep} />,\r\n    2: <ViralHepatitisForm3 step={step} setStep={setStep} />,\r\n    // 3: <FollowupForm step={step} setStep={setStep}/>,\r\n    // 4: <LaboratoryRegister/>,\r\n  };\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Viral Hepatitis /</Link>New Client\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/\",\r\n          state: \"users\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mr-10 pr-10\"\r\n          style={{\r\n            backgroundColor: \"#014d88\",\r\n            fontWeight: \"bolder\",\r\n            margingRight: \"-40px\",\r\n          }}\r\n          startIcon={<TiArrowBack />}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n            Back{\" \"}\r\n          </span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n      <Steppers activeStep={step} />\r\n      {formMap[step]}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisFormsContainer;\r\n","import * as React from 'react'\r\n\r\n/**\r\n *\r\n * @param {String} key The key to set in localStorage for this value\r\n * @param {Object} defaultValue The value to use if it is not already in localStorage\r\n * @param {{serialize: Function, deserialize: Function}} options The serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse respectively)\r\n */\r\n\r\nfunction useLocalStorageState(\r\n  key,\r\n  defaultValue = '',\r\n  // the = {} fixes the error we would get from destructuring when no argument was passed\r\n  // Check https://jacobparis.com/blog/destructure-arguments for a detailed explanation\r\n  {serialize = JSON.stringify, deserialize = JSON.parse} = {},\r\n) {\r\n  const [state, setState] = React.useState(() => {\r\n    const valueInLocalStorage = window.localStorage.getItem(key)\r\n    if (valueInLocalStorage) {\r\n      // the try/catch is here in case the localStorage value was set before\r\n      // we had the serialization in place (like we do in previous extra credits)\r\n      try {\r\n        return deserialize(valueInLocalStorage)\r\n      } catch (error) {\r\n        window.localStorage.removeItem(key)\r\n      }\r\n    }\r\n    return typeof defaultValue === 'function' ? defaultValue() : defaultValue\r\n  })\r\n\r\n  const prevKeyRef = React.useRef(key)\r\n\r\n  // Check the example at src/examples/local-state-key-change.js to visualize a key change\r\n  React.useEffect(() => {\r\n    const prevKey = prevKeyRef.current\r\n    if (prevKey !== key) {\r\n      window.localStorage.removeItem(prevKey)\r\n    }\r\n    prevKeyRef.current = key\r\n    window.localStorage.setItem(key, serialize(state))\r\n  }, [key, state, serialize])\r\n\r\n  return [state, setState]\r\n}\r\n\r\nexport {useLocalStorageState}","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\n// import RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport ViralHepatitisFormsContainer from \"./main/webapp/jsx/components/Patient/ViralHepatitisFormsContainer\";\r\nimport FollowupForm from \"./main/webapp/jsx/components/Patient/ViralHepatitisForms/FollowUp\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            {/* <PatientDetail /> */}\r\n            <FollowupForm/>\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <ViralHepatitisFormsContainer />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}